{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gi\u1edbi thi\u1ec7u","text":"<p>T\u1ed5 h\u1ee3p c\u00e1c lo\u1ea1i ng\u00f4n ng\u1eef k\u1ef9 thu\u1eadt.</p>"},{"location":"NonProgramming/non-programming-language/","title":"Non Programming","text":""},{"location":"NonProgramming/Mermaid/mermaid-overview/","title":"Mermaid Overview","text":"<pre><code>flowchart LR\nA[Christmas] --&gt;|Get money| B(Go shopping)\nB --&gt; C{Let me think}\nC --&gt;|One| D[Laptop]\nC --&gt;|Two| E[iPhone]\nC --&gt;|Three| F[fa:fa-car Car]</code></pre>"},{"location":"Practice/leetcode-0039/","title":"39. Combination Sum","text":"<p>Link: https://leetcode.com/problems/combination-sum/</p>"},{"location":"Practice/leetcode-0039/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<ul> <li>Cho \u0111\u1ea7u v\u00e0o l\u00e0 chu\u1ed7i s\u1ed1 nguy\u00ean <code>candidates</code> v\u00e0 m\u1ed9t s\u1ed1 nguy\u00ean <code>target</code></li> <li>Tr\u1ea3 v\u1ec1 t\u1ea5t c\u1ea3 t\u1ed5 h\u1ee3p c\u00f3 th\u1ec3 c\u1ee7a c\u00e1c s\u1ed1 trong <code>candidates</code> sao cho c\u00e1c s\u1ed1 \u0111\u00f3 c\u00f3 t\u1ed5ng b\u1eb1ng v\u1edbi <code>target</code></li> </ul> candidates target result <code>{2,3,6,7}</code> <code>7</code> <code>[[2,2,3],[7]]</code> <code>{2,3,5}</code> <code>8</code> <code>{{2,2,2,2},{2,3,3},{3,5}}</code> <ul> <li>1 &lt;= <code>candidates.length</code> &lt;= 30</li> <li>2 &lt;= <code>candidates[i]</code> &lt;= 40</li> <li>T\u1ea9t c\u1ea3 c\u00e1c s\u1ed1 trong candidates \u0111\u1ec1u kh\u00e1c nhau</li> <li>1 &lt;= <code>target</code> &lt;= 40</li> </ul>"},{"location":"Practice/leetcode-0039/#giai-thuat","title":"Gi\u1ea3i thu\u1eadt","text":"<p>Backtracking</p> <p>T\u01b0 duy c\u1ee7a m\u00ecnh khi gi\u1ea3i b\u00e0i n\u00e0y th\u1ebf n\u00e0o? T\u01b0\u1edfng t\u01b0\u1ee3ng m\u00ecnh l\u00e0 ng\u01b0\u1eddi th\u1ee3 \u0111\u00e0o m\u1ecf</p> <ul> <li>G\u1ecdi chu\u1ed7i \u0111\u1ea7u v\u00e0o l\u00e0 t\u1eadp \\(I={i_0, i_1, ..., i_k}\\)</li> <li>Tr\u01b0\u1edbc h\u1ebft, c\u1ea7n ph\u1ea3i s\u1eafp x\u1ebfp l\u1ea1i chu\u1ed7i \\(I\\) sao cho  \\(i_0 &lt; i_1 &lt; ... &lt; i_k\\)</li> <li>\u0110\u1ea7u ti\u00ean c\u1ea7n t\u01b0\u1edfng t\u01b0\u1ee3ng r\u1eb1ng m\u00ecnh gi\u1ed1ng nh\u01b0 ng\u01b0\u1eddi th\u1ee3 \u0111i \u0111\u00e0o m\u1ecf qua t\u1eebng t\u1ea7ng \u0111\u1ec3 \u0111\u00e0o v\u00e0ng v\u00e0 c\u1ea7m theo m\u1ed9t c\u00e1i t\u00fai ch\u1ec9 v\u1eeba \u0111\u1ee7 target:</li> <li>Ch\u1ee7 nh\u00e2n ch\u1ec9 ch\u1ea5p nh\u1eadn s\u1ed1 \u0111\u00e1 c\u00f3 t\u1ed5ng l\u00e0 m\u1ed9t m\u1ee5c ti\u00eau (target \\(T\\)) x\u00e1c \u0111\u1ecbnh.</li> <li>\u1ede m\u1ed7i t\u1ea7ng ch\u1ec9 \u0111\u01b0\u1ee3c nh\u1eb7t 1 vi\u00ean \u0111\u00e1.</li> <li>\u1ed7i t\u1ea7ng ch\u1ec9 \u0111\u01b0\u1ee3c nh\u1eb7t 1 vi\u00ean \u0111\u00e1.</li> <li>C\u00f3 th\u1ec3 ch\u1ecdn nh\u1eb7t \u0111\u00e1 c\u00f3 k\u00edch th\u01b0\u1edbc gi\u1ed1ng nhau \u1edf c\u00e1c t\u1ea7ng kh\u00e1c nhau, nh\u01b0ng cu\u1ed1i c\u00f9ng c\u00e1c k\u1ebft qu\u1ea3 c\u00f3 t\u1ed5 h\u1ee3p gi\u1ed1ng nhau c\u1ea7n b\u1ecb lo\u1ea1i b\u1ecf.<ul> <li>Gi\u1ea3i th\u00edch: Ngh\u0129a l\u00e0 gi\u1ea3 s\u1eed \u0111i qua ba t\u1ea7ng, \u0111\u00e1 nh\u1eb7t c\u00f3 th\u1ee9 t\u1ef1 l\u1ea7n l\u01b0\u1ee3t l\u00e0 <code>1,2,3</code> v\u00e0 <code>3,2,1</code> th\u00ec k\u1ebft qu\u1ea3 s\u1ebd b\u1ecb t\u00ednh l\u00e0 gi\u1ed1ng nhau v\u00e0 lo\u1ea1i b\u1ecf. (V\u1edbi m\u1ee5c ti\u00eau gi\u1ea3 \u0111\u1ecbnh l\u00e0 <code>6</code>)</li> </ul> </li> <li>N\u1ebfu m\u00ecnh l\u00e0 th\u1ee3 m\u1ecf s\u1ebd th\u1ef1c hi\u1ec7n nh\u01b0 sau:</li> <li>V\u00ec c\u00f3 th\u1ec3 nh\u1eb7t l\u1ea1i vi\u00ean \u0111\u00e1 c\u00f3 k\u00edch th\u01b0\u1edbc gi\u1ed1ng nhau n\u00ean h\u00e3y coi nh\u01b0 m\u1ed7i t\u1ea7ng \u0111\u00e1 s\u1ebd l\u1ea1i \u0111\u01b0\u1ee3c ph\u1ee5c h\u1ed3i l\u1ea1i. Hay m\u1ed7i t\u1ea7ng \u0111\u1ec1u c\u00f3 \u0111\u00e1 \\(I={i_0, i_1, ..., i_k}\\) l\u00e0 nh\u01b0 nhau.</li> <li>\u0110i m\u1ed7i t\u1ea7ng nh\u1eb7t \u0111\u00e1, ch\u1ec9 1 vi\u00ean \u0111\u00e1, theo c\u00e1c lu\u1eadt sau:<ol> <li>\u0110\u00e1 nh\u1eb7t \u1edf m\u1ed7i t\u1ea7ng ph\u1ea3i theo th\u1ee9 t\u1ef1 t\u1eeb nh\u1ecf nh\u1ea5t \u0111\u1ebfn l\u1edbn nh\u1ea5t.</li> <li>N\u1ebfu \u0111\u00e1 \u0111\u00f3 c\u00f3 th\u1ec3 nh\u1eb7t, h\u00e3y b\u1ecf v\u00e0o gi\u1ecf v\u00e0 c\u1eadp nh\u1eadt dung l\u01b0\u1ee3ng.</li> <li>\u0110\u00e1 c\u00f3 th\u1ec3 nh\u1eb7t l\u00e0 \u0111\u00e1 m\u00e0 t\u00fai c\u00f3 th\u1ec3 ch\u1ee9a \u0111\u01b0\u1ee3c vi\u00ean \u0111\u00e1 (ngh\u0129a l\u00e0 khi th\u00eam vi\u00ean \u0111\u00e1 \u0111\u00f3 v\u00e0o t\u00fai v\u1eabn ch\u01b0a v\u01b0\u1ee3t qu\u00e1 dung t\u00edch).</li> <li>N\u1ebfu ch\u01b0a \u0111\u1ee7 target, h\u00e3y \u0111i ti\u1ebfp xu\u1ed1ng t\u1ea7ng d\u01b0\u1edbi v\u00e0 l\u1eb7p l\u1ea1i, nh\u1eb7t vi\u00ean b\u00e9 nh\u1ea5t.</li> <li>N\u1ebfu v\u1eeba \u0111\u1ee7 target, h\u00e3y li\u1ec7t k\u00ea v\u00e0 l\u01b0u l\u1ea1i danh s\u00e1ch c\u1ea3 s\u1ed1 \u0111\u00e1 hi\u1ec7n c\u00f3 trong gi\u1ecf.</li> <li>S\u1eed d\u1ee5ng <code>std::sort</code> \u0111\u1ec3 s\u1eafp x\u1ebfp l\u1ea1i \u0111\u00e1 trong danh s\u00e1ch, vi\u1ec7c n\u00e0y s\u1ebd h\u1ed7 tr\u1ee3 lo\u1ea1i b\u1ecf c\u00e1c k\u1ebft qu\u1ea3 gi\u1ed1ng nhau.</li> <li>N\u1ebfu vi\u00ean \u0111\u00e1 nh\u1eb7t l\u00ean \u1edf t\u1ea7ng \u0111\u00f3 m\u00e0 v\u01b0\u1ee3t qu\u00e1 dung t\u00edch, h\u00e3y b\u1ecf vi\u00ean \u0111\u00e1 \u0111\u00f3 v\u00e0 tr\u1edf l\u1ea1i t\u1ea7ng tr\u01b0\u1edbc \u0111\u00f3.</li> <li>Khi quay l\u1ea1i t\u1ea7ng tr\u01b0\u1edbc, h\u00e3y b\u1ecf vi\u00ean \u0111\u01b0\u1ee3c nh\u1eb7t \u1edf t\u1ea7ng n\u00e0y v\u00e0 ch\u1ecdn vi\u00ean \u0111\u00e1 l\u1edbn h\u01a1n ti\u1ebfp theo.</li> <li>L\u1eb7p \u0111i l\u1eb7p l\u1ea1i cho \u0111\u1ebfn khi b\u1ea1n \u1edf m\u1ed9t t\u1ea7ng n\u00e0o \u0111\u00f3 nh\u1eb7t \u0111\u1ebfn vi\u00ean cu\u1ed1i c\u00f9ng v\u1eabn ch\u01b0a \u0111\u1ea7y gi\u1ecf t\u1ee9c l\u00e0 \u0111\u00e3 h\u1ebft tr\u01b0\u1eddng h\u1ee3p kh\u1ea3 d\u0129 r\u1ed3i.</li> </ol> </li> </ul>"},{"location":"Practice/leetcode-0039/#ap-an","title":"\u0110\u00e1p \u00e1n","text":"<pre><code>struct DIGGER\n{\n    std::vector&lt;int&gt; backpack;\n    int total;\n    int target;\n    std::vector&lt;int&gt; *mine;\n    std::set&lt;std::vector&lt;int&gt;&gt; *report;\n    std::set&lt;int&gt; avaible;\n};\n\n\nvoid dfs(DIGGER &amp;digger) {\n    for(size_t i=0; i &lt; digger.mine-&gt;size(); ++i) {\n        int gold = digger.mine-&gt;at(i);\n        if ((digger.total + gold) == digger.target) {\n            std::vector&lt;int&gt; package = digger.backpack;\n            package.push_back(gold);\n            std::sort(package.begin(), package.end());\n            digger.report-&gt;insert(package);\n            return;\n        } else\n        if ((digger.total + gold) &lt; digger.target) {\n            digger.backpack.push_back(gold);\n            digger.total += gold;\n            dfs(digger);\n            digger.backpack.pop_back();\n            digger.total -= gold;\n        } else\n        if ((digger.total + gold) &gt; digger.target) {\n            return;\n        }\n    }\n}\n\nstd::vector&lt;std::vector&lt;int&gt;&gt; combinationSum(std::vector&lt;int&gt;&amp; candidates, int target) {\n    std::set&lt;std::vector&lt;int&gt;&gt; report;\n    std::sort(candidates.begin(), candidates.end());\n    DIGGER miner;\n    miner.total = 0;\n    miner.target = target;\n    miner.mine = &amp;candidates;\n    miner.report = &amp;report;\n    dfs(miner);\n    std::vector&lt;std::vector&lt;int&gt;&gt; ans(report.begin(), report.end());\n    return ans;\n}\n</code></pre>"},{"location":"Practice/leetcode-0046/","title":"46. Permutations (Ho\u00e1n v\u1ecb)","text":"<ul> <li>Link: https://leetcode.com/problems/permutations/description/</li> <li>\ud83c\udf1f B\u00e0i n\u00e0y c\u1ef1c hay!</li> </ul>"},{"location":"Practice/leetcode-0046/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p>B\u00e0i n\u00e0y \u0111\u1ea7u v\u00e0o l\u00e0 chu\u1ed7i <code>vector&lt;int&gt;</code> c\u00f3 gi\u00e1 tr\u1ecb kh\u00e1c bi\u1ec7t ho\u00e0n to\u00e0n. \u0110\u1ea7u ra y\u00eau c\u1ea7u \u0111\u01b0a ra to\u00e0n b\u1ed9 t\u1ed5 h\u1ee3p ho\u00e1n v\u1ecb c\u1ee7a chu\u1ed7i \u0111\u00f3. V\u00ed d\u1ee5:</p> <pre><code>In:\n{1,2}\nOut:\n{{1,2}, {2,1}}\n\nIn:\n{1,2,3}\nOut:\n{{2,3,1}, {3,2,1},\n {1,3,2}, {3,1,2},\n {1,2,3}, {2,1,3}}\n</code></pre> <p>V\u1edbi c\u00e1ch l\u00e0m hi\u1ec7n t\u1ea1i c\u1ee7a m\u00ecnh l\u00e0 d\u00f9ng \u0111\u1ec7 quy:</p> <pre><code>vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt; nums) {\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    if(nums.size()==1) {\n        ans.push_back(nums);\n    } else if(nums.size()==2) {\n        ans.push_back(nums);\n        swap(nums[0],nums[1]);\n        ans.push_back(nums);\n    } else {\n        for(int i=0; i&lt;nums.size();++i) {\n            swap(nums[0], nums[i]);\n            int j = nums[0]; \n            vector&lt;int&gt; g(nums.begin()+1, nums.end());\n            vector&lt;vector&lt;int&gt;&gt; tmp = permute(g);\n            for(auto i : tmp) {\n                i.push_back(j);\n                ans.push_back(i);\n            }\n        }\n    }\n    return ans;\n}\n</code></pre> <ol> <li>Tr\u1ea3 v\u1ec1 khi chu\u1ed7i d\u00e0i 1, 2.</li> <li>N\u1ebfu l\u1edbn h\u01a1n 1 v\u00e0 hai th\u00ec t\u00e1ch th\u00e0nh t\u1eebng chu\u1ed7i con. V\u00ed d\u1ee5 {1,2,3} th\u00ec l\u1ea7n l\u01b0\u1ee3t \u0111\u01b0a v\u00e0o l\u00e0:<ul> <li>{1} + each_item_in <code>permute{2,3}</code></li> <li>{2} + each_item_in <code>permute{1,3}</code></li> <li>{3} + each_item_in <code>permute{1,2}</code></li> </ul> </li> </ol> <p>C\u00e1ch n\u00e0y si\u00eau t\u1ec7, t\u1ed1c \u0111\u1ed9 v\u00e0 c\u1ea3 b\u1ed9 nh\u1edb \u0111\u1ec1u t\u1ed1n \u1edf m\u1ee9c cao.</p> <p>H\u00e3y xem nh\u1eefng ng\u01b0\u1eddi \u1edf top h\u1ed9 gi\u1ea3i th\u1ebf n\u00e0o:</p> <pre><code>vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) {\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    permute(nums, 0, ans);\n    return ans;\n}\n\nvoid permute(vector&lt;int&gt;&amp; nums, int k, vector&lt;vector&lt;int&gt;&gt;&amp; ans) {\n    if(k &gt;= nums.size()) {\n        ans.push_back(nums);\n    }\n    for(int i=k;i&lt;nums.size(); i++) {\n        swap(nums[i], nums[k]);\n        permute(nums, k+1, ans);\n        swap(nums[i], nums[k]);\n    }\n}\n</code></pre> <p>K\u1ebft qu\u1ea3 h\u00e3y nh\u00ecn:</p> <ul> <li><code>123</code>4</li> <li><code>12</code>43</li> <li><code>1</code>324</li> <li><code>1</code>342</li> <li><code>1</code>432</li> <li><code>1</code>423</li> <li>... continue ...</li> </ul> <p>Note</p> <p>C\u00f3 th\u1ea5y kh\u00f4ng? H\u1ecd gi\u1eef nguy\u00ean s\u1ed1 \u0111\u1ea7u, gi\u1eef s\u1ed1 ti\u1ebfp v\u00e0 ... xoay l\u1ea7n l\u01b0\u1ee3t nh\u01b0 c\u00e1i c\u00e1ch m\u00ecnh ngh\u0129 \u0111\u1ea7u ti\u00ean nh\u01b0ng kh\u00f4ng bi\u1ebft code th\u1ebf n\u00e0o.</p> <p>Gi\u1ea3i thu\u1eadt \u1edf \u0111\u00e2y t\u00ean l\u00e0 <code>Backtracking</code>. \u0110\u00e2y l\u00e0 m\u1ed9t c\u00e2u h\u1ecfi ph\u1ecfng v\u1ea5n th\u1eadt s\u1ef1. C\u1ea7n nghi\u1ec1n ng\u1eabm.</p>"},{"location":"Practice/leetcode-0047/","title":"47. Permutations II","text":"<p>link: https://leetcode.com/problems/permutations-ii/description/</p>"},{"location":"Practice/leetcode-0047/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p>Cho m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c s\u1ed1, nums, c\u00f3 th\u1ec3 ch\u1ee9a c\u00e1c s\u1ed1 tr\u00f9ng l\u1eb7p, tr\u1ea3 v\u1ec1 t\u1ea5t c\u1ea3 c\u00e1c ho\u00e1n v\u1ecb duy nh\u1ea5t c\u00f3 th\u1ec3 theo b\u1ea5t k\u1ef3 th\u1ee9 t\u1ef1 n\u00e0o.</p> <p>Kh\u00e1c bi\u1ec7t \u1edf \u0111\u00e2y l\u00e0 c\u00e1c ho\u00e1n v\u1ecb kh\u00f4ng \u0111\u01b0\u1ee3c tr\u00f9ng l\u1eb7p.</p>"},{"location":"Practice/leetcode-0047/#vi-du","title":"V\u00ed d\u1ee5","text":"<ul> <li>Input: nums = [1,1,2]</li> <li>Output: [[1,1,2], [1,2,1], [2,1,1]]<ul> <li>V\u1edbi ph\u00e9p ho\u00e1n v\u1ecb th\u00f4ng th\u01b0\u1eddng, k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 _[1, 1, 2], [1, 2, 1], [1, 1, 2], [1, 2, 1], [2, 1, 1], __[2, 1, 1]___ c\u00f3 ba gi\u00e1 tr\u1ecb tr\u00f9ng l\u1eb7p b\u1ecb lo\u1ea1i b\u1ecf.</li> <li>\u1ede \u0111\u00e2y kh\u00f4ng \u0111\u01b0\u1ee3c tr\u00f9ng l\u1eb7p kh\u00f4ng \u0111\u01b0\u1ee3c t\u00ednh.</li> </ul> </li> </ul>"},{"location":"Practice/leetcode-0047/#bai-giai","title":"B\u00e0i gi\u1ea3i","text":"<p>Th\u00ec ... gi\u1ea3i thu\u1eadt b\u00e0i n\u00e0y kh\u00e1 l\u00e0 \u0111\u01a1n gi\u1ea3n, c\u00f3 k\u1ebft qu\u1ea3 lo\u1ea1i b\u1ecf c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 gi\u00e1 tr\u1ecb gi\u1ed1ng nhau trong <code>ans</code>.</p> <pre><code>void permute(vector&lt;int&gt;&amp; nums, int k, vector&lt;vector&lt;int&gt;&gt;&amp; ans) {\n    if(k &gt;= nums.size()) {\n        ans.push_back(nums);\n    }\n    for(int i=k;i&lt;nums.size(); i++) {\n        swap(nums[i], nums[k]);\n        permute(nums, k+1, ans);\n        swap(nums[i], nums[k]);\n    }\n}\n\nvector&lt;vector&lt;int&gt;&gt; permuteUnique(vector&lt;int&gt;&amp; nums) {\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    permute(nums, 0, ans);\n    std::sort(ans.begin(), ans.end());\n    ans.erase(std::unique(ans.begin(), ans.end()), ans.end());\n    return ans;\n}\n</code></pre>"},{"location":"Practice/leetcode-1486/","title":"1486. XOR Operation in an Array","text":"<p>Note</p> <p>Link b\u00e0i g\u1ed1c</p>"},{"location":"Practice/leetcode-1486/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p>B\u00e0i n\u00e0y cho hai \u0111\u1ed1i s\u1ed1 \u0111\u1ea7u v\u00e0o l\u00e0 <code>n</code> v\u00e0 <code>start</code> v\u1edbi:</p> <ul> <li><code>n</code> l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a chu\u1ed7i <code>nums</code></li> <li><code>start</code> c\u00f3 th\u1ec3 coi l\u00e0 gi\u00e1 tr\u1ecb c\u01a1 b\u1ea3n c\u1ee7a chu\u1ed7i <code>nums</code></li> <li>Chu\u1ed7i <code>nums</code> \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh nh\u01b0 sau:<ul> <li>Th\u00e0nh ph\u1ea7n th\u1ee9 <code>i</code> trong chu\u1ed7i <code>nums</code> s\u1ebd c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 <code>nums[i] = start + 2 * i</code></li> </ul> </li> </ul> <p>Y\u00eau c\u1ea7u tr\u1ea3 ra k\u1ebft qu\u1ea3 l\u00e0 ph\u00e9p XOR bit (bitwise) c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 trong chu\u1ed7i <code>nums</code></p>"},{"location":"Practice/leetcode-1486/#bai-lam","title":"B\u00e0i l\u00e0m","text":""},{"location":"Practice/leetcode-1486/#cach-1","title":"C\u00e1ch 1","text":"<pre><code>class Solution {\npublic:\n    int xorOperation(int n, int start) {\n        if(1==n)\n            return start;\n        return (start + 2*(n-1))^xorOperation(n-1, start);\n    }\n};\n</code></pre> <p>Success</p> <ul> <li>C\u00e1i n\u00e0y qu\u00e1 d\u1ec5 r\u1ed3i, \u0111\u01a1n gi\u1ea3n ch\u1ec9 l\u00e0 d\u00f9ng \u0111\u1ec7 quy th\u00f4i v\u00e0 c\u00e1ch \u0111\u00f3 ch\u1eafc ch\u1eafn l\u00e0 nhanh nh\u1ea5t r\u1ed3i.</li> </ul>"},{"location":"Practice/leetcode-1486/#cach-2","title":"C\u00e1ch 2","text":"<p>C\u00e1ch n\u00e0y m\u00ecnh m\u1edbi ngh\u0129 ra th\u00f4i. C\u00f3 th\u1ec3 xem x\u00e9t th\u1ea5y hai gi\u00e1 tr\u1ecb th\u1ee9 <code>nums[i]</code> v\u00e0 <code>nums[i+1]</code> l\u1ec7ch nhau ch\u00ednh x\u00e1c l\u00e0 2 \u0111\u01a1n v\u1ecb. C\u00f3 th\u1ec3 s\u1ebd c\u00f3 c\u00e1ch kh\u00e1c nhanh h\u01a1n nhi\u1ec1u n\u1ebfu d\u00f9ng <code>while</code> v\u00e0 <code>--</code> thay v\u00ec ph\u1ea3i d\u00f9ng \u0111\u1ec7 quy.</p>"},{"location":"Practice/practice/","title":"Practice","text":"<p>Abstract</p> <p>T\u00f4i c\u00f3 \u0111\u1ea1i \u00fd cho ph\u1ea7n n\u00e0y l\u00e0 thay v\u00ec d\u00e1n t\u00ean l\u00ean tr\u00ean t\u1eebng trang leetcode m\u1ed9t th\u00ec c\u00f3 th\u1ec3 l\u00e0m m\u1ed9t trang kh\u00e1c v\u00e0 l\u1eadp danh s\u00e1ch c\u00e1c b\u00e0i leetcode. L\u00fac n\u00e0y <code>extension</code> set s\u1ebd c\u00f3 hi\u1ec7u qu\u1ea3.</p> <p>\u0110\u1ec3 chu\u1ea9n b\u1ecb cho vi\u1ec7c l\u1eadp tr\u00ecnh c\u1ea1nh tranh c\u00f9ng nhi\u1ec1u test case c\u00f3 th\u1ec3 d\u00f9ng nh\u01b0 sau:</p>"},{"location":"Practice/practice/#chuan-bi-chuong-trinh","title":"Chu\u1ea9n b\u1ecb ch\u01b0\u01a1ng tr\u00ecnh","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y th\u1eed cho leetcode \u0111\u01a1n gi\u1ea3n s\u1ebd \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng h\u00e0m <code>main.exe</code> v\u00e0 nh\u1eadn c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ea7u v\u00e0o qua t\u1ec7p. B\u00e0i n\u00e0y kh\u00e1 th\u00edch h\u1ee3p khi \u0111\u1ea7u v\u00e0o l\u00e0 m\u1ed9t chu\u1ed7i, v\u00e0 c\u00f3 nhi\u1ec1u <code>testcase</code>.</p> <p>\u00dd t\u01b0\u1edfng n\u00e0y \u0111\u1ea1i lo\u1ea1i l\u00e0 s\u1ebd chuy\u1ec3n d\u1eef li\u1ec7u test th\u00e0nh t\u1ec7p \u0111\u1ea7u v\u00e0o <code>input</code> v\u00e0 l\u1ea7n l\u01b0\u1ee3t \u0111\u01b0a v\u00e0o </p>"},{"location":"Practice/practice/#ham-oc-au-vao-va-chuyen-thanh-vector","title":"H\u00e0m \u0111\u1ecdc \u0111\u1ea7u v\u00e0o v\u00e0 chuy\u1ec3n th\u00e0nh vector","text":"<pre><code>template &lt;typename T&gt;\nstd::vector&lt;T&gt; input_vector()\n{\n    size_t vector_size;\n    std::cin &gt;&gt; vector_size;\n    std::vector&lt;T&gt; r_vec;\n    while(vector_size--) {\n        T ref;\n        std::cin &gt;&gt; ref;\n        r_vec.push_back(ref);\n    }\n    return r_vec;\n}\n</code></pre> <p>Trong h\u00e0m tr\u00ean c\u00f3 t\u00e1c d\u1ee5ng l\u1ea5y \u0111\u1ea7u v\u00e0o theo c\u1ea5u tr\u00fac <code>[K\u00edch th\u01b0\u1edbc]</code> + <code>[{c\u00e1c gi\u00e1 tr\u1ecb}]</code></p> <p>V\u00ed d\u1ee5 \u0111\u1ea7u v\u00e0o l\u00e0 <code>3 4 5 6</code> th\u00ec s\u1ebd k\u1ebft xu\u1ea5t \u0111\u01b0\u1ee3c <code>std::vector</code> l\u00e0 <code>{4,5,6}</code> v\u1edbi k\u00edch th\u01b0\u1edbc l\u00e0 <code>3</code>.</p>"},{"location":"Practice/practice/#e-sau-hay-noi","title":"\u0110\u1ec3 sau h\u00e3y n\u00f3i","text":""},{"location":"Practice/practice/#thao-tac-kiem-thu","title":"Thao t\u00e1c ki\u1ec3m th\u1eed","text":"<p>\u1ede \u0111\u00e2y l\u1ea5y b\u00e0i <code>leetcode-1486</code> l\u00e0m v\u00ed d\u1ee5:</p> main.cpp<pre><code>#include &lt;iostream&gt;\n#include &lt;ostream&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;limits&gt;\n#include &lt;cstdint&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n#include &lt;bitset&gt;\n\n#define N (10000)\n\n#define ANSI_COLOR_RED     \"\\x1b[31m\"\n#define ANSI_COLOR_GREEN   \"\\x1b[32m\"\n#define ANSI_COLOR_YELLOW  \"\\x1b[33m\"\n#define ANSI_COLOR_BLUE    \"\\x1b[34m\"\n#define ANSI_COLOR_MAGENTA \"\\x1b[35m\"\n#define ANSI_COLOR_CYAN    \"\\x1b[36m\"\n#define ANSI_COLOR_RESET   \"\\x1b[0m\"\n\nint xorOperation(int n, int start) {\n    if(1==n)\n        return start;\n\n    return (start + 2*(n-1))^xorOperation(n-1, start);\n}\n\n// int main(int argc, char *argv[]) {\nint main() {\n    int total_testcase;\n    std::cin &gt;&gt; total_testcase;\n    int buff = total_testcase;\n    while (buff--)\n    {\n        int n;\n        int start;\n        int expected;\n        std::cin &gt;&gt; n;\n        std::cin &gt;&gt; start;\n        std::cin &gt;&gt; expected;\n        int answer = xorOperation(n, start);\n        // Check the test\n        if(expected==answer) {\n            printf(ANSI_COLOR_GREEN \"[Case %d] PASS!\\n\", (total_testcase - buff));\n        } else {\n            printf(ANSI_COLOR_RED \"[Case %d] FALSE\\n\", (total_testcase - buff));\n            printf(ANSI_COLOR_RESET \"\\tAnswer   : %d\\n\", answer);\n            printf(ANSI_COLOR_RESET \"\\tExpected : %d\\n\", expected);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>T\u1ed5ng th\u1ec3 b\u00e0i n\u00e0y kh\u00f4ng c\u00f3 g\u00ec \u0111\u00e1ng xem, ch\u1ee7 y\u1ebfu ch\u00ednh l\u00e0 vi\u1ec7c th\u1ef1c hi\u1ec7n ki\u1ec3m th\u1eed ch\u01b0\u01a1ng tr\u00ecnh v\u1edbi t\u1ec7p \u0111\u1ea7u v\u00e0o <code>input</code>. T\u1ec7p \u0111\u00f3 n\u1ed9i dung nh\u01b0 n\u00e0y:</p> input<pre><code>2\n5 0\n8\n4 3\n8\n</code></pre> <p>V\u1edbi:</p> <ul> <li><code>2</code> l\u00e0 t\u1ed5ng s\u1ed1 test case</li> <li><code>5 0</code>  l\u00e0 \u0111\u1ea7u v\u00e0o cho test case \u0111\u1ea7u ti\u00ean</li> <li><code>8</code>  l\u00e0 k\u1ebft qu\u1ea3 \u0111\u00fang cho test case n\u00e0y.</li> <li><code>4 3</code> v\u00e0 <code>8</code> th\u00ec t\u01b0\u01a1ng t\u1ef1 ...</li> </ul> <p>Note</p> <p>Ch\u1ee7 y\u1ebfu m\u00ecnh l\u01b0u l\u1ea1i ph\u1ea7n n\u00e0y \u0111\u1ec3 xem m\u1eabu vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh ki\u1ec3m th\u1eed nhi\u1ec1u ph\u01b0\u01a1ng \u00e1n. L\u01b0u l\u1ea1i n\u00f3 v\u00e0 s\u1eed d\u1ee5ng sau n\u00e0y cho nhi\u1ec1u ch\u01b0\u01a1ng tr\u00ecnh kh\u00e1c. ... N\u1ebfu c\u00f3 d\u1ecbp quay l\u1ea1i h\u00e3y b\u1ed5 sung ho\u1eb7c t\u00e1i c\u1ea5u tr\u00fac \u0111i\u1ec1u n\u00e0y v\u00e0o m\u1ee5c t\u1ed1t h\u01a1n.</p>"},{"location":"Programming/compiled-language/","title":"Overview","text":""},{"location":"Programming/compiled-language/#cac-ngon-ngu","title":"C\u00e1c ng\u00f4n ng\u1eef","text":"<ul> <li>C</li> <li>C++</li> <li>C#</li> <li>Java</li> <li>Python</li> <li>Kotlin</li> <li>Rust</li> <li>PHP</li> </ul>"},{"location":"Programming/compiled-language/#bien-dich-hay-thong-dich","title":"Bi\u00ean d\u1ecbch hay Th\u00f4ng d\u1ecbch?","text":""},{"location":"Programming/compiled-language/#cac-tang-cua-ngon-ngu-may-tinh","title":"C\u00e1c t\u1ea7ng c\u1ee7a ng\u00f4n ng\u1eef m\u00e1y t\u00ednh","text":"<ul> <li>V\u00ec ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh cu\u1ed1i c\u00f9ng l\u00e0 \u0111\u1ec3 giao ti\u1ebfp v\u1edbi m\u00e1y t\u00ednh n\u00ean nh\u1ea5t \u0111\u1ecbnh ph\u1ea3i s\u1eed d\u1ee5ng \"ng\u00f4n ng\u1eef m\u00e1y\".</li> <li>Ng\u00f4n ng\u1eef m\u00e1y c\u1ea5p th\u1ea5p nh\u1ea5t l\u00e0 nh\u1eefng chu\u1ed7i <code>bit</code> d\u1ea1ng <code>01010111...</code> ch\u00ednh l\u00e0 nh\u1eefng t\u00edn hi\u1ec7u \u0111i\u1ec7n v\u1edbi \u0111i\u1ec1u ki\u1ec7n m\u1eb7c \u0111\u1ecbnh l\u00e0 1=c\u00f3 \u0111i\u1ec7n, 0=kh\u00f4ng c\u00f3 \u0111i\u1ec7n.</li> <li>Ti\u1ebfp \u0111\u1ebfn, kh\u00e1 g\u1ea7n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Assembly Language (ASM) ho\u1eb7c c\u00f2n g\u1ecdi l\u00e0 <code>h\u1ee3p ng\u1eef</code>. M\u1ed9t ki\u1ec3u c\u1ef1c k\u1ef3 g\u1ea7n v\u1edbi ng\u00f4n ng\u1eef m\u00e1y r\u1ed3i v\u00e0 h\u1ea7u h\u1ebft c\u00e1c h\u1ec7 \u0111i\u1ec1u h\u00e0nh \u0111\u1ec3u c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c ch\u00fang. \u1ede d\u1ea1ng trung b\u00ecnh, h\u1ee3p ng\u1eef v\u1eabn t\u1ea1m coi nh\u01b0 l\u00e0 c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c nh\u01b0ng c\u1ea7n ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ea3ng v\u1ec1 m\u00e1y t\u00ednh kh\u00e1 t\u1ed1t, m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 h\u1ee3p ng\u1eef nh\u01b0 sau:</li> </ul> <pre><code>MOV  AX, 00    ; Initializing AX to 0\nMOV  BX, 00    ; Initializing BX to 0\nMOV  CX, 01    ; Initializing CX to 1\nL20:\nADD  AX, 01    ; Increment AX\nADD  BX, AX    ; Add AX to BX\nSHL  CX, 1     ; shift left CX, this in turn doubles the CX value\nJMP  L20       ; repeats the statements\n</code></pre> <ul> <li>T\u1ea7ng k\u1ebf ti\u1ebfp n\u00e0y m\u1edbi l\u00e0 t\u1ea7ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng kh\u00e1 nhi\u1ec1u v\u00e0 c\u00f2n \u0111\u01b0\u1ee3c th\u00f4ng d\u1ee5ng g\u1ecdi l\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh. \u1ede t\u1ea7ng n\u00e0y \u0111\u00e3 \u0111\u01a1n gi\u1ea3n ho\u00e1 \u0111i r\u1ea5t nhi\u1ec1u v\u00e0 c\u1ed1 g\u1eafng \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y d\u01b0\u1edbi d\u1ea1ng ng\u00f4n ng\u1eef th\u00f4ng d\u1ee5ng. V\u1edbi hai l\u1edbp ch\u00ednh \u0111\u01b0\u1ee3c chia kh\u00f4ng r\u00f5 r\u00e0ng l\u00e0 ng\u00f4n ng\u1eef b\u1eadc th\u1ea5p v\u00e0 ng\u00f4n ng\u1eef b\u1eadc cao. Ng\u00f4n ng\u1eef b\u1eadc th\u1ea5p (v\u00ed d\u1ee5 nh\u01b0 <code>C</code>) v\u1eabn c\u00f2n nhi\u1ec1u kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i v\u1edbi t\u1ea7ng d\u01b0\u1edbi. C\u00e0ng g\u1ea7n ng\u00f4n ng\u1eef b\u1eadc cao, c\u00e1c t\u00ednh n\u0103ng c\u00e0ng \u0111\u01b0\u1ee3c \u0111\u01a1n gi\u1ea3n v\u00e0 tr\u00ecnh b\u00e0y gi\u1ed1ng ng\u00f4n ng\u1eef n\u00f3i ho\u1eb7c b\u0103n b\u1ea3n.</li> </ul> <p>V\u1ea5n \u0111\u1ec1 c\u1ee7a ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh (NNLT) n\u00f3i chung xoay quanh chuy\u1ec7n <code>d\u1ecbch ng\u00f4n ng\u1eef</code>.</p> <p>\u0110\u1ec3 hi\u1ec3u kh\u00e1i ni\u1ec7m n\u00e0y, tr\u01b0\u1edbc h\u1ebft c\u1ea7n ph\u1ea3i c\u00f3 c\u00e1c t\u1ec7p v\u0103n b\u1ea3n vi\u1ebft theo NNLT \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 script (k\u1ecbch b\u1ea3n). M\u00e1y t\u00ednh kh\u00f4ng hi\u1ec3u c\u00e1c k\u1ecbch b\u1ea3n n\u00e0y, n\u00f3 c\u1ea7n m\u1ed9t ng\u01b0\u1eddi chuy\u1ec3n n\u00f3 sang d\u1ea1ng cu\u1ed1i c\u00f9ng l\u00e0 ng\u00f4n ng\u1eef m\u00e1y c\u1ea5p th\u1ea5p, v\u00e0 trong l\u0129nh v\u1ef1c m\u00e1y t\u00ednh chia ra l\u00e0m hai kh\u00e1i ni\u1ec7m l\u00e0 bi\u00ean d\u1ecbch (compiler) v\u00e0 th\u00f4ng d\u1ecbch (interpreter).</p> <ul> <li> <p>V\u1edbi bi\u00ean d\u1ecbch, script \u0111\u01b0\u1ee3c so\u1ea1n th\u00e0nh t\u1ec7p th\u1ef1c thi tr\u1ef1c ti\u1ebfp v\u00ed d\u1ee5 nh\u01b0 tr\u00f2 ch\u01a1i \u0111i\u1ec7n t\u1eed ho\u1eb7c l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh mn hay d\u00f9ng c\u00f3 \u0111u\u00f4i l\u00e0 <code>.exe</code> tr\u00ean Windows. C\u00e1c t\u1ec7p \u0111\u00f3 c\u00f3 th\u1ec3 ch\u1ea1y, nh\u01b0ng c\u00e1c b\u1ea1n kh\u00f4ng th\u1ec3 \u0111\u1ecdc v\u00ec n\u00f3 \u0111\u00e3 l\u00e0 ng\u00f4n ng\u1eef m\u00e1y. N\u1ebfu c\u1ed1 g\u1eafng m\u1edf n\u00f3 \u1edf d\u1ea1ng v\u0103n b\u1ea3n th\u00ec n\u00f3 s\u1ebd th\u00e0nh ki\u1ec3u <code>00101010...</code>. Ti\u00eau ch\u00ed c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 d\u1ecbch m\u1ed9t l\u1ea7n ch\u1ea1y m\u00e3i m\u00e3i</p> </li> <li> <p>Th\u00f4ng d\u1ecbch nh\u01b0 t\u00ean g\u1ecdi, thay v\u00ec bi\u00ean d\u1ecbch c\u1ea3 n\u00f3 s\u1ebd bi\u00ean d\u1ecbch m\u1ed9t ph\u1ea7n, \u0111\u1ecdc \u0111\u1ebfn \u0111\u00e2u d\u1ecbch \u0111\u1ebfn \u0111\u00f3, v\u1eeba ch\u1ea1y v\u1eeba d\u1ecbch. Nh\u01b0\u1ee3c \u0111i\u1ec3m ch\u00ednh l\u00e0 t\u1ed1c \u0111\u1ed9 v\u1ec1 trung b\u00ecnh s\u1ebd ch\u1eadm h\u01a1n, \u0111\u1ea7u th\u1eddi tu\u1ef3 theo c\u00e1ch ph\u00e1t tri\u1ec3n nh\u01b0ng l\u1ea7n n\u00e0o ch\u1ea1y c\u0169ng g\u1ea7n nh\u01b0 ph\u1ea3i d\u1ef1ng l\u1ea1i. Th\u00f4ng d\u1ecbch c\u0169ng c\u00f3 2 lo\u1ea1i ch\u00ednh:</p> <ul> <li>Ph\u00e2n lo\u1ea1i theo c\u00e1ch ch\u1ea1y<ul> <li>Kh\u00f4ng s\u1eed d\u1ee5ng m\u00e1y \u1ea3o (VM): T\u1ee9c l\u00e0 d\u1ecbch tr\u1ef1c ti\u1ebfp th\u00e0nh m\u00e3 m\u00e1y v\u00e0 s\u1eed d\u1ee5ng kh\u00f4ng qua m\u00e1y \u1ea3o. C\u00e1ch n\u00e0y kh\u00e1 r\u1eafc r\u1ed1i v\u00e0 ti\u1ec1m t\u00e0ng nhi\u1ec1u nguy hi\u1ec3m n\u00ean m\u00e3i g\u1ea7n \u0111\u00e2y ch\u1ec9 c\u00f3 Android l\u00e0 s\u1eed d\u1ee5ng l\u1ea1i. C\u00f2n l\u1ea1i h\u1ea7u nh\u01b0 \u0111\u1ec1u kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1ch n\u00e0y</li> <li>S\u1eed d\u1ee5ng m\u00e1y \u1ea3o (VM): S\u1eed d\u1ee5ng m\u00e1y \u1ea3o s\u1ebd ti\u1ebft ki\u1ec7m h\u01a1n, t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef v\u1eabn \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch nh\u01b0ng s\u1ebd th\u00e0nh ng\u00f4n ng\u1eef c\u1ee7a m\u00e1y \u1ea3o, m\u00e1y \u1ea3o s\u1ebd ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7u ra tr\u00ean m\u00e1y th\u1eadt. C\u00e1ch n\u00e0y r\u1ea5t \u0111\u01b0\u1ee3c \u01b0a chu\u1ed9ng v\u00e0 ph\u1ed5 bi\u1ebfn tr\u00ean <code>Java</code>, <code>Python</code> b\u1edfi v\u1ea5n \u0111\u1ec1 ch\u1ec9 xoay quanh m\u00e1y \u1ea3o v\u00e0 m\u00f4i tr\u01b0\u1eddng thi\u1ebft b\u1ecb, c\u00e1c v\u1ea5n \u0111\u1ec1 li\u00ean quan kh\u00f4ng c\u00f2n b\u1ecb t\u00e1c \u0111\u1ed9ng.</li> </ul> </li> <li>Ph\u00e2n lo\u1ea1i theo c\u00e1ch d\u1ecbch<ul> <li>Bi\u00ean d\u1ecbch qua m\u1ed9t ng\u00f4n ng\u1eef trung gian (d\u00f9ng cho m\u00e1y \u1ea3o): Nh\u01b0 \u1edf tr\u00ean tr\u00ecnh b\u00e0y, s\u1ebd c\u00f3 m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh bi\u00ean d\u1ecbch m\u1ed9t ph\u1ea7n ho\u1eb7c to\u00e0n b\u1ed9 ng\u00f4n ng\u1eef qua ng\u00f4n ng\u1eef trung gian r\u1ed3i m\u1edbi ch\u1ea1y tr\u00ean m\u00e1y \u1ea3o. \u0110i\u1ec1u n\u00e0y tu\u1ef3 thu\u1ed9c v\u00e0o ng\u01b0\u1eddi d\u00f9ng.</li> <li>Kh\u00f4ng qua ng\u00f4n ng\u1eef trung gian (v\u1eabn d\u00f9ng cho m\u00e1y \u1ea3o ho\u1eb7c kh\u00f4ng): C\u00e1ch n\u00e0y v\u1eabn l\u00e0 bi\u00ean d\u1ecbch m\u1ed9t ph\u1ea7n, ch\u1ec9 c\u00f3 \u0111i\u1ec1u l\u00e0 \u0111\u1ec3 ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb v\u00e0 t\u0103ng m\u1ea1nh kh\u1ea3 n\u0103ng ch\u01b0\u01a1ng tr\u00ecnh, m\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p c\u00f3 th\u1ec3 bi\u00ean d\u1ecbch tr\u1ef1c ti\u1ebfp m\u1ed9t ph\u1ea7n th\u00e0nh m\u00e3 m\u00e1y v\u00e0 s\u1eed d\u1ee5ng m\u00e0 kh\u00f4ng qua ng\u00f4n ng\u1eef trung gian n\u1eefa.</li> </ul> </li> </ul> </li> </ul> <p>H\u1ea7u h\u1ebft c\u00e1c ng\u00f4n ng\u1eef th\u00f4ng d\u1ecbch \u0111\u1ec1u l\u00e0 NNLT b\u1eadc cao. C\u00e1c ng\u00f4n ng\u1eef b\u1eadc cao c\u00f3 th\u1ec3 d\u1ecbch th\u00e0nh c\u00e1c ng\u00f4n ng\u1eef c\u1ea5p th\u1ea5p h\u01a1n v\u00e0 xu\u1ed1ng d\u01b0\u1edbi, kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i lu\u00f4n \u0111i tr\u1ef1c ti\u1ebfp xu\u1ed1ng ng\u00f4n ng\u1eef m\u00e1y.</p>"},{"location":"Programming/compiled-language/#so-sanh","title":"So s\u00e1nh","text":"Compiler - Ng\u00f4n ng\u1eef bi\u00ean d\u1ecbch Iterpreter - Ng\u00f4n ng\u1eef th\u00f4ng d\u1ecbch T\u1ed1c \u0111\u1ed9 d\u1ecbch Ch\u1eadm <code>Nhanh</code> T\u1ed1c \u0111\u1ed9 ch\u01b0\u01a1ng tr\u00ecnh <code>Nhanh</code> Ch\u1eadm B\u1ed9 nh\u1edb <code>T\u1ed1i \u01b0u</code> T\u1ec7 \u0110a n\u1ec1n t\u1ea3ng K\u00e9m <code>T\u1ed1t</code> T\u1ed1c \u0111\u1ed9 kh\u1edfi \u0111\u1ed9ng K\u00e9m <code>T\u1ed1t</code> T\u00ednh \u1ed5n \u0111\u1ecbnh <code>T\u1ed1t</code> K\u00e9m <pre>d2c0ab8c58b6cb564b12df8fb783f49f8a5faf8b26031110b6516b30eab590559792a2181cc1a2f1b37f905ff9ff1040f3988a8a276403315431b8b5118bfb0e</pre><pre>abc73f10a4e061996415a57d4b54ebed40ca0b8bcb417953007863292c5d07b06399dc0a85ac9281b1054f413f07c7324b36e7e3a41771c1754e868dedd04efe</pre>"},{"location":"Programming/compiled-language/#cac-thanh-phan-co-ban-cua-ngon-ngu-lap-trinh","title":"C\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n c\u1ee7a ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh","text":"<pre>72e70767d86dfc5e4822f4fe4583cba6d9e15d96be988f7b9304243815ea3c35ee11021999f0c8bbfdc4ed7ed06a682708e2fbacb3e5de2d22cdff7121677980</pre><pre>862dca305d912d47c44c3e8c03cb0814875d3e55846bf6896dacfb3db9251787d609dfbe6284bfc2ac82e1ac25fcf4b15ee690ea77477655dc6e34208c67f86b</pre> <p>T\u1ed5ng k\u1ebft</p> <p>H\u1ea7u nh\u01b0 m\u1ecdi lo\u1ea1i ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \u0111\u1ec1u t\u1ed3n t\u1ea1i c\u01a1 b\u1ea3n <code>4 y\u1ebfu t\u1ed1</code>:</p> <ol> <li>Complier/Interpret : Bi\u00ean d\u1ecbch / Th\u00f4ng d\u1ecbch</li> <li>Variables : Bi\u1ebfn</li> <li>Syntax : C\u00fa ph\u00e1p<ul> <li>In/Out : \u0110\u1ea7u v\u00e0o, ra</li> <li>Conditionals : \u0110i\u1ec1u ki\u1ec7n</li> <li>Loops : V\u00f2ng L\u1eb7p</li> </ul> </li> <li>Function : H\u00e0m</li> <li>Include : Bao g\u1ed3m, t\u1ea3i t\u1ec7p, t\u1ea3i th\u01b0 vi\u1ec7n</li> </ol> <ul> <li>Complier/Interpret: Chuy\u1ec3n \u0111\u1ed5i ng\u00f4n ng\u1eef th\u00e0nh ng\u00f4n ng\u1eef m\u00e1y.</li> <li>Bi\u1ebfn: c\u00e1c bi\u1ebfn trong l\u1eadp tr\u00ecnh cho bi\u1ebft c\u00e1ch bi\u1ec3u di\u1ec5n d\u1eef li\u1ec7u, c\u00f3 th\u1ec3 n\u1eb1m trong ph\u1ea1m vi t\u1eeb gi\u00e1 tr\u1ecb r\u1ea5t \u0111\u01a1n gi\u1ea3n \u0111\u1ebfn gi\u00e1 tr\u1ecb ph\u1ee9c t\u1ea1p. Gi\u00e1 tr\u1ecb ch\u00fang ch\u1ee9a c\u00f3 th\u1ec3 thay \u0111\u1ed5i t\u00f9y theo \u0111i\u1ec1u ki\u1ec7n. Nh\u01b0 ch\u00fang ta \u0111\u00e3 bi\u1ebft, ch\u01b0\u01a1ng tr\u00ecnh bao g\u1ed3m c\u00e1c h\u01b0\u1edbng d\u1eabn y\u00eau c\u1ea7u m\u00e1y t\u00ednh th\u1ef1c hi\u1ec7n m\u1ecdi vi\u1ec7c v\u00e0 d\u1eef li\u1ec7u m\u00e0 ch\u01b0\u01a1ng tr\u00ecnh s\u1eed d\u1ee5ng khi n\u00f3 \u0111ang ch\u1ea1y. D\u1eef li\u1ec7u kh\u00f4ng \u0111\u1ed5i v\u1edbi c\u00e1c gi\u00e1 tr\u1ecb c\u1ed1 \u0111\u1ecbnh ho\u1eb7c bi\u1ebfn. Ch\u00fang c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t gi\u00e1 tr\u1ecb r\u1ea5t \u0111\u01a1n gi\u1ea3n nh\u01b0 \u0111\u1ed9 tu\u1ed5i c\u1ee7a m\u1ed9t ng\u01b0\u1eddi cho \u0111\u1ebfn m\u1ed9t th\u1ee9 r\u1ea5t ph\u1ee9c t\u1ea1p nh\u01b0 th\u00e0nh t\u00edch h\u1ecdc t\u1eadp c\u1ee7a h\u1ecdc sinh trong c\u1ea3 n\u0103m.</li> <li>Syntax: C\u00fa ph\u00e1p c\u01a1 b\u1ea3n \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 \u00fd \u0111\u1ed3 \u0111\u01a1n gi\u1ea3n nh\u1ea5t v\u1ec1 logic<ul> <li>\u0110\u1ea7u v\u00e0o/\u0111\u1ea7u ra: th\u00e0nh ph\u1ea7n l\u1eadp tr\u00ecnh m\u00e1y t\u00ednh cho ph\u00e9p ch\u01b0\u01a1ng tr\u00ecnh t\u01b0\u01a1ng t\u00e1c v\u1edbi c\u00e1c th\u1ef1c th\u1ec3 b\u00ean ngo\u00e0i. V\u00ed d\u1ee5 v\u1ec1 ph\u1ea7n t\u1eed \u0111\u1ea7u v\u00e0o/\u0111\u1ea7u ra \u0111ang in n\u1ed9i dung n\u00e0o \u0111\u00f3 ra m\u00e0n h\u00ecnh \u0111\u1ea7u cu\u1ed1i, ghi l\u1ea1i m\u1ed9t s\u1ed1 v\u0103n b\u1ea3n m\u00e0 ng\u01b0\u1eddi d\u00f9ng nh\u1eadp tr\u00ean b\u00e0n ph\u00edm v\u00e0 c\u00f3 th\u1ec3 bao g\u1ed3m vi\u1ec7c \u0111\u1ecdc v\u00e0 ghi t\u1ec7p. H\u00e3y l\u1ea5y m\u1ed9t v\u00ed d\u1ee5 v\u1ec1 ng\u00f4n ng\u1eef \u0111\u1ec3 hi\u1ec3u kh\u00e1i ni\u1ec7m \u0111\u1ea7u v\u00e0o v\u00e0 \u0111\u1ea7u ra. C++ s\u1eed d\u1ee5ng c\u00e1c lu\u1ed3ng \u0111\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c \u0111\u1ea7u v\u00e0o v\u00e0 \u0111\u1ea7u ra trong ph\u01b0\u01a1ng ti\u1ec7n tu\u1ea7n t\u1ef1 d\u01b0\u1edbi d\u1ea1ng m\u00e0n h\u00ecnh, b\u00e0n ph\u00edm ho\u1eb7c t\u1ec7p. Ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a lu\u1ed3ng l\u00e0 m\u1ed9t th\u1ef1c th\u1ec3 c\u00f3 th\u1ec3 ch\u00e8n ho\u1eb7c tr\u00edch xu\u1ea5t c\u00e1c k\u00fd t\u1ef1 v\u00e0 kh\u00f4ng c\u1ea7n bi\u1ebft chi ti\u1ebft v\u1ec1 ph\u01b0\u01a1ng ti\u1ec7n \u0111\u01b0\u1ee3c li\u00ean k\u1ebft v\u1edbi lu\u1ed3ng ho\u1eb7c b\u1ea5t k\u1ef3 th\u00f4ng s\u1ed1 k\u1ef9 thu\u1eadt n\u1ed9i b\u1ed9 n\u00e0o c\u1ee7a n\u00f3. Ch\u00fang ta c\u1ea7n bi\u1ebft v\u1ec1 lu\u1ed3ng l\u00e0 ch\u00fang l\u00e0 ngu\u1ed3n ho\u1eb7c \u0111\u00edch c\u1ee7a c\u00e1c k\u00fd t\u1ef1 v\u00e0 c\u00e1c k\u00fd t\u1ef1 \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn m\u1ed9t c\u00e1ch tu\u1ea7n t\u1ef1.</li> <li>\u0110i\u1ec1u ki\u1ec7n: \u0111i\u1ec1u ki\u1ec7n ch\u1ec9 \u0111\u1ecbnh vi\u1ec7c th\u1ef1c hi\u1ec7n c\u00e1c c\u00e2u l\u1ec7nh t\u00f9y thu\u1ed9c v\u00e0o vi\u1ec7c \u0111i\u1ec1u ki\u1ec7n c\u00f3 \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n hay kh\u00f4ng. V\u1ec1 c\u01a1 b\u1ea3n, n\u00f3 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn m\u1ed9t h\u00e0nh \u0111\u1ed9ng ch\u1ec9 th\u1ef1c hi\u1ec7n khi \u0111i\u1ec1u ki\u1ec7n \u00e1p d\u1ee5ng theo h\u01b0\u1edbng d\u1eabn \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n. Ch\u00fang l\u00e0 m\u1ed9t trong nh\u1eefng th\u00e0nh ph\u1ea7n quan tr\u1ecdng nh\u1ea5t c\u1ee7a ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh v\u00ec ch\u00fang cho ph\u00e9p ch\u01b0\u01a1ng tr\u00ecnh t\u1ef1 do h\u00e0nh \u0111\u1ed9ng kh\u00e1c nhau m\u1ed7i khi th\u1ef1c thi, \u0111i\u1ec1u n\u00e0y t\u00f9y thu\u1ed9c v\u00e0o \u0111\u1ea7u v\u00e0o c\u1ee7a l\u1ec7nh.</li> <li>V\u00f2ng l\u1eb7p: ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a v\u00f2ng l\u1eb7p l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c l\u1ec7nh \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i li\u00ean t\u1ee5c cho \u0111\u1ebfn khi m\u1ed9t \u0111i\u1ec1u ki\u1ec7n nh\u1ea5t \u0111\u1ecbnh kh\u00f4ng \u0111\u01b0\u1ee3c th\u1ecfa m\u00e3n. C\u00e1ch b\u1eaft \u0111\u1ea7u v\u00f2ng l\u1eb7p hi\u1ec3u \u0111i\u1ec1u n\u00e0y tr\u01b0\u1edbc ti\u00ean, m\u1ed9t quy tr\u00ecnh nh\u1ea5t \u0111\u1ecbnh \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n, \u0111\u1ec3 l\u1ea5y b\u1ea5t k\u1ef3 d\u1eef li\u1ec7u n\u00e0o v\u00e0 thay \u0111\u1ed5i n\u00f3 sau khi \u0111i\u1ec1u ki\u1ec7n \u00e1p d\u1ee5ng \u0111\u00f3 tr\u00ean v\u00f2ng l\u1eb7p \u0111\u01b0\u1ee3c ki\u1ec3m tra xem b\u1ed9 \u0111\u1ebfm c\u00f3 \u0111\u1ea1t \u0111\u1ebfn s\u1ed1 quy \u0111\u1ecbnh hay kh\u00f4ng. V\u1ec1 c\u01a1 b\u1ea3n, m\u1ed9t v\u00f2ng l\u1eb7p th\u1ef1c hi\u1ec7n vi\u1ec7c th\u1ef1c hi\u1ec7n m\u1ed9t nh\u00f3m l\u1ec7nh v\u1edbi s\u1ed1 l\u1ea7n nh\u1ea5t \u0111\u1ecbnh. Ngo\u00e0i ra c\u00f2n c\u00f3 m\u1ed9t kh\u00e1i ni\u1ec7m v\u1ec1 v\u00f2ng l\u1eb7p v\u00f4 h\u1ea1n, c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 v\u00f2ng l\u1eb7p v\u00f4 t\u1eadn, l\u00e0 m\u1ed9t \u0111o\u1ea1n m\u00e3 thi\u1ebfu l\u1ed1i tho\u00e1t ch\u1ee9c n\u0103ng v\u00e0 s\u1ebd l\u1eb7p l\u1ea1i v\u00f4 th\u1eddi h\u1ea1n.</li> </ul> </li> <li>H\u00e0m: th\u00e0nh ph\u1ea7n c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh cho ph\u00e9p l\u1eadp tr\u00ecnh vi\u00ean s\u1eed d\u1ee5ng \u0111o\u1ea1n m\u00e3 v\u00e0o m\u1ed9t v\u1ecb tr\u00ed c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u l\u1ea7n. M\u1ee5c \u0111\u00edch ch\u00ednh c\u1ee7a c\u00e1c h\u00e0m l\u00e0 l\u1ea5y c\u00e1c \u0111\u1ed1i s\u1ed1 theo s\u1ed1 l\u01b0\u1ee3ng gi\u00e1 tr\u1ecb v\u00e0 th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 ph\u00e9p t\u00ednh tr\u00ean ch\u00fang sau \u0111\u00f3 tr\u1ea3 v\u1ec1 m\u1ed9t k\u1ebft qu\u1ea3 duy nh\u1ea5t. C\u00e1c h\u00e0m \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u khi b\u1ea1n c\u1ea7n th\u1ef1c hi\u1ec7n c\u00e1c ph\u00e9p t\u00ednh ph\u1ee9c t\u1ea1p v\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ho\u1eb7c kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng sau \u0111\u00f3 trong m\u1ed9t bi\u1ec3u th\u1ee9c. N\u1ebfu ch\u00fang ta n\u00f3i v\u1ec1 c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh con tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 k\u1ebft qu\u1ea3. Tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng th\u1ec3 \u0111\u1eb7t l\u1ec7nh g\u1ecdi \u0111\u1ebfn ch\u01b0\u01a1ng tr\u00ecnh con trong m\u1ed9t bi\u1ec3u th\u1ee9c cho d\u00f9 n\u00f3 n\u1eb1m trong ch\u01b0\u01a1ng tr\u00ecnh ch\u00ednh n\u01a1i ch\u01b0\u01a1ng tr\u00ecnh con \u0111\u01b0\u1ee3c k\u00edch ho\u1ea1t b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng c\u00e2u l\u1ec7nh CALL bao g\u1ed3m danh s\u00e1ch \u0111\u1ea7u v\u00e0o v\u00e0 \u0111\u1ea7u ra \u0111\u01b0\u1ee3c \u0111\u1eb7t trong d\u1ea5u ngo\u1eb7c \u0111\u01a1n m\u1edf v\u00e0 \u0111\u00f3ng v\u00e0 ch\u00fang \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \u0111\u1ed1i s\u1ed1 c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh con . C\u00f3 m\u1ed9t s\u1ed1 quy t\u1eafc \u0111\u01b0\u1ee3c c\u1ea3 hai tu\u00e2n theo \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh t\u00ean nh\u01b0 \u00edt h\u01a1n s\u00e1u ch\u1eef c\u00e1i v\u00e0 b\u1eaft \u0111\u1ea7u b\u1eb1ng c\u00e1c ch\u1eef c\u00e1i. T\u00ean ph\u1ea3i kh\u00e1c v\u1edbi t\u00ean \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho c\u00e1c bi\u1ebfn v\u00e0 h\u00e0m.</li> </ul> <p>T\u1ed5ng k\u1ebft</p> <p>V\u1eady n\u00ean, m\u1ed7i l\u1ea7n h\u1ecdc v\u1ec1 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh n\u00e0y \u0111\u00f3 c\u1ea7n \u0111i qua \u0111\u1ee7 6 b\u00e0i c\u01a1 b\u1ea3n v\u1ec1:</p> <ol> <li>Complier/Interpret : Bi\u00ean d\u1ecbch / Th\u00f4ng d\u1ecbch</li> <li>Variables : Bi\u1ebfn</li> <li>Syntax : C\u00fa ph\u00e1p<ul> <li>In/Out : \u0110\u1ea7u v\u00e0o, ra</li> <li>Conditionals : \u0110i\u1ec1u ki\u1ec7n</li> <li>Loops : V\u00f2ng L\u1eb7p</li> </ul> </li> <li>Function : H\u00e0m</li> <li>Include : Bao g\u1ed3m, t\u1ea3i t\u1ec7p, t\u1ea3i th\u01b0 vi\u1ec7n</li> </ol>"},{"location":"Programming/hybrid-language/","title":"Hybrid language","text":"Hybrid (Compiled + Interpreted)"},{"location":"Programming/interpreted-language/","title":"Interpreted language","text":""},{"location":"Programming/Java/java-basic-datatypes-and-variables/","title":"DataTypes &amp; Variables","text":""},{"location":"Programming/Java/java-basic-datatypes-and-variables/#java-variables","title":"Java Variables","text":"<p>Trong Java, c\u00f3 nhi\u1ec1u lo\u1ea1i bi\u1ebfn kh\u00e1c nhau, v\u00ed d\u1ee5:</p> <ul> <li><code>String</code> - L\u01b0u tr\u1eef v\u0103n b\u1ea3n, ch\u1eb3ng h\u1ea1n nh\u01b0 \"Xin ch\u00e0o\". Gi\u00e1 tr\u1ecb chu\u1ed7i \u0111\u01b0\u1ee3c bao quanh b\u1edfi c\u00e1c b\u00e1o gi\u00e1 k\u00e9p</li> <li><code>int</code> - l\u01b0u tr\u1eef s\u1ed1 nguy\u00ean (s\u1ed1 nguy\u00ean), kh\u00f4ng c\u00f3 s\u1ed1 th\u1eadp ph\u00e2n, ch\u1eb3ng h\u1ea1n nh\u01b0 123 ho\u1eb7c -123</li> <li><code>float</code> - C\u1eeda h\u00e0ng s\u1ed1 \u0111i\u1ec3m n\u1ed5i, v\u1edbi s\u1ed1 th\u1eadp ph\u00e2n, ch\u1eb3ng h\u1ea1n nh\u01b0 19,99 ho\u1eb7c -19,99</li> <li><code>char</code> - L\u01b0u tr\u1eef c\u00e1c k\u00fd t\u1ef1 \u0111\u01a1n, ch\u1eb3ng h\u1ea1n nh\u01b0 'A' ho\u1eb7c 'B'. Gi\u00e1 tr\u1ecb char \u0111\u01b0\u1ee3c bao quanh b\u1edfi c\u00e1c tr\u00edch d\u1eabn \u0111\u01a1n l\u1ebb</li> <li><code>boolean</code> - L\u01b0u tr\u1eef c\u00e1c gi\u00e1 tr\u1ecb v\u1edbi hai tr\u1ea1ng th\u00e1i: \u0110\u00fang ho\u1eb7c Sai</li> </ul> <p>V\u00e0 Java t\u1ed3n t\u1ea1i 2 ki\u1ec3u bi\u1ebfn l\u00e0 Primitive v\u00e0 Wrapper Class.</p> Primitive Wrapper Class byte Byte short Short char Character int Integer long Long float Float double Double String"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#primitive-data","title":"Primitive Data","text":"<p>Primitive Data l\u00e0 nh\u1eefng lo\u1ea1i nh\u01b0 byte, short, char, int, long, float v\u00e0 double. \u0110\u00e2y l\u00e0 nh\u1eefng d\u1eef li\u1ec7u \u1edf d\u1ea1ng nguy\u00ean b\u1ea3n nh\u1ea5t c\u00f3 gi\u1edbi h\u1ea1n (c\u00f3 gi\u1edbi h\u1ea1n v\u1ec1 k\u00edch th\u01b0\u1edbc r\u00f5 r\u00e0ng) v\u00e0 kh\u00f4ng bao g\u1ed3m th\u00eam c\u00e1c t\u00ednh n\u0103ng ph\u1ee5.</p> <pre><code>byte b = 0;\nshort s = 0;\nchar c = '0';\nint i = 0;\nlong l = 0;\nfloat f = 0;\ndouble d = 0.0;\nSystem.out.println(\"byte   : \" + b);\nSystem.out.println(\"short  : \" + s);\nSystem.out.println(\"char   : \" + c);\nSystem.out.println(\"int    : \" + i);\nSystem.out.println(\"long   : \" + l);\nSystem.out.println(\"float  : \" + f);\nSystem.out.println(\"double : \" + d);\n</code></pre> <pre><code>byte   : 0\nshort  : 0\nchar   : 0\nint    : 0\nlong   : 0\nfloat  : 0.0\ndouble : 0.0\n</code></pre>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#wrapper-class","title":"Wrapper Class","text":"<p>Ngo\u00e0i d\u1ea1ng d\u1eef li\u1ec7u nguy\u00ean th\u1ee7y, Java cung c\u1ea5p th\u00eam m\u1ed9t s\u1ed1 d\u1ea1ng d\u1eef li\u1ec7u m\u1edf r\u1ed9ng nh\u01b0 Byte, Integer, String, ... Nh\u1eefng d\u1ea1ng n\u00e0y c\u00f3 c\u1ea5u tr\u00fac ph\u1ee9c t\u1ea1o h\u01a1n xoay quanh d\u1eef li\u1ec7u nguy\u00ean b\u1ea3n. V\u00ed d\u1ee5 nh\u01b0 ki\u1ec3u interger d\u00f9ng \u0111\u1ec3 bi\u1ec3u di\u1ec5n s\u1ed1 t\u1ef1 nhi\u00ean c\u00f3 th\u1ec3 d\u00f9ng c\u1ea3 <code>int</code> v\u00e0 <code>Interger</code> \u0111\u1ec3 khai b\u00e1o, nh\u01b0ng <code>Interger</code> an to\u00e0n h\u01a1n khi chuy\u1ec3n ki\u1ec3u, ki\u1ec3m tra, t\u00ednh \u00e2m d\u01b0\u01a1ng, ... t\u1ed1t h\u01a1n. C\u00f3 th\u1ec3 n\u00f3i ti\u1ec7n d\u1ee5ng h\u01a1n nh\u01b0ng n\u1eb7ng n\u1ec1 h\u01a1n v\u1ec1 b\u1ed9 nh\u1edb \u0111\u1ebfn m\u1ee9c kh\u00f4ng c\u1ea7n thi\u1ebft.</p> <p>Ph\u1ea7n l\u1edbn c\u00e1i l\u1edbp n\u00e0y c\u00f3 l\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3 cho <code>String</code> v\u00e0 <code>Byte</code>. Hai ki\u1ec3u d\u1eef li\u1ec7u n\u00e0y b\u1ea3n th\u00e2n mang nhi\u1ec1u \u00fd ngh\u0129a v\u00e0 nhi\u1ec1u t\u00ednh n\u0103ng quan tr\u1ecdng bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u kh\u00e1 ph\u1ed5 bi\u1ebfn. Vi\u1ec7c h\u1ed7 tr\u1ee3 cho ch\u00fang \u0111em l\u1ea1i nhi\u1ec1u l\u1ee3i \u00edch cho l\u1eadp tr\u00ecnh vi\u00ean h\u01a1n nhi\u1ec1u so v\u1edbi <code>Interger</code>.</p> <p>\u0110i s\u00e2u h\u01a1n v\u1ec1 t\u1eebng lo\u1ea1i s\u1ebd \u0111\u1ec1 c\u1eadp \u1edf c\u00e1c ch\u01b0\u01a1ng sau.</p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#syntax","title":"Syntax","text":"<pre><code>type variableName = value;\n</code></pre> <p>Trong \u0111\u00f3 <code>type</code> l\u00e0 m\u1ed9t trong c\u00e1c lo\u1ea1i c\u1ee7a Java (nh\u01b0 int ho\u1eb7c chu\u1ed7i) v\u00e0 <code>variablename</code> l\u00e0 t\u00ean c\u1ee7a bi\u1ebfn (nh\u01b0 X ho\u1eb7c t\u00ean). D\u1ea5u b\u1eb1ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 g\u00e1n c\u00e1c gi\u00e1 tr\u1ecb cho bi\u1ebfn.</p> <p>\u0110\u1ec3 t\u1ea1o m\u1ed9t bi\u1ebfn n\u00ean l\u01b0u tr\u1eef v\u0103n b\u1ea3n, h\u00e3y xem v\u00ed d\u1ee5 sau:</p> <p>\u0110\u1ec3 t\u1ea1o m\u1ed9t bi\u1ebfn, b\u1ea1n ph\u1ea3i ch\u1ec9 \u0111\u1ecbnh lo\u1ea1i v\u00e0 g\u00e1n cho n\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb: C\u00e1c d\u1eef li\u1ec7u c\u01a1 b\u1ea3n trong t\u1ea5t c\u1ea3 c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh nh\u00ecn chung bao g\u1ed3m s\u1ed1 nguy\u00ean Interger, s\u1ed1 th\u1ef1c Float, ch\u1eef s\u1ed1 Char v\u00e0 chu\u1ed1i String.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>public class Main {\n    public static void main(String[] args) {\n        int     i   = 100000;\n        long    l   = 10000000000L;\n        float   f   = 123.123456789f;\n        double  d   = 456.123456789d;\n        byte    by  = 100;\n        short   s   = 10000;\n        char    c   = 'A';\n        boolean bl  = true;\n        String  str = \"Hello World\";\n\n        System.out.println(\"Int     : \" + i);\n        System.out.println(\"Long    : \" + l);\n        System.out.println(\"Float   : \" + f);\n        System.out.println(\"Double  : \" + d);\n        System.out.println(\"Byte    : \" + by);\n        System.out.println(\"Short   : \" + s);\n        System.out.println(\"Char    : \" + c);\n        System.out.println(\"Boolean : \" + bl);\n        System.out.println(\"String  : \" + str);\n    }\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Int     : 100000\nLong    : 10000000000\nFloat   : 123.12346\nDouble  : 456.123456789\nByte    : 100\nShort   : 10000\nChar    : A\nBoolean : true\nString  : Hello World\n</code></pre>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#mo-ta-cac-kieu-co-ban","title":"M\u00f4 t\u1ea3 c\u00e1c ki\u1ec3u c\u01a1 b\u1ea3n","text":""},{"location":"Programming/Java/java-basic-datatypes-and-variables/#cac-kieu-so-nguyen-int-long-byte-short-va-interger","title":"C\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean int, long, byte, short v\u00e0 Interger","text":"<p>C\u00f3 t\u1edbi 5 lo\u1ea1i \u0111\u1ec3 bi\u1ec3u di\u1ec5n s\u1ed1 nguy\u00ean l\u00e0 <code>int</code>, <code>byte</code>, <code>short</code>, <code>long</code> v\u00e0 m\u1ed9t ki\u1ec3u ri\u00eang c\u1ee7a Java c\u0169ng l\u00e0 s\u1ed1 nguy\u00ean l\u00e0 Interger.</p> <p>Trong \u0111\u00f3 4 ki\u1ec3u \u0111\u1ea7u <code>int</code>, <code>byte</code>, <code>short</code>, <code>long</code> ch\u1ec9 kh\u00e1c v\u1ec1 m\u1eb7t k\u00edch th\u01b0\u1edbc b\u1ed9 nh\u1edb, t\u01b0\u01a1ng \u0111\u01b0\u1ee3c l\u00e0 v\u1ec1 d\u1ea3i gi\u00e1 tr\u1ecb m\u00e0 ch\u00fang c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n.</p> Lo\u1ea1i K\u00edch th\u01b0\u1edbc <code>byte</code> 1 bytes <code>short</code> 2 bytes <code>int</code> 4 bytes <code>long</code> 8 bytes <p>C\u00e1c ph\u00e9p to\u00e1n c\u01a1 b\u1ea3n nh\u01b0 c\u1ed9ng tr\u1eeb nh\u00e2n chia v\u00e0 so s\u00e1nh c\u0169ng \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng t\u1ed1t v\u1edbi ki\u1ec3u s\u1ed1 nguy\u00ean n\u00e0y.</p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#integer","title":"Integer","text":"<p>Integer l\u00e0 m\u1ed9t l\u1edbp nguy\u00ean th\u1ee7y trong Java, \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 bi\u1ec3u di\u1ec5n c\u00e1c s\u1ed1 nguy\u00ean. N\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 bi\u1ec3u di\u1ec5n c\u00e1c s\u1ed1 nguy\u00ean trong m\u1ed9t ph\u1ea1m vi r\u1ed9ng l\u1edbn h\u01a1n so v\u1edbi c\u00e1c ki\u1ec3u s\u1ed1 nguy\u00ean kh\u00e1c.</p> <p>C\u00e1c ch\u1ee9c n\u0103ng c\u01a1 b\u1ea3n c\u1ee7a Interger l\u00e0:</p> <pre><code>Integer a = 10, b = 20;\nSystem.out.println(\"The value of a is: \" + a);\nSystem.out.println(\"The value of b is: \" + b);\n</code></pre> <p>K\u1ebft qu\u1ea3: <pre><code>The value of a is: 10\nThe value of b is: 20\n</code></pre></p> <p>L\u1edbp Interger c\u00f3 s\u1eb5n c\u00e1c bi\u1ebfn enum <code>MIN_VALUE</code>, <code>MAX_VALUE</code>:</p> <code>MIN_VALUE</code> <code>MAX_VALUE</code> -2147483648 2147483647 <p>V\u1ec1 c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c n\u00ean tham kh\u1ea3o ri\u00eang.</p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#float-double","title":"float, double","text":"<p><code>float</code> l\u00e0 ki\u1ec3u s\u1ed1 th\u1ef1c. C\u00f2n m\u1ed9t ki\u1ec3u bi\u1ebfn t\u01b0\u01a1ng t\u1ef1 kh\u00e1c l\u00e0 <code>double</code>, \u0111i\u1ec3m kh\u00e1c bi\u1ec7t duy nh\u1ea5t l\u00e0 <code>double</code> c\u00f3 kho\u1ea3ng bi\u1ec3u di\u1ec5n s\u1ed1 l\u1edbn h\u01a1n. C\u1ee5 th\u1ec3 l\u00e0:</p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#so-sanh-float-voi-double","title":"So s\u00e1nh float v\u1edbi double","text":""},{"location":"Programming/Java/java-basic-datatypes-and-variables/#kich-thuoc-va-o-chinh-xac","title":"K\u00edch th\u01b0\u1edbc v\u00e0 \u0111\u1ed9 ch\u00ednh x\u00e1c","text":"float double K\u00edch th\u01b0\u1edbc 4 bytes (32 bits) 8 bytes (64 bits) \u0110\u1ed9 ch\u00ednh x\u00e1c ~7 s\u1ed1 sau d\u1ea5u ph\u1ea9y ~15 s\u1ed1 sau d\u1ea5u ph\u00e2y"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#su-dung","title":"S\u1eed d\u1ee5ng","text":"<ul> <li><code>float</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi mu\u1ed1n ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb h\u01a1n s\u1ef1 ch\u00ednh x\u00e1c m\u1ee9c \u0111\u1ed9 cao (th\u00f4ng th\u01b0\u1eddng v\u1edbi con ng\u01b0\u1eddi ch\u1ec9 c\u1ea7n kho\u1ea3ng 3-6 \u0111\u1ed9 ch\u00ednh x\u00e1c sau d\u1ea5u ph\u1ea9y l\u00e0 \u0111\u00e1ng tin c\u1eady r\u1ed3i).<ul> <li><code>float</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 th\u00f4ng trong c\u00e1c l\u0129nh v\u1ef1c li\u00ean quan \u0111\u1ebfn \u0111\u1ed3 ho\u1ea1 v\u00e0 hi\u1ec3n th\u1ecb UI/UX</li> </ul> </li> <li><code>double</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong nh\u1eefng tr\u01b0\u1eddng h\u1ee3p y\u00eau c\u1ea7u \u0111\u1ed9 ch\u00ednh x\u00e1c v\u00ed d\u1ee5 nh\u01b0 nh\u1eefng l\u0129nh v\u1ef1c li\u00ean quan \u0111\u1ebfn to\u00e1n h\u1ecdc.<ul> <li><code>double</code> m\u1ea1nh m\u1ebd h\u01a1n trong to\u00e1n h\u1ecdc, khoa h\u1ecdc, khoa h\u1ecdc m\u00e1y t\u00ednh.</li> </ul> </li> </ul> <p>V\u1ec1 s\u1eed d\u1ee5ng <code>float</code> v\u00e0 <code>double</code> kh\u00f4ng c\u00f3 g\u00ec kh\u00e1c nhau nhi\u1ec1u, v\u00ed d\u1ee5:</p> <pre><code>public class Main {\n    public static void main(String[] args) {\n        float  f = 123.123456789f;\n        double d = 456.123456789d;\n        System.out.println(f);\n        System.out.println(d);\n    }\n}\n</code></pre> <p>K\u1ebft qu\u1ea3: <pre><code>123.12346\n456.123456789\n</code></pre></p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#char","title":"Char","text":"<p><code>char</code> trong Java l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t, n\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t k\u00fd t\u1ef1. <code>char</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t k\u00fd t\u1ef1 trong m\u1ed9t ng\u00f4n ng\u1eef n\u00e0o \u0111\u00f3 , ho\u1eb7c m\u1ed9t k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t trong m\u1ed9t \u1ee9ng d\u1ee5ng n\u00e0o \u0111\u00f3. H\u1ea7u h\u1ebft tr\u01b0\u1eddng h\u1ee3p th\u00ec <code>char</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0\u1ee3c/duy\u1ec7t t\u1eebng ch\u1eef c\u00f3 trong m\u1ed9t chu\u1ed7i (<code>String</code>). Ngo\u00e0i ra th\u00ec ki\u1ec3u bi\u1ebfn n\u00e0y c\u0169ng hay \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 \u0111\u1ea1i di\u1ec7n cho m\u1ed9t <code>word</code> trong m\u00e1y t\u00ednh. (n\u1ebfu ai ch\u01b0a bi\u1ebft th\u00ec \u0111\u01a1n v\u1ecb thu\u1eadn ti\u1ec7n nh\u1ea5t cho m\u00e1y t\u00ednh l\u00e0 <code>int</code> v\u00e0 <code>char</code>, hai ki\u1ec3u n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c \u01b0u ti\u00ean t\u00ednh to\u00e1n h\u01a1n c\u00e1c lo\u1ea1i c\u00f2n l\u1ea1i.)</p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#string","title":"String","text":"<p><code>String</code> trong Java l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t, n\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1 . <code>String</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1 trong m\u1ed9t ng\u00f4n ng\u1eef n\u00e0o \u0111\u00f3 , ho\u1eb7c m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t trong m\u1ed9t \u1ee9ng d\u1ee5ng n\u00e0o \u0111\u00f3 . <code>String</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong c\u00e1c \u1ee9ng d\u1ee5ng Java, t\u1eeb c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u01a1n gi\u1ea3n \u0111\u1ebfn c\u00e1c \u1ee9ng d\u1ee5ng ph\u1ee9c t\u1ea1p. <code>String</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1, v\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c ho\u1ea1t \u0111\u1ed9ng nh\u01b0 so s\u00e1nh, t\u00ecm ki\u1ebfm, thay th\u1ebf, c\u1eaft x\u00e9n, n\u1ed1i chu\u1ed7i, v.v. <code>String</code> l\u00e0 m\u1ed9t trong nh\u1eefng ki\u1ec3u d\u1eef li\u1ec7u quan tr\u1ecdng nh\u1ea5t trong Java.</p> <p>Kh\u00e1c bi\u1ec7t c\u1ee7a String trong Java v\u1edbi c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c l\u00e0:</p> <ol> <li><code>String</code> trong Java c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1</li> <li><code>String</code> trong Java l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng, kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1</li> <li><code>String</code> trong Java c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c ho\u1ea1t \u0111\u1ed9ng nh\u01b0 so s\u00e1nh</li> <li><code>String</code> trong Java c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c ho\u1ea1t \u0111\u1ed9ng nh\u01b0 t\u00ecm ki\u1ebfm</li> <li><code>String</code> trong Java c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c ho\u1ea1t \u0111\u1ed9ng nh\u01b0 thay th\u1ebf</li> </ol>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#variables","title":"Variables","text":"<p>C\u00f3 ba lo\u1ea1i bi\u1ebfn (<code>Variables</code>) trong Java, \u0111\u00f3 l\u00e0 local (bi\u1ebfn c\u1ee5c b\u1ed9), instance (v\u00ed d\u1ee5) v\u00e0 static (bi\u1ebfn t\u0129nh). M\u1ed9t bi\u1ebfn l\u00e0 t\u00ean c\u1ee7a m\u1ed9t khu v\u1ef1c d\u00e0nh ri\u00eang \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed5 trong b\u1ed9 nh\u1edb. N\u00f3i c\u00e1ch kh\u00e1c, n\u00f3 l\u00e0 m\u1ed9t t\u00ean c\u1ee7a v\u1ecb tr\u00ed b\u1ed9 nh\u1edb. N\u00f3 l\u00e0 s\u1ef1 k\u1ebft h\u1ee3p c\u1ee7a \"Vary + c\u00f3 th\u1ec3\" c\u00f3 ngh\u0129a l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c thay \u0111\u1ed5i.</p>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#local-variable","title":"Local Variable","text":"<p>M\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c khai b\u00e1o b\u00ean trong ph\u1ea7n th\u00e2n c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn c\u1ee5c b\u1ed9. B\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng bi\u1ebfn n\u00e0y trong ph\u01b0\u01a1ng th\u1ee9c \u0111\u00f3 v\u00e0 c\u00e1c ph\u01b0\u01a1ng th\u1ee9c kh\u00e1c trong l\u1edbp th\u1eadm ch\u00ed kh\u00f4ng nh\u1eadn th\u1ee9c \u0111\u01b0\u1ee3c r\u1eb1ng bi\u1ebfn t\u1ed3n t\u1ea1i.</p> <pre><code>public class LocalVariableExample {  \n    public static void main(String[] args)  \n    {  \n        //defining a Local Variable  \n        int num = 10;  \n        System.out.println(\" Variable: \" + num);  \n    }  \n}  \n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Variable: 10\n</code></pre>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#instance-variable","title":"Instance Variable","text":"<p>M\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c khai b\u00e1o b\u00ean trong l\u1edbp nh\u01b0ng b\u00ean ngo\u00e0i ph\u1ea7n th\u00e2n c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t bi\u1ebfn th\u1ec3 hi\u1ec7n. N\u00f3 kh\u00f4ng \u0111\u01b0\u1ee3c tuy\u00ean b\u1ed1 l\u00e0 t\u0129nh.</p> <p>N\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ed9t bi\u1ebfn th\u1ec3 hi\u1ec7n v\u00ec gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 l\u00e0 c\u1ee5 th\u1ec3 v\u1ec1 th\u1ec3 hi\u1ec7n v\u00e0 kh\u00f4ng \u0111\u01b0\u1ee3c chia s\u1ebb gi\u1eefa c\u00e1c tr\u01b0\u1eddng h\u1ee3p.</p> <pre><code>import java.io.*;  \npublic class InstanceVariableDemo {  \n    //Defining Instance Variables  \n    public String name;  \n    public int age=19;  \n //Creadting a default Constructor initializing Instance Variable  \n    public InstanceVariableDemo()  \n    {  \n        this.name = \"Deepak\";  \n    }  \n    public static void main(String[] args)  \n    {  \n        // Object Creation  \n        InstanceVariableDemo obj = new InstanceVariableDemo();  \n        System.out.println(\"Student Name is: \" + obj.name);  \n        System.out.println(\"Age: \"+ obj.age);  \n    }  \n}  \n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Student Name is: Deepak\nAge: 19\n</code></pre>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#static-variable","title":"Static variable","text":"<p>M\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c khai b\u00e1o l\u00e0 t\u0129nh \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn t\u0129nh. N\u00f3 kh\u00f4ng th\u1ec3 l\u00e0 \u0111\u1ecba ph\u01b0\u01a1ng. B\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o m\u1ed9t b\u1ea3n sao duy nh\u1ea5t c\u1ee7a bi\u1ebfn t\u0129nh v\u00e0 chia s\u1ebb n\u00f3 trong s\u1ed1 t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u1ee7a l\u1edbp. Ph\u00e2n b\u1ed5 b\u1ed9 nh\u1edb cho c\u00e1c bi\u1ebfn t\u0129nh ch\u1ec9 x\u1ea3y ra m\u1ed9t l\u1ea7n khi l\u1edbp \u0111\u01b0\u1ee3c t\u1ea3i trong b\u1ed9 nh\u1edb.</p> <pre><code>class Student{  \n    //static variable  \n   static int age;  \n}  \npublic class StaticVariableExample{  \n   public static void main(String args[]){  \n       Student s1 = new Student();  \n       Student s2 = new Student();  \n       s1.age = 24;  \n       s2.age = 21;  \n       Student.age = 23;  \n       System.out.println(\"S1\\'s age is: \" + s1.age);  \n       System.out.println(\"S2\\'s age is: \" + s2.age);  \n   }  \n}   \n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>S1's age is: 23\nS2's age is: 23\n</code></pre>"},{"location":"Programming/Java/java-basic-datatypes-and-variables/#tom-tat","title":"T\u00f3m t\u1eaft","text":"<p>Note</p> <ul> <li>Bi\u1ebfn c\u00f3 8 ki\u1ec3u c\u01a1 b\u1ea3n \u0111\u01b0\u1ee3c k\u1ebf th\u1eeba l\u00e0 <code>int</code>, <code>long</code>, <code>float</code>, <code>double</code>, <code>byte</code>, <code>short</code>, <code>char</code> v\u00e0 <code>boolean</code></li> <li>Lo\u1ea1i bi\u1ebfn c\u00f3 3 lo\u1ea1i ch\u00ednh l\u00e0 Local, Instance v\u00e0 Static</li> </ul>"},{"location":"Programming/Java/java-basic-synctax/","title":"Basic Synctax","text":""},{"location":"Programming/Java/java-basic-synctax/#target","title":"Target","text":"<p>Hi\u1ec3u \u0111\u01b0\u1ee3c nh\u1eefng \u0111i\u1ec1u c\u01a1 b\u1ea3n l\u00e0 ch\u00eca kh\u00f3a cho m\u1ed9t n\u1ec1n t\u1ea3ng v\u1eefng ch\u1eafc. Trong ph\u1ea7n n\u00e0y, h\u00e3y t\u00ecm hi\u1ec3u c\u00e1c thu\u1eadt ng\u1eef c\u01a1 b\u1ea3n, quy \u01b0\u1edbc \u0111\u1eb7t t\u00ean, t\u1eeb kh\u00f3a d\u00e0nh ri\u00eang, bi\u1ec3u th\u1ee9c, c\u00e2u l\u1ec7nh, c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, OOP, g\u00f3i, v.v.</p> <p>\u0110\u1ec3 in k\u1ebft qu\u1ea3 s\u1eed d\u1ee5ng \u2014&gt; System.out.println(); \u0110\u1ec3 l\u1ea5y d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o t\u1eeb ng\u01b0\u1eddi d\u00f9ng \u2014&gt; C\u00f3 th\u1ec3 s\u1eed d\u1ee5ng l\u1edbp Scanner ho\u1eb7c BufferedReader</p>"},{"location":"Programming/Java/java-basic-synctax/#hello-world","title":"Hello World","text":"<ul> <li>Tr\u01b0\u1edbc ti\u00ean t\u1ea1o m\u1ed9t t\u1ec7p t\u00ean l\u00e0 <code>HelloWorld.java</code></li> <li>Sao ch\u00e9p n\u1ed9i dung nh\u01b0 sau v\u00e0o trong t\u1ec7p:     <pre><code>public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n</code></pre></li> <li>Ch\u1ea1y th\u1eed v\u1edbi l\u1ec7nh <code>javac HelloWorld.java</code> \u0111\u1ec3 d\u1ef1ng ch\u01b0\u01a1ng tr\u00ecnh th\u00e0nh <code>byte code</code>.</li> <li>Khi th\u00e0nh c\u00f4ng s\u1ebd c\u00f3 m\u1ed9t t\u1ec7p l\u00e0 <code>HelloWorld.class</code></li> <li>Ch\u1ea1y th\u1eed ch\u01b0\u01a1ng tr\u00ecnh b\u1eb1ng <code>java HelloWorld</code></li> <li>K\u1ebft qu\u1ea3 s\u1ebd c\u00f3 tr\u00ean m\u00e0n h\u00ecnh l\u00e0:     <pre><code>Hello World!\n</code></pre></li> </ul> <p>Gi\u1ea3i th\u00edch: - <code>public class HelloWorld</code> l\u00e0 t\u00ean c\u1ee7a l\u1edbp, v\u00e0 t\u00ean n\u00e0y s\u1ebd ph\u1ea3i lu\u00f4n tr\u00f9ng v\u1edbi t\u00ean c\u1ee7a l\u1edbp.     - V\u00ed d\u1ee5 t\u00ean l\u1edbp l\u00e0 <code>HelloWorld</code> th\u00ec t\u00ean t\u1ec7p t\u01b0\u01a1ng \u1ee9ng c\u0169ng ph\u1ea3i l\u00e0 <code>HelloWorld.java</code> - <code>public static void main(String[] args)</code> l\u00e0 h\u00e0m b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 v\u00e0 s\u1ebd lu\u00f4n ch\u1ea1y \u0111\u1ea7u ti\u00ean. - <code>System.out.println</code> l\u00e0 h\u00e0m in k\u1ebft qu\u1ea3 ra m\u00e0n h\u00ecnh.</p>"},{"location":"Programming/Java/java-basic-synctax/#oc-au-vao","title":"\u0110\u1ecdc \u0111\u1ea7u v\u00e0o","text":"<p>C\u00f3 hai c\u00e1ch \u0111\u1ecdc d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o l\u00e0 Scanner v\u00e0 BufferedReader.</p>"},{"location":"Programming/Java/java-basic-synctax/#scanner","title":"Scanner","text":"<p>\u0110\u1ec3 \u0111\u1ecdc \u0111\u1ea7u v\u00e0o c\u00f3 hai c\u00e1ch: 1. \u0110\u1ecdc t\u1eeb parameter \u0111\u1ea7u v\u00e0o. 1. L\u00e0 \u0111\u1ecdc t\u1eeb l\u1edbp Scanner <pre><code>import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a string: \");\n        String stringInput = scanner.nextLine();\n        System.out.println(\"You entered: \" + stringInput);\n    }\n}\n</code></pre></p>"},{"location":"Programming/Java/java-basic-synctax/#bufferedreader","title":"BufferedReader","text":"<pre><code>import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            System.out.println(\"Enter your input: \");\n            String input = reader.readLine();\n            System.out.println(\"You entered: \" + input);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"Programming/Java/java-basic-synctax/#input-parameter","title":"Input Parameter","text":"<p>V\u1edbi c\u00e1ch n\u00e0y th\u00ec \u0111\u1ecdc \u0111\u1ea7u v\u00e0o d\u1eef li\u1ec7u qua chu\u1ed7i args n\u00ean c\u00e1ch ch\u1ea1y n\u00f3 h\u01a1i kh\u00e1c m\u1ed9t ch\u00fat, ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau:</p> <ul> <li><code>Main.java</code> <pre><code>public class Main {\n    public static void main(String[] args) {\n        for (String string : args) {\n            System.out.println(string);\n        }\n    }\n}\n</code></pre></li> <li>Ch\u1ea1y nh\u01b0 sau:<ul> <li>D\u00f9ng <code>java Main A B C D E F</code></li> <li>K\u1ebft qu\u1ea3:     <pre><code>A\nB\nC\nD\nE\nF\n</code></pre></li> <li><code>for (String string : args)</code> l\u00e0 h\u00e0m g\u1ecdi s\u1ebd duy\u1ec7t qua t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u00f3 trong chu\u1ed7i <code>args</code></li> </ul> </li> </ul>"},{"location":"Programming/Java/java-basic-synctax/#cach-khac","title":"C\u00e1ch kh\u00e1c","text":"<p>M\u1ed9t c\u00e1ch kh\u00e1c, n\u1ebfu mu\u1ed1n d\u01b0\u1ee3t qua m\u1ed9t l\u01b0\u1ee3t c\u00e1c ph\u1ea7n t\u1eed d\u1ef1a tr\u00ean ch\u1ec9 s\u1ed1 nh\u01b0 sau:</p> <pre><code>public class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Number of arguments: \" + args.length);\n        for (int i = 0; i &lt; args.length; i++) {\n            System.out.println(\"Argument \" + i + \": \" + args[i]);\n        }\n    }\n}\n</code></pre>"},{"location":"Programming/Java/java-helloworld/","title":"Hello World!","text":""},{"location":"Programming/Java/java-helloworld/#tao-tep","title":"T\u1ea1o t\u1ec7p","text":"<ol> <li>T\u1ea1o m\u1ed9t th\u01b0 m\u1ee5c tu\u1ef3 \u00fd.</li> <li>Trong \u0111\u00f3 t\u1ea1o m\u1ed9t t\u1ec7p t\u00ean l\u00e0 Hello.java</li> <li>Trong \u0111\u00f3 \u0111\u01b0a \u0111o\u1ea1n code n\u00e0y v\u00e0o.     <pre><code>public class Hello {\n  public static void main(String args[]) {\n    System.out.println(\"Hello World\");\n  }\n}\n</code></pre></li> <li>Ch\u1ea1y command sau:     <pre><code>javac Hello.java\njava Hello\n</code></pre></li> <li>K\u1ebft qu\u1ea3:     <pre><code>Hello World\n</code></pre></li> </ol> <p>\ud83d\udccc Ghim ... - T\u00ean t\u1ec7p b\u1eaft bu\u1ed9c ph\u1ea3i tr\u00f9ng v\u1edbi t\u00ean class. - H\u00e0m <code>main</code> s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi ngo\u00e0i c\u00f9ng n\u00ean b\u1eaft bu\u1ed9c ph\u1ea3i g\u1ecdi d\u1ea1ng <code>static</code> - <code>main(String args[])</code> L\u00e0 c\u00fa ph\u00e1p b\u1eaft bu\u1ed9c v\u1edbi <code>args[]</code> l\u00e0 \u0111\u1ea7u v\u00e0o ti\u00eau chu\u1ea9n. - <code>System.out.println</code> in ra m\u00e0n h\u00ecnh.</p>"},{"location":"Programming/Java/java-helloworld/#xu-ly-voi-bien-au-vao","title":"X\u1eed l\u00fd v\u1edbi bi\u1ebfn \u0111\u1ea7u v\u00e0o","text":"<p>\u0110\u1ed5i t\u00ean t\u1ec7p <code>Hello.java</code> b\u1eb1ng <code>Main.java</code> v\u00e0 s\u1eed d\u1ee5ng \u0111o\u1ea1n code sau: <pre><code>public class Main {\n  public static void main(String[] args) {\n    for (int i = 0; i &lt; args.length; ++i) {\n      System.out.println(\"[\" + i + \"]\" + args[i]);\n    }\n  }\n}\n</code></pre> - <code>args</code> l\u00e0 c\u00e1c bi\u1ebfn \u0111\u1ea7u v\u00e0o theo sau ch\u01b0\u01a1ng tr\u00ecnh ng\u0103n c\u00e1ch b\u1edfi d\u1ea5u \"c\u00e1ch (space)\" - <code>args.length</code> l\u00e0 t\u00ednh \u0111\u1ed9 d\u00e0i chu\u1ed7i <code>args</code>. - <code>args[i]</code> l\u00e0 gi\u00e1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed t\u1ea1i v\u1ecb tr\u00ed th\u1ee9 <code>i</code></p> <p>V\u00ed d\u1ee5 ki\u1ec3m th\u1eed ch\u01b0\u01a1ng tr\u00ecnh:</p> <pre><code>java Main.java string_1 string_2 string_3 string_4 string_5 string_6 string_7 string_8 string_9 string_10\n[0]string_1\n[1]string_2\n[2]string_3\n[3]string_4\n[4]string_5\n[5]string_6\n[6]string_7\n[7]string_8\n[8]string_9\n[9]string_10\n</code></pre>"},{"location":"Programming/Java/java-install/","title":"Java Install","text":""},{"location":"Programming/Java/java-install/#install-jre","title":"Install jre","text":"<p>Install JRE t\u1ea1i \u0111\u00e2y.</p>"},{"location":"Programming/Java/java-install/#install-jdk","title":"Install JDK","text":"<p>Install JDK t\u1ea1i \u0111\u00e2y.</p>"},{"location":"Programming/Java/java-introduce/","title":"Java Introduce","text":""},{"location":"Programming/Java/java-introduce/#what-is-java","title":"What is Java","text":"<p>Java l\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng , d\u1ef1a tr\u00ean l\u1edbp, c\u1ea5p cao . James Gosling t\u1ea1i Sun Microsystems (hi\u1ec7n l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a Oracle Corporation) \u0111\u00e3 thi\u1ebft k\u1ebf ng\u00f4n ng\u1eef n\u00e0y v\u00e0 n\u00f3 \u0111\u01b0\u1ee3c ph\u00e1t h\u00e0nh v\u00e0o n\u0103m 1995. Ng\u00f4n ng\u1eef n\u00e0y \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n v\u1edbi tri\u1ebft l\u00fd \" Vi\u1ebft m\u1ed9t l\u1ea7n, ch\u1ea1y m\u1ecdi n\u01a1i \" (WORA = Write once, run anywhere). Nguy\u00ean l\u00fd n\u00e0y nh\u1ea5n m\u1ea1nh t\u00ednh n\u0103ng ch\u00ednh c\u1ee7a Java - \u0111\u1ed9c l\u1eadp n\u1ec1n t\u1ea3ng , cho ph\u00e9p c\u00f9ng m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh Java ch\u1ea1y tr\u00ean nhi\u1ec1u n\u1ec1n t\u1ea3ng m\u00e0 kh\u00f4ng c\u1ea7n s\u1eeda \u0111\u1ed5i.</p> <p>Java \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 v\u1eeba \u0111\u01a1n gi\u1ea3n v\u1eeba m\u1ea1nh m\u1ebd . N\u00f3 m\u01b0\u1ee3n c\u00fa ph\u00e1p t\u1eeb C v\u00e0 C++, nh\u01b0ng lo\u1ea1i b\u1ecf m\u1ed9t s\u1ed1 ph\u1ee9c t\u1ea1p l\u1eadp tr\u00ecnh c\u1ea5p th\u1ea5p, ch\u1eb3ng h\u1ea1n nh\u01b0 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb r\u00f5 r\u00e0ng v\u00e0 k\u1ebf th\u1eeba \u0111a lu\u1ed3ng c\u00f3 trong C++. Kh\u00f4ng gi\u1ed1ng nh\u01b0 hai ng\u00f4n ng\u1eef n\u00e0y, Java kh\u00f4ng y\u00eau c\u1ea7u b\u1ea1n ph\u1ea3i d\u1ecdn d\u1eb9p b\u1ed9 nh\u1edb \u1ee9ng d\u1ee5ng theo c\u00e1ch th\u1ee7 c\u00f4ng, v\u00ec n\u00f3 c\u00f3 tr\u00ecnh thu gom r\u00e1c th\u1ef1c hi\u1ec7n nhi\u1ec7m v\u1ee5 n\u00e0y t\u1ef1 \u0111\u1ed9ng. \u0110\u01b0\u1ee3c bi\u1ebft \u0111\u1ebfn v\u1edbi t\u00ednh m\u1ea1nh m\u1ebd, b\u1ea3o m\u1eadt v\u00e0 \u0111\u01a1n gi\u1ea3n, Java \u0111\u00e3 tr\u1edf th\u00e0nh l\u1ef1a ch\u1ecdn ph\u1ed5 bi\u1ebfn trong s\u1ed1 c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n tr\u00ean to\u00e0n th\u1ebf gi\u1edbi. N\u00f3 h\u1ed7 tr\u1ee3 c\u00e1c k\u1ef9 thu\u1eadt l\u1eadp tr\u00ecnh kh\u00e1c nhau, bao g\u1ed3m l\u1eadp tr\u00ecnh chung, l\u1eadp tr\u00ecnh \u0111a lu\u1ed3ng v\u00e0 \u0111\u1ed3ng th\u1eddi, v\u00e0 l\u1eadp tr\u00ecnh ch\u1ee9c n\u0103ng.</p> <p>Java l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ph\u1ed5 bi\u1ebfn, \u0111\u01b0\u1ee3c t\u1ea1o ra v\u00e0o n\u0103m 1995. H\u1ec7 \u0111i\u1ec1u h\u00e0nh n\u00e0y thu\u1ed9c s\u1edf h\u1eefu c\u1ee7a Oracle v\u00e0 c\u00f3 h\u01a1n 3 t\u1ef7 thi\u1ebft b\u1ecb ch\u1ea1y Java.</p> <p>N\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho: - \u1ee8ng d\u1ee5ng di \u0111\u1ed9ng (\u0111\u1eb7c bi\u1ec7t l\u00e0 \u1ee9ng d\u1ee5ng Android) - \u1ee8ng d\u1ee5ng m\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n - \u1ee8ng d\u1ee5ng web - M\u00e1y ch\u1ee7 web v\u00e0 m\u00e1y ch\u1ee7 \u1ee9ng d\u1ee5ng - Tr\u00f2 ch\u01a1i - K\u1ebft n\u1ed1i c\u01a1 s\u1edf d\u1eef li\u1ec7u - V\u00e0 c\u00f2n nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa!</p>"},{"location":"Programming/Java/java-introduce/#tai-sao-nen-su-dung-java","title":"T\u1ea1i sao n\u00ean s\u1eed d\u1ee5ng Java?","text":"<ul> <li>Java ho\u1ea1t \u0111\u1ed9ng tr\u00ean nhi\u1ec1u n\u1ec1n t\u1ea3ng kh\u00e1c nhau (Windows, Mac, Linux, Raspberry Pi, v.v.)</li> <li>\u0110\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ph\u1ed5 bi\u1ebfn nh\u1ea5t tr\u00ean th\u1ebf gi\u1edbi</li> <li>N\u00f3 c\u00f3 nhu c\u1ea7u l\u1edbn trong th\u1ecb tr\u01b0\u1eddng vi\u1ec7c l\u00e0m hi\u1ec7n nay</li> <li>N\u00f3 d\u1ec5 h\u1ecdc v\u00e0 d\u1ec5 s\u1eed d\u1ee5ng</li> <li>N\u00f3 l\u00e0 m\u00e3 ngu\u1ed3n m\u1edf v\u00e0 mi\u1ec5n ph\u00ed</li> <li>N\u00f3 an to\u00e0n, nhanh ch\u00f3ng v\u00e0 m\u1ea1nh m\u1ebd</li> <li>N\u00f3 c\u00f3 s\u1ef1 h\u1ed7 tr\u1ee3 c\u1ee7a c\u1ed9ng \u0111\u1ed3ng l\u1edbn (h\u00e0ng ch\u1ee5c tri\u1ec7u nh\u00e0 ph\u00e1t tri\u1ec3n)</li> <li>Java l\u00e0 ng\u00f4n ng\u1eef h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng cung c\u1ea5p c\u1ea5u tr\u00fac r\u00f5 r\u00e0ng cho c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh v\u00e0 cho ph\u00e9p t\u00e1i s\u1eed d\u1ee5ng m\u00e3, gi\u00fap gi\u1ea3m chi ph\u00ed ph\u00e1t tri\u1ec3n</li> <li>V\u00ec Java g\u1ea7n v\u1edbi C++ v\u00e0 C# n\u00ean c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng chuy\u1ec3n sang Java ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i</li> </ul>"},{"location":"Programming/Java/java-introduce/#tham-khao","title":"Tham kh\u1ea3o","text":"<ul> <li>https://www.w3schools.com/java/java_intro.asp</li> </ul>"},{"location":"Programming/Java/java-jdk-jre-jvm/","title":"JDK, JRE v\u00e0 JVM","text":""},{"location":"Programming/Java/java-jdk-jre-jvm/#tong-quan","title":"T\u1ed5ng quan","text":"<p>Hi\u1ec3u \u0111\u01b0\u1ee3c s\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa JDK, JRE v\u00e0 JVM \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong vi\u1ec7c hi\u1ec3u c\u00e1ch Java ho\u1ea1t \u0111\u1ed9ng v\u00e0 c\u00e1ch m\u1ed7i th\u00e0nh ph\u1ea7n \u0111\u00f3ng g\u00f3p v\u00e0o qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n v\u00e0 th\u1ef1c thi c\u00e1c \u1ee9ng d\u1ee5ng Java. S\u1ef1 kh\u00e1c bi\u1ec7t ch\u00ednh gi\u1eefa JDK, JRE v\u00e0 JVM l\u00e0:</p> <ul> <li>JDK : Java Development Kit l\u00e0 m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ph\u00e1t tri\u1ec3n c\u00e1c \u1ee9ng d\u1ee5ng v\u00e0 applet Java.</li> <li>JRE : JRE l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Java Runtime Environment  v\u00e0 n\u00f3 cung c\u1ea5p m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 ch\u1ec9 ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh Java tr\u00ean h\u1ec7 th\u1ed1ng.</li> <li>JVM : JVM l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Java Virtual Machine v\u00e0 ch\u1ecbu tr\u00e1ch nhi\u1ec7m th\u1ef1c thi ch\u01b0\u01a1ng tr\u00ecnh Java.</li> </ul> Di\u1ec7n m\u1ea1o JDK JRE M\u00e1y \u1ea3o JVM M\u1ee5c \u0111\u00edch \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ph\u00e1t tri\u1ec3n c\u00e1c \u1ee9ng d\u1ee5ng Java \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ea1y c\u00e1c \u1ee9ng d\u1ee5ng Java Ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y m\u00e3 Java Ph\u1ee5 thu\u1ed9c n\u1ec1n t\u1ea3ng Ph\u1ee5 thu\u1ed9c v\u00e0o n\u1ec1n t\u1ea3ng Ph\u1ee5 thu\u1ed9c v\u00e0o n\u1ec1n t\u1ea3ng N\u1ec1n t\u1ea3ng \u0111\u1ed9c l\u1eadp Bao g\u1ed3m N\u00f3 bao g\u1ed3m c\u00e1c c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n nh\u01b0 (tr\u00ecnh bi\u00ean d\u1ecbch) + JRE N\u00f3 bao g\u1ed3m c\u00e1c th\u01b0 vi\u1ec7n \u0111\u1ec3 ch\u1ea1y \u1ee9ng d\u1ee5ng Java + JVM N\u00f3 ch\u1ea1y m\u00e3 byte Java v\u00e0 l\u00e0m cho \u1ee9ng d\u1ee5ng Java c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng tr\u00ean m\u1ecdi n\u1ec1n t\u1ea3ng. Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng Vi\u1ebft v\u00e0 bi\u00ean d\u1ecbch m\u00e3 Java Ch\u1ea1y \u1ee9ng d\u1ee5ng Java tr\u00ean h\u1ec7 th\u1ed1ng Chuy\u1ec3n \u0111\u1ed5i bytecode th\u00e0nh m\u00e3 m\u00e1y g\u1ed1c T\u1ed5ng qu\u00e1t v\u1ec1 JDK, JRE v\u00e0 JVM <p>L\u01b0u \u00fd</p> <p>L\u01b0u \u00fd: JVM kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o n\u1ec1n t\u1ea3ng, nh\u01b0ng JVM tri\u1ec3n khai kh\u00e1c nhau \u1edf m\u1ed7i n\u1ec1n t\u1ea3ng v\u00ec n\u00f3 t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh g\u1ed1c v\u00e0 ph\u1ea7n c\u1ee9ng. V\u00ec v\u1eady, tr\u00ean th\u1ef1c t\u1ebf, n\u00f3 ph\u1ee5 thu\u1ed9c v\u00e0o n\u1ec1n t\u1ea3ng .</p>"},{"location":"Programming/Java/java-jdk-jre-jvm/#jvm","title":"JVM","text":"<ul> <li>JVM (Java Virtual Machine) l\u00e0 m\u00e1y \u1ea3o t\u1ea1o ra m\u00f4i tr\u01b0\u1eddng m\u00e1y \u1ea3o \u0111\u1ec3 th\u1ef1c thi m\u00e3 java bytecode.</li> <li>M\u00e1y \u1ea3o Java l\u00e0 ph\u1ea7n m\u1ec1m gi\u1ea3 l\u1eadp m\u00e1y t\u00ednh, n\u00f3 t\u1eadp h\u1ee3p c\u00e1c l\u1ec7nh logic \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh ho\u1ea1t \u0111\u1ed9ng c\u1ee7a m\u00e1y. C\u00f3 th\u1ec3 xem n\u00f3 nh\u01b0 l\u00e0 m\u1ed9t h\u1ec7 \u0111i\u1ec1u h\u00e0nh thu nh\u1ecf.</li> <li>JVM chuy\u1ec3n m\u00e3 byte code th\u00e0nh machine code t\u00f9y theo m\u00f4i tr\u01b0\u1eddng t\u01b0\u01a1ng \u1ee9ng (g\u1ecdi l\u00e0 kh\u1ea3 n\u0103ng kh\u1ea3 chuy\u1ec3n)</li> <li>JVM cung c\u1ea5p m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi cho ch\u01b0\u01a1ng tr\u00ecnh Java (g\u1ecdi \u0111\u00f3 l\u00e0 kh\u1ea3 n\u0103ng \u0111\u1ed9c l\u1eadp v\u1edbi n\u1ec1n).</li> <li>JVM c\u00f3 s\u1eb5n trong nhi\u1ec1u ph\u1ea7n c\u1ee9ng v\u00e0 n\u1ec1n t\u1ea3ng ph\u1ea7n m\u1ec1m.</li> </ul> <p>JVM g\u1ed3m 4 nhi\u1ec7m v\u1ee5 ch\u00ednh:</p> <ol> <li>Load code</li> <li>Verifies code</li> <li>Executes code</li> <li>Provides runtime enviroment</li> </ol>"},{"location":"Programming/Java/java-jdk-jre-jvm/#jdk","title":"JDK","text":""},{"location":"Programming/Java/java-jdk-jre-jvm/#jdk-la","title":"JDK l\u00e0","text":"<p>JDK l\u00e0 Java Development Kit, l\u00e0 m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ph\u00e1t tri\u1ec3n c\u00e1c \u1ee9ng d\u1ee5ng v\u00e0 applet Java.</p> <p>Java Development Kit (JDK) l\u00e0 m\u1ed9t m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m \u0111a n\u1ec1n t\u1ea3ng cung c\u1ea5p m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 v\u00e0 th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft \u0111\u1ec3 ph\u00e1t tri\u1ec3n c\u00e1c \u1ee9ng d\u1ee5ng ph\u1ea7n m\u1ec1m v\u00e0 applet d\u1ef1a tr\u00ean Java. \u0110\u00e2y l\u00e0 m\u1ed9t g\u00f3i c\u1ed1t l\u00f5i \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong Java, c\u00f9ng v\u1edbi JVM (Java Virtual Machine) v\u00e0 JRE (Java Runtime Environment). </p> <p>Ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u th\u01b0\u1eddng b\u1ecb nh\u1ea7m l\u1eabn gi\u1eefa JRE v\u00e0 JDK, n\u1ebfu b\u1ea1n ch\u1ec9 quan t\u00e2m \u0111\u1ebfn vi\u1ec7c ch\u1ea1y c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh Java tr\u00ean m\u00e1y c\u1ee7a m\u00ecnh th\u00ec b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u1ef1c hi\u1ec7n b\u1eb1ng Java Runtime Environment. Tuy nhi\u00ean, n\u1ebfu b\u1ea1n mu\u1ed1n ph\u00e1t tri\u1ec3n m\u1ed9t \u1ee9ng d\u1ee5ng ph\u1ea7n m\u1ec1m d\u1ef1a tr\u00ean Java th\u00ec c\u00f9ng v\u1edbi JRE, b\u1ea1n c\u00f3 th\u1ec3 c\u1ea7n m\u1ed9t s\u1ed1 c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft b\u1ed5 sung, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 JDK.</p> <p>JDK=JRE+C\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n</p>"},{"location":"Programming/Java/java-jdk-jre-jvm/#noi-dung-cua-jdk","title":"N\u1ed9i dung c\u1ee7a JDK","text":"<p>JDK c\u00f3 M\u00e1y \u1ea3o Java (JVM) ri\u00eang v\u00e0 m\u1ed9t s\u1ed1 t\u00e0i nguy\u00ean kh\u00e1c c\u1ea7n thi\u1ebft cho vi\u1ec7c ph\u00e1t tri\u1ec3n \u1ee8ng d\u1ee5ng Java. </p> <p>JDK bao g\u1ed3m:</p> <ol> <li>M\u00f4i tr\u01b0\u1eddng ch\u1ea1y Java (JRE),</li> <li>Tr\u00ecnh th\u00f4ng d\u1ecbch/tr\u00ecnh t\u1ea3i (Java),</li> <li>M\u1ed9t tr\u00ecnh bi\u00ean d\u1ecbch (javac),</li> <li>M\u1ed9t tr\u00ecnh l\u01b0u tr\u1eef (jar) v\u00e0 nhi\u1ec1u h\u01a1n n\u1eefa.</li> <li>Java Runtime Environment trong JDK<ul> <li>Th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Private Runtime v\u00ec n\u00f3 t\u00e1ch bi\u1ec7t v\u1edbi JRE th\u00f4ng th\u01b0\u1eddng v\u00e0 c\u00f3 th\u00eam n\u1ed9i dung.</li> <li>Private Runtime trong JDK ch\u1ee9a JVM v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c th\u01b0 vi\u1ec7n l\u1edbp c\u00f3 trong m\u00f4i tr\u01b0\u1eddng s\u1ea3n xu\u1ea5t, c\u0169ng nh\u01b0 c\u00e1c th\u01b0 vi\u1ec7n b\u1ed5 sung h\u1eefu \u00edch cho nh\u00e0 ph\u00e1t tri\u1ec3n, v\u00ed d\u1ee5 nh\u01b0 th\u01b0 vi\u1ec7n qu\u1ed1c t\u1ebf h\u00f3a v\u00e0 th\u01b0 vi\u1ec7n IDL.</li> </ul> </li> </ol>"},{"location":"Programming/Java/java-jdk-jre-jvm/#cac-jdk-pho-bien-nhat","title":"C\u00e1c JDK ph\u1ed5 bi\u1ebfn nh\u1ea5t","text":"<ul> <li>Oracle JDK: JDK ph\u1ed5 bi\u1ebfn nh\u1ea5t v\u00e0 l\u00e0 nh\u00e0 ph\u00e2n ph\u1ed1i ch\u00ednh c\u1ee7a Java11,</li> <li>OpenJDK: S\u1eb5n s\u00e0ng s\u1eed d\u1ee5ng: JDK 15, JDK 14 v\u00e0 JMC,</li> <li>Azul Systems Zing: JDK hi\u1ec7u qu\u1ea3 v\u00e0 \u0111\u1ed9 tr\u1ec5 th\u1ea5p cho h\u1ec7 \u0111i\u1ec1u h\u00e0nh Linux,</li> <li>Azul Systems: th\u01b0\u01a1ng hi\u1ec7u Zulu d\u1ef1a tr\u00ean Linux, Windows, Mac OS X,</li> <li>IBM J9 JDK: d\u00e0nh cho AIX, Linux, Windows v\u00e0 nhi\u1ec1u h\u1ec7 \u0111i\u1ec1u h\u00e0nh kh\u00e1c,</li> <li>Amazon Corretto: t\u00f9y ch\u1ecdn m\u1edbi nh\u1ea5t v\u1edbi b\u1ea3n d\u1ef1ng OpenJDK mi\u1ec5n ph\u00ed v\u00e0 h\u1ed7 tr\u1ee3 d\u00e0i h\u1ea1n.</li> </ul>"},{"location":"Programming/Java/java-jdk-jre-jvm/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":""},{"location":"Programming/Java/java-jdk-jre-jvm/#cai-at-jdk","title":"C\u00e0i \u0111\u1eb7t JDK","text":"<p>Vi\u1ec7c thi\u1ebft l\u1eadp JDK trong m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n c\u1ee7a b\u1ea1n c\u1ef1c k\u1ef3 d\u1ec5 d\u00e0ng, ch\u1ec9 c\u1ea7n l\u00e0m theo c\u00e1c b\u01b0\u1edbc \u0111\u01a1n gi\u1ea3n d\u01b0\u1edbi \u0111\u00e2y. </p> <ul> <li>Truy c\u1eadp Trang T\u1ea3i xu\u1ed1ng ch\u00ednh th\u1ee9c c\u1ee7a Oracle th\u00f4ng qua li\u00ean k\u1ebft n\u00e0y</li> <li>Ch\u1ecdn phi\u00ean b\u1ea3n JDK m\u1edbi nh\u1ea5t v\u00e0 nh\u1ea5p v\u00e0o T\u1ea3i xu\u1ed1ng r\u1ed3i th\u00eam v\u00e0o classpath c\u1ee7a b\u1ea1n.</li> <li>Ch\u1ec9 c\u1ea7n ki\u1ec3m tra xem ph\u1ea7n m\u1ec1m JDK \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t \u0111\u00fang v\u1ecb tr\u00ed tr\u00ean m\u00e1y t\u00ednh c\u1ee7a b\u1ea1n hay ch\u01b0a, v\u00ed d\u1ee5: <code>C:\\Program Files\\Java\\jdk11.0.9</code>.</li> </ul>"},{"location":"Programming/Java/java-jdk-jre-jvm/#at-java_home-cho-windows","title":"\u0110\u1eb7t JAVA_HOME cho Windows","text":""},{"location":"Programming/Java/java-jdk-jre-jvm/#at-java_home-cho-linux","title":"\u0110\u1eb7t JAVA_HOME cho Linux","text":"<pre><code>export JAVA_HOME=~/../../../../\n</code></pre>"},{"location":"Programming/Java/java-jdk-jre-jvm/#jre","title":"JRE","text":""},{"location":"Programming/Javascript/javascript/","title":"Javascript","text":""},{"location":"Programming/Javascript/javascript/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Javascript l\u00e0 ng\u00f4n ng\u1eef \u0111\u01a1n gi\u1ea3n, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf ch\u1ee7 y\u1ebfu \u0111\u1ec3 l\u00e0m server. C\u00e1ch ch\u1ea1y l\u1ec7nh c\u1ee7a JS ch\u00ednh nh\u01b0 t\u00ean g\u1ecdi - script, \u0110\u1eb7c \u0111i\u1ec3m kh\u00e1c bi\u1ec7t khi\u1ebfn javascript \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong l\u1eadp tr\u00ecnh server v\u00ec t\u00ednh th\u1ef1c thi nhi\u1ec1u lu\u1ed3ng m\u1ea1nh m\u1ebd h\u01a1n l\u00e0 c\u00e1c ng\u00f4n ng\u1eef truy\u1ec1n th\u1ed1ng <code>C</code>, <code>C++</code>, <code>C#</code>, ...</p>"},{"location":"Programming/Javascript/javascript/#getting-start","title":"Getting Start","text":"<p>\u0110\u1ec3 b\u1eaft \u0111\u1ea7u c\u1ea7n t\u1ea3i v\u1ec1 \u1ee9ng d\u1ee5ng NodeJs. C\u00f3 th\u1ec3 ch\u1ea1y tr\u01b0\u1edbc ti\u1ebfp nh\u01b0ng c\u00e1ch n\u00e0y d\u1ec5 hi\u1ec3u v\u00e0 d\u1ec5 ti\u1ebfp c\u1eadn h\u01a1n.</p>"},{"location":"Programming/Javascript/javascript/#hello-world","title":"Hello World","text":"<ul> <li>Th\u1eed m\u1ed9t \u0111o\u1ea1n \u0111\u01a1n gi\u1ea3n, t\u1ea1o t\u1ec7p <code>helloworld.js</code></li> <li>D\u00e1n n\u1ed9i dung sau \u0111\u00e2y v\u00e0o:     <pre><code>console.log(\"Hello World\");\n</code></pre></li> <li>Xong th\u00ec ch\u1ea1y l\u1ec7nh sau:     <pre><code>node helloworld.js\n</code></pre></li> <li>Ch\u1ea1y xong th\u00ec k\u1ebft qu\u1ea3 \u0111\u01b0\u1ee3c l\u00e0:     <pre><code>Hello World\n</code></pre></li> </ul>"},{"location":"Programming/Kotlin/kotlin-basic-tour/","title":"Basic Concept","text":"<p>V\u1edbi nh\u1eefng ng\u00f4n ng\u1eef b\u1eadc cao, c\u00fa ph\u00e1p \u0111\u00e3 t\u1ed1i gi\u1ea3n ho\u00e1 \u0111\u1ebfn m\u1ee9c t\u1ed1i \u0111a c\u00e1c ph\u01b0\u01a1ng th\u1ee9c \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed3i. Th\u1ebf n\u00ean ch\u1ec9 c\u1ea7n \u0111i qua m\u1ed9t l\u01b0\u1ee3t c\u00e1c v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n l\u00e0 h\u00f2m h\u00f2m n\u1eafm \u0111\u01b0\u1ee3c ng\u00f4n ng\u1eef n\u00e0y.</p> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m ch\u00ednh l\u00e0 v\u1ec1 b\u1ea3n ch\u1ea5t, c\u00e1c ng\u00f4n ng\u1eef b\u1eadc cao l\u00e0 g\u00f3i c\u1ee7a c\u00e1c ng\u00f4n ng\u1eef tr\u01b0\u1edbc \u0111\u00f3, th\u1ebf n\u00ean h\u00e3y t\u1eadp trung h\u1ecdc k\u1ef9 thay v\u00ec h\u1ecdc l\u01b0\u1edbt.</p> <p>Trong ph\u1ea7n n\u00e0y tr\u00ecnh b\u00e0y b\u1ea3y ch\u1ee7 \u0111\u1ec1 ch\u00ednh:</p> <ol> <li>Hello world</li> <li>Basic types</li> <li>Collections</li> <li>Control flow</li> <li>Functions</li> <li>Classes</li> <li>Null safety</li> </ol>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#hello-world","title":"Hello World","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng ng\u00f4n ng\u1eef Kotlin.</p> <pre><code>fun main() {\n    println(\"Hello, world!!!\")\n}\n</code></pre> <ul> <li>Ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh in ra ngo\u00e0i m\u00e0n h\u00ecnh ch\u1eef <code>Hello, world!!!</code></li> <li>\u0110\u1ec3 in ra ngo\u00e0i d\u00f2ng ch\u1eef \"Hello, world!!!\", c\u00fa ph\u00e1p \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng l\u00e0 <code>println()</code></li> </ul>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#variables-bien","title":"Variables (Bi\u1ebfn)","text":"<ul> <li><code>val</code> : Bi\u1ebfn Read-only (ch\u1ec9 \u0111\u1ecdc)</li> <li><code>var</code> : Bi\u1ebfn Mutable (c\u00f3 th\u1ec3 thay \u0111\u1ed5i)</li> </ul> <pre><code>fun main() {\n    val popcorn = 5    // There are 5 boxes of popcorn\n    val hotdog = 7     // There are 7 hotdogs\n    var customers = 10 // There are 10 customers in the queue\n\n    popcorn = 0\n    hotdog = 0\n    customers = 8\n    println(popcorn)\n    println(hotdog)\n    println(customers)\n}\n</code></pre> <p>N\u1ebfu c\u1ed1 t\u00ecnh g\u1eafn, s\u1ebd b\u1ecb l\u1ed7i:</p> K\u1ebft qu\u1ea3<pre><code>fun main() {\n    val popcorn = 5    // There are 5 boxes of popcorn\n    val hotdog = 7     // There are 7 hotdogs\n\n    popcorn = 0\n    hotdog = 0\n\n    println(popcorn)\n    println(hotdog)\n}\n</code></pre> K\u1ebft qu\u1ea3<pre><code>'val' cannot be reassigned.\n'val' cannot be reassigned.\n</code></pre> <p>Warning</p> <p>Ch\u00fang t\u00f4i khuy\u00ean b\u1ea1n n\u00ean khai b\u00e1o t\u1ea5t c\u1ea3 c\u00e1c bi\u1ebfn l\u00e0 ch\u1ec9 \u0111\u1ecdc read-only (<code>val</code>) theo m\u1eb7c \u0111\u1ecbnh. Ch\u1ec9 s\u1eed d\u1ee5ng c\u00e1c bi\u1ebfn c\u00f3 th\u1ec3 thay \u0111\u1ed5i - mutable (<code>var</code>) n\u1ebfu b\u1ea1n th\u1ef1c s\u1ef1 c\u1ea7n.B\u1eb1ng c\u00e1ch \u0111\u00f3, b\u1ea1n \u00edt c\u00f3 kh\u1ea3 n\u0103ng v\u00f4 t\u00ecnh thay \u0111\u1ed5i th\u1ee9 g\u00ec \u0111\u00f3 kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 thay \u0111\u1ed5i.</p>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#mau-string","title":"M\u1eabu String","text":"<p>Th\u1eadt h\u1eefu \u00edch khi bi\u1ebft c\u00e1ch in n\u1ed9i dung c\u1ee7a c\u00e1c bi\u1ebfn th\u00e0nh \u0111\u1ea7u ra ti\u00eau chu\u1ea9n. B\u1ea1n c\u00f3 th\u1ec3 l\u00e0m \u0111i\u1ec1u n\u00e0y v\u1edbi c\u00e1c m\u1eabu chu\u1ed7i. B\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c bi\u1ec3u th\u1ee9c m\u1eabu \u0111\u1ec3 truy c\u1eadp d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong c\u00e1c bi\u1ebfn v\u00e0 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c v\u00e0 chuy\u1ec3n \u0111\u1ed5i ch\u00fang th\u00e0nh c\u00e1c chu\u1ed7i. Gi\u00e1 tr\u1ecb chu\u1ed7i l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1 trong d\u1ea5u ngo\u1eb7c k\u00e9p <code>\"</code>. Bi\u1ec3u th\u1ee9c m\u1eabu lu\u00f4n b\u1eaft \u0111\u1ea7u b\u1eb1ng d\u1ea5u hi\u1ec7u \u0111\u00f4 la <code>$</code>.</p> <p>\u0110\u1ec3 \u0111\u00e1nh gi\u00e1 m\u1ed9t \u0111o\u1ea1n m\u00e3 trong bi\u1ec3u th\u1ee9c m\u1eabu, h\u00e3y \u0111\u1eb7t m\u00e3 trong ni\u1ec1ng r\u0103ng xo\u0103n <code>{}</code> sau d\u1ea5u hi\u1ec7u \u0111\u00f4 la <code>$</code>.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>val customers = 10\nprintln(\"There are $customers customers\")\n// There are 10 customers\n\nprintln(\"There are ${customers + 1} customers\")\n// There are 11 customers\n</code></pre> <ul> <li>N\u1ec5u <code>x</code> l\u00e0 m\u1ed9t bi\u1ebfn, gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c l\u1ea5y th\u00f4ng qua <code>$x</code></li> <li>N\u1ebfu l\u00e0 m\u1ed9t ph\u00e9p t\u00ednh c\u00f3 th\u1ec3 l\u1ea5y th\u00f4ng qua <code>${}</code></li> </ul>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#basic-types-cac-kieu-co-ban","title":"Basic types (C\u00e1c ki\u1ec3u c\u01a1 b\u1ea3n)","text":""},{"location":"Programming/Kotlin/kotlin-basic-tour/#augmented-assignments-nhiem-vu-tang-cuong","title":"Augmented assignments (Nhi\u1ec7m v\u1ee5 t\u0103ng c\u01b0\u1eddng)","text":"S\u1ef1 bi\u1ec3u l\u1ed9 D\u1ecbch sang <code>a += b</code> a.plusAssign(b) <code>a -= b</code> a.minusAssign(b) <code>a *= b</code> a.timesAssign(b) <code>a /= b</code> a.divAssign(b) <code>a %= b</code> a.remAssign(b) <pre><code>var customers = 10\n\n// Some customers leave the queue\ncustomers = 8\n\ncustomers = customers + 3 // Example of addition: 11\ncustomers += 7            // Example of addition: 18\ncustomers -= 3            // Example of subtraction: 15\ncustomers *= 2            // Example of multiplication: 30\ncustomers /= 3            // Example of division: 10\n\nprintln(customers) // 10\n</code></pre>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#cac-kieu","title":"C\u00e1c ki\u1ec3u","text":"Category Basic types Example code Integers <code>Byte</code>, <code>Short</code>, <code>Int</code>, <code>Long</code> val year: Int = 2020 Unsigned integers <code>UByte</code>, <code>UShort</code>, <code>UInt</code>, <code>ULong</code> val score: UInt = 100u Floating-point numbers <code>Float</code>, <code>Double</code> val currentTemp: Float = 24.5f, val price: Double = 19.99 Booleans <code>Boolean</code> val isEnabled: Boolean = true Characters <code>Char</code> val separator: Char = ',' Strings <code>String</code> val message: String = \"Hello, world!\" <pre><code>fun main() {\n    val d: Int // Variable declared without initialization\n    d = 3 // Variable initialized\n    val e: String = \"hello\" // Variable explicitly typed and initialized\n\n    // Variables can be read because they have been initialized\n    println(d) // 3\n    println(e) // hello\n}\n</code></pre> <p>Code l\u00e1o:</p> <pre><code>    val d: Int\n    println(d)\n</code></pre> <p>L\u1ed7i b\u00e1o ra:</p> <pre><code>Variable 'd' must be initialized.\n</code></pre>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#collections-bo-suu-tap","title":"Collections (B\u1ed9 s\u01b0u t\u1eadp)","text":"<p>C\u00e1c lo\u1ea1i s\u01b0u t\u1eadp</p> C\u00e1c lo\u1ea1i s\u01b0u t\u1eadp M\u00f4 t\u1ea3 <code>Lists</code> B\u1ed9 s\u01b0u t\u1eadp c\u00e1c m\u1eb7t h\u00e0ng \u0111\u01b0\u1ee3c \u0111\u1eb7t h\u00e0ng <code>Sets</code> B\u1ed9 s\u01b0u t\u1eadp c\u00e1c m\u1eb7t h\u00e0ng kh\u00f4ng c\u00f3 th\u1ee9 t\u1ef1 \u0111\u1ed9c \u0111\u00e1o <code>Maps</code> B\u1ed9 c\u00e1c c\u1eb7p gi\u00e1 tr\u1ecb kh\u00f3a trong \u0111\u00f3 c\u00e1c ph\u00edm l\u00e0 duy nh\u1ea5t v\u00e0 ch\u1ec9 \u00e1nh x\u1ea1 t\u1edbi m\u1ed9t gi\u00e1 tr\u1ecb"},{"location":"Programming/Kotlin/kotlin-basic-tour/#list","title":"List","text":"<p>Danh s\u00e1ch c\u00e1c m\u1ee5c l\u01b0u tr\u1eef theo th\u1ee9 t\u1ef1 ch\u00fang \u0111\u01b0\u1ee3c th\u00eam v\u00e0o v\u00e0 cho ph\u00e9p c\u00e1c m\u1ee5c tr\u00f9ng l\u1eb7p.</p> <ul> <li><code>listOf()</code> l\u00e0 h\u00e0m t\u1ea1o danh s\u00e1ch t\u0129nh, kh\u00f4ng th\u1ec3 s\u1eeda. Tr\u1ea3 ra <code>List&lt;Type&gt;()</code></li> <li><code>mutableListOf()</code> l\u00e0 h\u00e0m t\u1ea1o danh s\u00e1ch \u0111\u1ed9ng, c\u00f3 th\u1ec3 s\u1eeda. Tr\u1ea3 ra <code>MutableList&lt;Type&gt;()</code></li> </ul> <pre><code>fun main() {\n    // Read only list\n    val readOnlyShapes = listOf(\"triangle\", \"square\", \"circle\")\n    println(readOnlyShapes)\n    // [triangle, square, circle]\n\n    // Mutable list with explicit type declaration\n    val shapes: MutableList&lt;String&gt; = mutableListOf(\"triangle\", \"square\", \"circle\")\n    println(shapes)\n    // [triangle, square, circle]\n}\n</code></pre> <ul> <li>Danh s\u00e1ch c\u00f3 th\u1ec3 in ra ngo\u00e0i nh\u01b0 l\u00e0 <code>[triangle, square, circle]</code></li> </ul>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#sets","title":"Sets","text":"<p>M\u00f4 t\u1ea3</p>"},{"location":"Programming/Kotlin/kotlin-basic-tour/#maps","title":"Maps","text":"<p>M\u00f4 t\u1ea3</p>"},{"location":"Programming/Kotlin/kotlin/","title":"Kotlin","text":""},{"location":"Programming/Kotlin/kotlin/#about-kotlin","title":"About Kotlin","text":""},{"location":"Programming/Kotlin/kotlin/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p>Kotlin l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh hi\u1ec7n \u0111\u1ea1i nh\u01b0ng \u0111\u00e3 tr\u01b0\u1edfng th\u00e0nh, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 gi\u00fap c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n h\u00e0i l\u00f2ng h\u01a1n. N\u00f3 ng\u1eafn g\u1ecdn, an to\u00e0n, t\u01b0\u01a1ng th\u00edch v\u1edbi Java v\u00e0 c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c, \u0111\u1ed3ng th\u1eddi cung c\u1ea5p nhi\u1ec1u c\u00e1ch \u0111\u1ec3 t\u00e1i s\u1eed d\u1ee5ng m\u00e3 gi\u1eefa nhi\u1ec1u n\u1ec1n t\u1ea3ng, gi\u00fap l\u1eadp tr\u00ecnh hi\u1ec7u qu\u1ea3 h\u01a1n.</p> <ul> <li>JetBrains l\u00e0 c\u00f4ng ty qu\u1ea3ng b\u00e1 v\u00e0 ph\u00e1t tri\u1ec3n ng\u00f4n ng\u1eef n\u00e0y.</li> </ul>"},{"location":"Programming/Kotlin/kotlin/#muc-ich","title":"M\u1ee5c \u0111\u00edch","text":"<p>M\u1ee5c \u0111\u00edch c\u1ee7a ng\u00f4n ng\u1eef n\u00e0y l\u00e0:</p>"},{"location":"Programming/Kotlin/kotlin/#ke-thua-java","title":"K\u1ebf th\u1eeba Java","text":"<p>Jetbrains v\u1ed1n l\u00e0 m\u1ed9t c\u00f4ng ty ph\u1ea7n m\u1ec1m \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n v\u00e0 \u0111\u1ecbnh h\u00ecnh xoay quanh ng\u00f4n ng\u1eef Java. Nh\u01b0ng s\u1ef1 ch\u1eadm ch\u1ea1p ph\u00e1t tri\u1ec3n c\u1ee7a ng\u00f4n ng\u1eef n\u00e0y d\u1eabn \u0111\u1ebfn h\u00e0ng lo\u1ea1t v\u1ea5n \u0111\u1ec1 li\u00ean quan \u0111\u1ebfn s\u1ef1 \u1ed5n \u0111\u1ecbnh v\u00e0 t\u00ednh t\u00edch h\u1ee3p. N\u00f3i chung ch\u00ednh v\u00ec mong mu\u1ed1n c\u00f3 m\u1ed9t ng\u00f4n ng\u1eef t\u1ed1t h\u01a1n, t\u00edch h\u1ee3p t\u1ed1t h\u01a1n v\u1edbi h\u1ec7 sinh th\u00e1i c\u1ee7a Jetbrains n\u00ean h\u1ecd \u0111\u00e3 t\u1ea1o ra ng\u00f4n ng\u1eef m\u1edbi n\u00e0y.</p>"},{"location":"Programming/Kotlin/kotlin/#cu-phap-lac-hau","title":"C\u00fa ph\u00e1p l\u1ea1c h\u1eadu","text":"<p>Kotlin mong mu\u1ed1n \u0111em c\u00fa ph\u00e1p m\u1edbi b\u1edbt r\u01b0\u1eddm r\u00e0 h\u01a1n so v\u1edbi Java.</p>"},{"location":"Programming/Kotlin/kotlin/#getting-start","title":"Getting Start","text":"<p>\u0110\u1ec3 b\u1eaft \u0111\u1ea7u c\u00f3 th\u1ec3 t\u1ea3i v\u1ec1 Android Studio ho\u1eb7c l\u00e0 ___</p> <p>M\u1ed9t c\u00e1ch kh\u00e1c, s\u1eed d\u1ee5ng online compiler \u0111\u1ec3 h\u1ecdc c\u0169ng nhanh m\u00e0 ti\u1ec7n h\u01a1n.</p>"},{"location":"Programming/Kotlin/kotlin/#tham-khao","title":"Tham kh\u1ea3o","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o ng\u00f4n ng\u1eef n\u00e0y b\u1eb1ng \u0111\u01b0\u1eddng d\u1eabn: - Kotlin docs - Wikipedia Kotlin - Why Jetbrains Invented And Promotes Kotlin</p>"},{"location":"Programming/Python/python-any-version/","title":"Python Any Version","text":""},{"location":"Programming/Python/python-any-version/#tai-ve","title":"T\u1ea3i v\u1ec1","text":"<p>Trong \u0111\u01b0\u1eddng d\u1eabn n\u00e0y ch\u1ee9a \u0111\u1ea7y \u0111\u1ee7 c\u00e1c phi\u00ean b\u1ea3n \u0111\u00e3 \u0111\u01b0\u1ee3c Release c\u1ee7a Python t\u1eeb x\u01b0a \u0111\u1ebfn nay. H\u00e3y v\u00e0o \u0111\u00f3 v\u00e0 t\u00ecm phi\u00ean b\u1ea3n b\u1ea1n mu\u1ed1n x\u00e0i.</p> <ul> <li>Cho Windows: T\u1ea3i v\u1ec1 b\u1ea3n c\u00e0i \u0111\u1eb7t v\u1edbi \u0111u\u00f4i <code>.msi</code> l\u00e0 \u0111\u01b0\u1ee3c</li> </ul>"},{"location":"Programming/Python/python-any-version/#ubuntu","title":"Ubuntu","text":"<p>Ubuntu m\u00ecnh bi\u1ebft m\u1ed9t c\u00e1ch \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 d\u1ef1ng l\u1ea1i v\u00e0 c\u00e0i \u0111\u1eb7t python l\u00ean h\u1ec7 th\u1ed1ng m\u00e0 kh\u00f4ng lo v\u1ec1 v\u1ea5n \u0111\u1ec1 t\u01b0\u01a1ng th\u00edch ho\u1eb7c m\u1ea5t th\u1eddi gian \u0111i t\u00ecm ki\u1ebfm phi\u00ean b\u1ea3n Python ph\u00f9 h\u1ee3p. Ch\u00ednh l\u00e0 t\u1ea3i v\u1ec1 g\u00f3i d\u1ef1ng v\u00e0 <code>build + install</code>tr\u00ean ch\u00ednh thi\u1ebft b\u1ecb c\u1ee7a m\u00ecnh.</p> <p>Tr\u01b0\u1edbc ti\u00ean n\u00f3i qua l\u00fd do m\u00ecnh bi\u1ebft \u0111\u1ebfn c\u00e1i n\u00e0y v\u00e0 t\u1ea1i sao n\u00f3 c\u00f3, \u0111\u01a1n gi\u1ea3n l\u00e0 v\u00ec kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n m\u1ec1m \u0111\u1ec1u t\u01b0\u01a1ng th\u00edch v\u1edbi Python, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c h\u1ec7 \u0111i\u1ec1u h\u00e0nh Linux phi\u00ean b\u1ea3n c\u0169.</p> <p>\u1ede th\u1eddi k\u1ef3 b\u00f9ng n\u1ed5 c\u00f4ng ngh\u1ec7, h\u00e0ng lo\u1ea1t c\u00f4ng ngh\u1ec7 m\u1edbi n\u1ed5i l\u00ean v\u00e0 h\u00e0ng tri\u1ec7u ph\u1ea7n m\u1ec1m m\u1edbi m\u1ed7i n\u0103m, c\u00e1c h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u00f3 s\u1ef1 thay \u0111\u1ed5i ch\u00f3ng m\u1eb7t v\u00e0 nh\u1edd vi\u1ec7c <code>open-soure</code> c\u1ee7a Linux, m\u1ed9t h\u1ec7 th\u1ed1ng kh\u1ed5ng l\u1ed3 c\u00e1c lo\u1ea1i ph\u1ea7n m\u1ec1m / \u1ee9ng d\u1ee5ng / framework x\u1ecbn s\u00f2 \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea1o ra.</p> <p>Nh\u01b0ng kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 \u0111\u1ec1u \u1ed5n. C\u00f3 nhi\u1ec1u d\u1ef1 \u00e1n v\u1edbi th\u1eddi gian ph\u00e1t tri\u1ec3n l\u00e2u d\u00e0i, h\u1ecd kh\u00f3 c\u00f3 th\u1ec3 k\u1ecbp xu\u1ea5t b\u1ea3n ph\u1ea7n m\u1ec1m theo b\u01b0\u1edbc ti\u1ebfn phi\u00ean b\u1ea3n c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh ho\u1eb7c ph\u1ea7n m\u1ec1m d\u1ef1ng nh\u01b0 Python \u0111\u01b0\u1ee3c n\u00ean h\u1ecd y\u00ean l\u00f2ng s\u1eed d\u1ee5ng c\u00e1c phi\u00ean b\u1ea3n c\u0169. Ch\u00ednh v\u00ec th\u1ebf c\u00f3 m\u1ed9t th\u1eddi gian v\u01b0\u1ee3t qu\u00e1 ng\u01b0\u1ee1ng th\u1eddi gian h\u1ed7 tr\u1ee3, </p>"},{"location":"Programming/Python/python-any-version/#cai-at-cac-goi-phu-thuoc","title":"C\u00e0i \u0111\u1eb7t c\u00e1c g\u00f3i ph\u1ee5 thu\u1ed9c","text":"<p>C\u00e0i \u0111\u1eb7t c\u00e1c g\u00f3i ph\u1ee5 thu\u1ed9c sau:</p> <pre><code>sudo apt install\nsudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev\n</code></pre> <p>Ho\u1eb7c c\u00f3 th\u1ec3 d\u00f9ng l\u1ec7nh n\u00e0y n\u1ebfu mu\u1ed1n Auto Selecte Yes trong l\u00fac c\u00e0i</p> <pre><code>sudo apt install\nfor i in {build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev};\\\n    do sudo apt install $i -y;\\\ndone;\n</code></pre>"},{"location":"Programming/Python/python-any-version/#cai-at-bien-moi-truong","title":"C\u00e0i \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng","text":"<p>Vi\u1ec7c c\u00e0i \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng n\u00e0y ch\u1ec9 l\u00e0 h\u1ed7 tr\u1ee3 thao t\u00e1c. Hi\u1ec3u \u0111\u01a1n gi\u1ea3n t\u1eeb c\u00e1c c\u00e2u l\u1ec7nh sau, c\u00e1c bi\u1ebfn s\u1ebd \u0111\u01b0\u1ee3c thay th\u1ebf b\u1eb1ng c\u00e1c gi\u00e1 tr\u1ecb \u0111\u00fang.</p> <p>C\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t:</p> <ul> <li><code>PYTHON_VERSION</code>: S\u1ed1 hi\u1ec7u phi\u00ean b\u1ea3n \u0111\u1ea7y \u0111\u1ee7</li> <li><code>PYTHON_MAJOR</code>: S\u1ed1 hi\u1ec7u phi\u00ean b\u1ea3n ch\u00ednh</li> </ul> <p>V\u00ed d\u1ee5 n\u1ebfu mu\u1ed1n c\u00e0i \u0111\u1eb7t phi\u00ean b\u1ea3n <code>3.8.16</code> v\u00e0 \u0111\u01b0\u01a1ng nhi\u00ean t\u1ec7p c\u1ee5c b\u1ed9 c\u1ee7a n\u00f3 \u1edf \u0111\u01b0\u1eddng d\u1eabn https://www.python.org/ftp/python/3.8.16/. C\u00e0i \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng nh\u01b0 sau:</p> <pre><code>export PYTHON_VERSION=3.8.16\nexport PYTHON_MAJOR=3\n</code></pre>"},{"location":"Programming/Python/python-any-version/#tai-ve-goi-cai-at","title":"T\u1ea3i v\u1ec1 g\u00f3i c\u00e0i \u0111\u1eb7t","text":"<p>T\u1ea3i v\u1ec1 g\u00f3i c\u00e0i \u0111\u1eb7t b\u1eb1ng <code>wget</code>:</p> <pre><code>wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz\n</code></pre> <p>Gi\u1ea3i n\u00e9n:</p> <pre><code>tar -xvzf Python-${PYTHON_VERSION}.tgz\n</code></pre>"},{"location":"Programming/Python/python-any-version/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u0110i\u1ec1u h\u01b0\u1edbng v\u00e0 t\u1ec7p v\u1eeba \u0111\u01b0\u1ee3c gi\u1ea3i n\u00e9n:</p> <pre><code>cd Python-${PYTHON_VERSION}\n</code></pre> <p>C\u1ea5u h\u00ecnh c\u00e0i \u0111\u1eb7t:</p> <pre><code>./configure \\\n    --prefix=/opt/python/${PYTHON_VERSION} \\\n    --enable-shared \\\n    --enable-optimizations \\\n    --enable-ipv6 \\\n    LDFLAGS=-Wl,-rpath=/opt/python/${PYTHON_VERSION}/lib,--disable-new-dtags\n</code></pre> <p>C\u00e0i \u0111\u1eb7t:</p> <ul> <li><code>make</code>: c\u00e0i \u0111\u1eb7t \u0111\u01a1n thu\u1ea7n</li> <li><code>make install</code>: c\u00f3 th\u1ec3 d\u00f9ng l\u1ec7nh n\u00e0y n\u1ebfu make kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng</li> <li><code>make -j 8 install</code>: th\u00eam s\u1ed1 lu\u1ed3ng th\u1ef1c thi n\u1ebfu m\u00e1y b\u1ea1n \u0111\u1ee7 kh\u1ecfe.</li> </ul>"},{"location":"Programming/Python/python-hello-world/","title":"Hello World","text":""},{"location":"Programming/Python/python-resased-version/","title":"Python","text":""},{"location":"Programming/Python/python-resased-version/#i-tong-quan","title":"I. T\u1ed5ng quan","text":"<p>Python tr\u1ea3i qua nhi\u1ec1u phi\u00ean b\u1ea3n \u0111\u00e3 c\u00f3 python2 v\u00e0 python3. M\u1eb7c d\u00f9 python2 m\u1edbi l\u00e0 \u0111\u1ec9nh cao \u0111em l\u1ea1i s\u1ef1 ph\u00e1t tri\u1ec3n l\u1edbn m\u1ea1nh d\u00e0nh cho ng\u00f4n ng\u1eef n\u00e0y nh\u01b0ng qua th\u1eddi gian python2 \u0111\u00e3 kh\u00f4ng c\u00f2n ph\u00f9 h\u1ee3p v\u1edbi nhi\u1ec1u c\u00f4ng ngh\u1ec7 m\u1edbi. V\u00ec v\u1eady n\u1ebfu kh\u00f4ng th\u1ef1c s\u1ef1 ph\u1ea3i l\u00e0m vi\u1ec7c v\u1edbi nh\u1eefng h\u1ec7 th\u1ed1ng cao tu\u1ed5i th\u00ec khuy\u1ebfn kh\u00edch n\u00ean c\u00e0i \u0111\u1eb7t python3 v\u1edbi nhi\u1ec1u h\u1ed7 tr\u1ee3 \u0111\u1ea7y \u0111\u1ee7 h\u01a1n v\u00e0 t\u1ed1t h\u01a1n.</p>"},{"location":"Programming/Python/python-resased-version/#ii-cai-at-cho-windows","title":"II. C\u00e0i \u0111\u1eb7t cho windows","text":"<ol> <li>T\u1ea3i t\u1ec7p c\u00e0i \u0111\u1eb7t Python tr\u1ef1c ti\u1ebfp t\u1eeb trang ch\u1ee7.<ul> <li></li> </ul> </li> <li>Sau \u0111\u00f3 ch\u1ec9 c\u1ea7n c\u00e0i \u0111\u1eb7t. \u1ede b\u01b0\u1edbc n\u00e0y n\u1ebfu kh\u00f4ng th\u00f4ng th\u1ea1o th\u00ec c\u1ee9 c\u00e0i \u0111\u1eb7t nh\u01b0 b\u00ecnh th\u01b0\u1eddng v\u00e0o \u1ed5 Win(C:) kh\u00f4ng sao c\u1ea3 v\u00ec python kh\u00e1 l\u00e0 nh\u1eb9. Nh\u01b0ng n\u00ean ch\u1ecdn <code>Add python.exe to PATH</code> \u0111\u1ec3 c\u00f3 th\u1ec3 d\u00f9ng c\u00e1c l\u1ec7nh python \u1edf <code>command console (cmd)</code>.<ul> <li></li> </ul> </li> <li>N\u1ebfu kh\u00f4ng mu\u1ed1n g\u1eb7p v\u1ea5n \u0111\u1ec1 v\u1edbi \u0111\u01b0\u1eddng d\u1eabn th\u00ec n\u00ean ch\u1ecdn l\u1ef1a ch\u1ecdn n\u00e0y! Ch\u1ee7 y\u1ebfu h\u1ec7 th\u00f4ng Windows thi tho\u1ea3ng s\u1ebd c\u00f3 \u0111\u01b0\u1eddng d\u1eabn r\u1ea5t r\u1ea5t d\u00e0i do windows kh\u00f4ng h\u1ea1n ch\u1ebf v\u1ec1 dir-lenght + filename-length d\u1ef1a tr\u00ean s\u1ed1 l\u01b0\u1ee3ng <code>ascii</code> m\u00e0 tr\u00ean <code>s\u1ed1 l\u01b0\u1ee3ng k\u00fd t\u1ef1</code>. \u0110i\u1ec1u n\u00e0y n\u1ebfu kh\u00f4ng m\u1edf ra c\u00f3 th\u1ec3 ch\u1ea1y code python s\u1ebd l\u1ed7i. C\u00f2n n\u1ebfu c\u00f3 th\u1ec3 b\u1ecf \u0111\u01b0\u1ee3c th\u00ec c\u0169ng t\u1ed1t n\u1ebfu b\u1ea1n t\u1ef1 tin v\u00e0 kh\u1ea3 n\u0103ng qu\u1ea3n l\u00fd v\u00e0 x\u1eed l\u00fd l\u1ed7i c\u1ee7a m\u00ecnh.<ul> <li></li> </ul> </li> </ol> <p>V\u1eady l\u00e0 xong r\u1ed3i \u0111\u00f3!</p>"},{"location":"Programming/Python/python-resased-version/#iii-cai-at-cho-ubuntu","title":"III. C\u00e0i \u0111\u1eb7t cho Ubuntu","text":""},{"location":"Programming/Python/python-resased-version/#phien-ban-tieu-chuan","title":"Phi\u00ean b\u1ea3n ti\u00eau chu\u1ea9n","text":"<p>\u1ede Linux th\u00ec ch\u1ec9 c\u1ea7n d\u00f9ng l\u1ec7nh <code>Terminal</code>. <pre><code>sudo apt-get update\nsudo apt-get install python3\n</code></pre></p>"},{"location":"Programming/Python/python-resased-version/#cai-cac-phien-ban-khac-cua-python","title":"C\u00e0i c\u00e1c phi\u00ean b\u1ea3n kh\u00e1c c\u1ee7a Python","text":"<p>Nhi\u1ec1u h\u1ec7 th\u1ed1ng c\u0169 v\u1eabn d\u00f9ng Python phi\u00ean b\u1ea3n c\u0169 c\u00e1i m\u00e0 theo th\u1eddi gian kh\u00f4ng c\u00f2n \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 n\u1eefa. Nh\u01b0ng v\u00ec d\u1ef1 \u00e1n c\u00f2n ch\u1ea1y n\u00ean \u0111\u00f4i khi, c\u00f3 th\u1ec3 g\u1ecdi l\u00e0 \u0111\u00f4i khi s\u1ebd c\u1ea7n Python c\u0169 \u0111\u1ec3 ch\u1ea1y nh\u1eefng ch\u01b0\u01a1ng tr\u00ecnh \u0111\u00f3. C\u1ee5 th\u1ec3 v\u00e0 tr\u1ef1c ti\u1ebfp nh\u1ea5t ch\u00ednh l\u00e0 giai \u0111o\u1ea1n b\u00f9ng n\u1ed5 c\u1ee7a </p>"},{"location":"Programming/Python/python-resased-version/#nguon-tai","title":"Ngu\u1ed3n t\u1ea3i","text":"<p>C\u00e1c phi\u00ean b\u1ea3n \u0111\u00e3 \u0111\u01b0\u1ee3c xu\u1ea5t b\u1ea3n c\u1ee7a python \u0111\u01b0\u1ee3c t\u1ea3i l\u00ean \u1edf \u0111\u00e2y link</p>"},{"location":"Programming/Python/python-resased-version/#windows","title":"Windows","text":"<p>C\u00e0i \u0111\u1eb7t cho windows r\u1ea5t d\u1ec5, ch\u1ec9 c\u1ea7n ch\u1ecdn 1 phi\u00ean b\u1ea3n v\u00e0 ch\u1ecdn t\u1ec7p d\u1ea1ng <code>.msi</code> ho\u1eb7c <code>.exe</code> v\u00e0 c\u00e0i \u0111\u1eb7t nh\u01b0 b\u00ecnh th\u01b0\u1eddng.</p>"},{"location":"Programming/Python/python-resased-version/#linux-hoac-ubuntu","title":"Linux ho\u1eb7c Ubuntu","text":"<ul> <li>L\u1ef1a ch\u1ecdn \u0111\u00fang phi\u00ean b\u1ea3n xem h\u01b0\u1edbng d\u1eabn t\u1ea1i (TO_DO)</li> <li>Sau \u0111\u00f3 l\u00e0 t\u1ea3i g\u00f3i c\u00e0i \u0111\u1eb7t xu\u1ed1ng, th\u01b0\u1eddng \u0111u\u00f4i l\u00e0 <code>.tgz</code>. T\u1ea3i xu\u1ed1ng b\u1eb1ng tr\u00ecnh duy\u1ec7t web ho\u1eb7c l\u00e0 ch\u1ecdn phi\u00ean b\u1ea3n v\u00e0 t\u1ea3i v\u1ec1 v\u1edbi <code>wget</code>. V\u00ed d\u1ee5 v\u1edbi version 3.12.3:</li> </ul> <pre><code>wget https://www.python.org/ftp/python/3.12.3/Python-3.12.3.tgz\n</code></pre> <ul> <li>Tr\u01b0\u1edbc khi l\u00e0m g\u00ec th\u00ec n\u00ean c\u1eadp nh\u1eadt h\u1ec7 th\u1ed1ng \u0111\u1ec3 t\u1ea3i c\u00e1c g\u00f3i m\u1edbi nh\u1ea5t v\u1ec1:</li> </ul> <pre><code>sudo apt install\n</code></pre> <ul> <li>Xong r\u1ed3i th\u00ec gi\u1ea3i n\u00e9n g\u00f3i v\u1eeba c\u00e0i</li> </ul> <pre><code>tar -xf Python-3.11.3.tgz\n</code></pre> <p>Ch\u00fa \u00fd</p> <p>N\u1ebfu ch\u01b0a c\u00e0i \u0111\u1eb7t c\u00e1c g\u00f3i ph\u1ee5 thu\u1ed9c d\u01b0\u1edbi \u0111\u00e2y th\u00ec n\u00ean ch\u1ea1y l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 c\u00e0i \u0111\u1eb7t c\u00e1c g\u00f3i c\u1ea7n thi\u1ebft</p> <p><pre><code>sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev\n</code></pre> - R\u1ed3i th\u00ec th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc c\u00e0i \u0111\u1eb7t, v\u00ed d\u1ee5 v\u1edbi python 3.12.3</p> <pre><code>cd Python-3.12.3\n</code></pre> <ul> <li>C\u1ea5u h\u00ecnh c\u00e0i \u0111\u1eb7t</li> </ul> <pre><code>./configure --enable-optimizations\n</code></pre> <ul> <li> <p>V\u1edbi c\u1edd \u0111\u01b0\u1ee3c th\u00eam v\u00e0o l\u00e0:</p> <ul> <li><code>--enable-optimizations</code> h\u1eefu \u00edch v\u00e0 n\u00ean th\u00eam</li> <li><code>--with-ensurepip=install</code> c\u00f3 th\u1ec3 c\u00f3 ho\u1eb7c kh\u00f4ng</li> </ul> </li> <li> <p>R\u1ed3i cu\u1ed1i c\u00f9ng l\u00e0 ch\u1ea1y <code>make</code> \u0111\u1ec3 build. Ho\u1eb7c <code>make -j 4</code> n\u1ebfu ch\u1ec9 mu\u1ed1n ch\u1ea1y build tr\u00ean 4 lu\u1ed3ng \u0111\u1ec3 ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean cho c\u00e1c t\u00e1c v\u1ee5 kh\u00e1c</p> </li> </ul> <pre><code>make\n</code></pre> <p>Ho\u1eb7c</p> <pre><code>make -j 4\n</code></pre> <p>V\u1eady l\u00e0 ho\u00e0n th\u00e0nh b\u01b0\u1edbc c\u00e0i \u0111\u1eb7t, cu\u1ed1i c\u00f9ng l\u00e0 l\u1ef1a ch\u1ecdn s\u1eed d\u1ee5ng g\u00f3i <code>python2</code> hay <code>python3</code> n\u00e0o b\u1edfi h\u1ea7u h\u1ebft c\u00e1c h\u1ec7 th\u1ed1ng \u0111\u1ec1u c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i 2 g\u00f3i \u0111\u1ed9c l\u1eadp. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t trong 2 c\u00e1ch d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 c\u00e0i m\u1eb7c \u0111\u1ecbnh cho h\u1ec7 th\u1ed1ng l\u00e0 s\u1eed d\u1ee5ng <code>python3</code> thay v\u00ec <code>python2</code>. Ch\u1ea1y l\u1ec7nh n\u00e0y n\u1ebfu mu\u1ed1n c\u00e0i \u0111\u1eb7t b\u1ea3n m\u1edbi ri\u00eang bi\u1ec7t m\u00e0 kh\u00f4ng ph\u1ea3i l\u00e0 phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p c\u1ee7a python c\u0169 \u0111\u00e3 c\u00f3 tr\u00ean m\u00e1y.</p> <pre><code>sudo make altinstall\n</code></pre> <p>D\u00f9ng soft-link \u0111\u1ec3 g\u00e1n t\u1ec7p th\u1ef1c thi t\u1eeb <code>python2</code> -&gt; <code>python3</code>. Chuy\u1ec3n <code>python3</code> th\u00e0nh m\u1eb7c \u0111\u1ecbnh. N\u00f3i \u0111\u01a1n gi\u1ea3n, m\u1ed7i l\u1ea7n d\u00f9ng <code>python</code> t\u1ee9c l\u00e0 <code>python3</code></p> <pre><code>ln -s /usr/bin/python /usr/bin/python3.12.3\n</code></pre>"},{"location":"Programming/Python/python-resased-version/#cai-at-bien-moi-truong","title":"C\u00e0i \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng","text":"<p>V\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh Windows th\u00ec \u0111\u00f3 g\u1ea7n nh\u01b0 l\u00e0 \u0111i\u1ec1u b\u1eaft bu\u1ed9c v\u00ec c\u00e1c ph\u1ea7n m\u1ec1m h\u1ec7 th\u1ed1ng c\u00f3 v\u1ebb ch\u1eb3ng bao gi\u1edd n\u1eb1m g\u1ecdn \u1edf m\u1ed9t ch\u1ed7, th\u1ebf n\u00ean c\u00f3 m\u1ed9t s\u1ed1 c\u00e0i \u0111\u1eb7t sau n\u00ean \u0111\u01b0\u1ee3c th\u00eam v\u00e0o bi\u1ebfn m\u00f4i tr\u01b0\u1eddng tr\u00ean Windows. C\u00e1c bi\u1ebfn m\u00f4i tr\u01b0\u1eddng c\u1ea7n th\u00eam l\u00e0:</p> <pre><code>%USERPROFILE%\\AppData\\Local\\Programs\\Python\\Python$\\\n%USERPROFILE%\\AppData\\Local\\Programs\\Python\\Python$\\Scripts\n</code></pre> <p>Thay <code>$</code> b\u1eb1ng phi\u00ean b\u1ea3n Python t\u01b0\u01a1ng \u1ee9ng</p> <p>L\u01b0u \u00fd:</p> <ul> <li><code>Python313</code> l\u00e0 phi\u00ean b\u1ea3n python hi\u1ec7n t\u1ea1i s\u1eed d\u1ee5ng, s\u1ebd thay \u0111\u1ed5i \u0111\u01b0\u1eddng d\u1eabn d\u1ef1a tr\u00ean phi\u00ean b\u1ea3n m\u00e0 b\u1ea1n c\u00e0i \u0111\u1eb7t.</li> <li>Hai th\u01b0 m\u1ee5c \u0111\u00f3 l\u00e0 ch\u1ee9a t\u1ec7p <code>py.exe</code> v\u00e0 <code>pip.exe</code> (c\u00f3 th\u1ec3 l\u00e0 <code>py3.exe</code> ho\u1eb7c <code>pip3.exe</code>)</li> </ul>"},{"location":"Programming/Python/python/","title":"Python","text":"<p>TO DO</p>"},{"location":"Programming/Rust/rust-document/","title":"Rust Documents","text":"<ul> <li>Rust by Example</li> <li>The Cargo Book</li> <li>The Rust Programming Language</li> </ul>"},{"location":"Programming/Rust/rust-helloworld/","title":"Rust HelloWorld","text":""},{"location":"Programming/Rust/rust-helloworld/#bat-au-voi-rustc","title":"B\u1eaft \u0111\u1ea7u v\u1edbi rustc","text":"<p>\u0110\u1ea7u ti\u00ean l\u00e0 t\u1ea1o m\u1ed9t t\u1ec7p <code>main.rs</code> c\u00f3 n\u1ed9i dung nh\u01b0 n\u00e0y:</p> main.rs<pre><code>fn main() {\n    println!(\"Hello World!\");\n}\n</code></pre> <p>Sau \u0111\u00f3 bi\u00ean d\u1ecbch v\u1edbi <code>rustc</code> nh\u01b0 sau:</p> <pre><code>rustc main.rs\n</code></pre> <p>K\u1ebft qu\u1ea3 \u0111\u1ea7u ra \u0111\u01b0\u1ee3c t\u1ec7p th\u1ef1c thi <code>main.exe</code> ch\u1ea1y t\u1ec7p tin n\u00e0y \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 nh\u01b0 sau:</p> <pre><code>Hello World!\n</code></pre>"},{"location":"Programming/Rust/rust-helloworld/#bat-au-voi-cargo","title":"B\u1eaft \u0111\u1ea7u v\u1edbi Cargo","text":""},{"location":"Programming/Rust/rust-helloworld/#tao-du-an","title":"T\u1ea1o d\u1ef1 \u00e1n","text":"<p>Cargo l\u00e0 b\u1ed9 qu\u1ea3n l\u00fd g\u00f3i c\u1ee7a Rust v\u00e0 n\u00f3 r\u1ea5t m\u1ea1nh. H\u1ea7u h\u1ebft m\u1ecdi ng\u01b0\u1eddi c\u00f3 l\u00fd do s\u1eed d\u1ee5ng Rust l\u00e0 do n\u00f3.</p> <p>B\u1eaft \u0111\u1ea7u m\u1ed9t d\u1ef1 \u00e1n m\u1edbi nh\u01b0 sau:</p> <pre><code>cargo new HelloWorld\n</code></pre> <p>Sau l\u1ec7nh \u0111\u00f3 s\u1ebd t\u1ea1o \u0111\u01b0\u1ee3c m\u1ed9t t\u1ec7p m\u1edbi t\u00ean l\u00e0 <code>HelloWorld</code>. Ki\u1ebfn tr\u00fac t\u1ec7p c\u1ee7a n\u00f3 nh\u01b0 n\u00e0y:</p> <pre><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main.rs\n</code></pre> <ul> <li><code>Cargo.toml</code> : t\u1ec7p n\u00e0y ch\u1ee9a th\u00f4ng tin d\u1ef1 \u00e1n. Cargo s\u1ebd t\u1ef1 \u0111\u1ed9ng th\u00eam th\u00f4ng tin \u1edf \u0111\u00e2y v\u00e0o n\u1ed9i dung c\u1ee7a g\u00f3i ph\u00e1t h\u00e0nh.     Cargo.toml<pre><code>[package]\nname = \"HelloWorld\"\nversion = \"0.1.0\"\nedition = \"2024\"\n\n[dependencies]\n</code></pre></li> <li><code>main.rs</code> : t\u1ec7p ngu\u1ed3n. Code v\u00e0o \u0111\u00e2y.     <pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre></li> </ul>"},{"location":"Programming/Rust/rust-helloworld/#chay-du-an","title":"Ch\u1ea1y d\u1ef1 \u00e1n","text":"<p>V\u00e0o trong t\u1ec7p <code>HelloWorld</code> v\u00e0 ch\u1ea1y l\u1ec7nh sau:</p> <pre><code>cargo run\n</code></pre> <p>K\u1ebft qu\u1ea3 nh\u01b0 n\u00e0y:</p> <pre><code>   Compiling HelloWorld v0.1.0 (D:\\Code\\rust\\HelloWorld)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.37s\n     Running `target\\debug\\HelloWorld.exe`\nHello, world!\n</code></pre>"},{"location":"Programming/Rust/rust-helloworld/#makefile","title":"Makefile","text":"<p>Nh\u01b0ng m\u00e0 v\u00ec Cargo ch\u1ea1y h\u01a1i ch\u1eadm n\u00ean m\u00ecnh th\u00edch d\u00f9ng Makefile h\u01a1n. \u0110\u1ec3 ch\u1ea1y n\u00f2 th\u00ec \u0111\u01a1n gi\u1ea3n l\u00e0 s\u1eed d\u1ee5ng Msys2 \u0111\u1ec3 ch\u1ea1y v\u1edbi <code>make</code>. Tr\u01b0\u1edbc \u0111\u00f3 th\u00ec c\u1ea7n t\u1ea3i g\u00f3i c\u00e0i \u0111\u1eb7t c\u1ee7a <code>rustc</code> t\u1eeb b\u00e0i tr\u01b0\u1edbc.</p> <p>\u0110\u00e2y l\u00e0 t\u1ec7p Makefile m\u1eabu:</p> Makefile<pre><code>RSC = rustc\n\nSRC = main.rs\nTARGET = main.exe\n\n$(TARGET): $(SRCS)\n    $(RSC) $(SRC)\n</code></pre> <p>\u0110\u1ec3 t\u1ec7p <code>main.rs</code> b\u00ean c\u1ea1nh Makefile, ki\u1ebfn tr\u00fac nh\u01b0 n\u00e0y</p> <pre><code>Makefile\nmain.rs\n</code></pre> <p>R\u1ed3i sau \u0111\u00f3 ch\u1ea1y l\u1ec7nh d\u01b0\u1edbi n\u00e0y \u0111\u1ec3 build v\u00e0 run</p> <pre><code>make clean &amp;&amp; make main &amp;&amp; ./main.exe\n</code></pre>"},{"location":"Programming/Rust/rust-io-printer/","title":"Rust Print","text":""},{"location":"Programming/Rust/rust-io-printer/#cac-ham-in","title":"C\u00e1c h\u00e0m in","text":"<p>C\u00e1c h\u00e0m in k\u1ebft qu\u1ea3 ra m\u00e0n h\u00ecnh:</p> <ul> <li><code>format!</code>: Vi\u1ebft v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c \u0111\u1ecbnh d\u1ea1ng v\u00e0o String</li> <li><code>print!</code>: t\u01b0\u01a1ng t\u1ef1 <code>format!</code> nh\u01b0ng v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c in v\u00e0o b\u1ea3ng \u0111i\u1ec1u khi\u1ec3n (<code>io::stdout</code>).</li> <li><code>println!</code>: t\u01b0\u01a1ng t\u1ef1 <code>print!</code> nh\u01b0ng m\u1ed9t d\u00f2ng m\u1edbi \u0111\u01b0\u1ee3c n\u1ed1i th\u00eam.</li> <li><code>eprint!</code>: t\u01b0\u01a1ng t\u1ef1 <code>print!</code> nh\u01b0ng v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c in ra l\u1ed7i ti\u00eau chu\u1ea9n (<code>io::stderr</code>).</li> <li><code>eprintln!</code>: t\u01b0\u01a1ng t\u1ef1 <code>eprint!</code> nh\u01b0ng m\u1ed9t d\u00f2ng m\u1edbi \u0111\u01b0\u1ee3c n\u1ed1i th\u00eam.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>fn main() {\n    println!(\"&lt;&lt; Line 0 &gt;&gt;\");\n    format!(\"&lt;&lt; Line 1 &gt;&gt;\");\n    print!(\"&lt;&lt; Line 2 &gt;&gt;\");\n    println!(\"&lt;&lt; Line 3 &gt;&gt;\");\n    eprint!(\"&lt;&lt; Line 4 &gt;&gt;\"); // Print to port error\n    eprintln!(\"&lt;&lt; Line 5 &gt;&gt;\"); // Print to port error\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>&lt;&lt; Line 0 &gt;&gt;\n&lt;&lt; Line 2 &gt;&gt;&lt;&lt; Line 3 &gt;&gt;\n&lt;&lt; Line 4 &gt;&gt;&lt;&lt; Line 5 &gt;&gt;\n</code></pre>"},{"location":"Programming/Rust/rust-io-printer/#formatted-print","title":"Formatted Print","text":"<p>C\u00f3 c\u00e1c c\u00e1ch sau \u0111\u1ec3 in k\u1ebft qu\u1ea3 ra ngo\u00e0i m\u00e0n h\u00ecnh b\u1eb1ng <code>println!</code> (c\u00e1c h\u00e0m kh\u00e1c nh\u01b0 <code>print!</code>, <code>println!</code>, <code>eprint!</code>, <code>eprintln!</code>) c\u0169ng c\u00f3 c\u00e1ch x\u00e0i t\u01b0\u01a1ng t\u1ef1.</p> <p><pre><code>fn main() {\n    // C\u00e1ch 1: Normal print\n    println!(\"Output: {}\", 0);\n    // C\u00e1ch 2: Print with index\n    println!(\"Output: {1}, {0}, {2}, {1}\", 0, 1, 2);\n    // C\u00e1ch 2: Print with object-name\n    println!(\"Output: {var1}, {var0}, {var2}, {var1}\", var0=0, var1=1, var2=2);\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>Output: 0\nOutput: 10, 0, 20, 10\nOutput: 10, 0, 20, 10\n</code></pre></p> <ul> <li>C\u00e1ch 1: Gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c bi\u1ebfn s\u1ebd \u0111\u01b0\u1ee3c thay th\u1ebf trong <code>{}</code></li> <li>C\u00e1ch 2: Trong d\u1ea5u <code>{x}</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn b\u1eb1ng index \u0111\u01b0\u1ee3c \u0111\u1ec3 trong \u0111\u1ea5u <code>{}</code>. V\u00e0 n\u00f3 s\u1ebd ch\u1ecdn \u0111\u00fang v\u1ecb tr\u00ed \u0111\u01b0\u1ee3c \u0111\u00e1nh theo s\u1ed1.</li> <li>C\u00e1ch 3: C\u00f3 m\u1ed9t c\u00e1ch kh\u00e1c l\u00e0 \u0111\u01b0a v\u00e0o theo t\u00ean v\u00e0 gi\u00e1 tr\u1ecb in ra t\u1ef1 \u0111\u1ed9ng t\u00ecm \u0111\u01b0\u1ee3c \u0111\u00fang t\u00ean.</li> </ul>"},{"location":"Programming/Rust/rust-io-printer/#formatted-print_1","title":"Formatted Print","text":""},{"location":"Programming/Rust/rust-setup/","title":"Rust Setup","text":""},{"location":"Programming/Rust/rust-setup/#tai-ve-ban-cai-at","title":"T\u1ea3i v\u1ec1 b\u1ea3n c\u00e0i \u0111\u1eb7t","text":"<ul> <li>C\u00e0i \u0111\u1eb7t Rust t\u1eeb trang ch\u1ee7.</li> <li>T\u1ea3i rust t\u1eeb trang Install c\u1ee7a h\u1ecd.</li> </ul>"},{"location":"Programming/Rust/rust-setup/#cai-at-cho-windows","title":"C\u00e0i \u0111\u1eb7t cho Windows","text":""},{"location":"Programming/Rust/rust-setup/#windows-install-normal","title":"Windows Install Normal","text":"<p>V\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh windows th\u00ec ch\u1ec9 c\u1ea7n t\u1ea3i xu\u1ed1ng b\u1ea3n c\u00e0i \u0111\u1eb7t ph\u00f9 h\u1ee3p v\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh (64-bit ho\u1eb7c 32-bit).</p> <p>Ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y tr\u00ean <code>terminal</code> gi\u1ed1ng nh\u01b0 n\u00e0y:</p> <pre><code>Rust requires a linker and Windows API libraries but they don't seem to be\navailable.\n\nThese components can be acquired through a Visual Studio installer.\n\n1) Quick install via the Visual Studio Community installer\n   (free for individuals, academic uses, and open source).\n\n2) Manually install the prerequisites\n   (for enterprise and advanced users).\n\n3) Don't install the prerequisites\n    (if you're targeting the GNU ABI).\n</code></pre> <p>Ch\u1ecdn <code>1</code> n\u1ebfu kh\u00f4ng hi\u1ec3u l\u1eafm v\u1ec1 m\u00f4i tr\u01b0\u1eddng ho\u1eb7c y\u00eau c\u1ea7u.</p> <p>Ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd \u0111\u01b0a th\u00eam c\u00e2u h\u1ecfi v\u1ec1 c\u00e0i \u0111\u1eb7t Visual Studio, c\u00e1i \u0111\u00f3 l\u00e0 m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh rust tr\u00ean windows th\u00f4i n\u00ean kh\u00f4ng v\u1ea5n \u0111\u1ec1, ch\u1ecdn <code>Continue</code>.</p> <p>Y\u00eau c\u1ea7u c\u00e0i \u0111\u1eb7t MSVC, v\u1eabn \u0111\u1ed3ng \u00fd c\u00e0i \u0111\u1eb7t.</p> MSVC Install <p>Xong vi\u1ec7c r\u1ed3i ch\u1ec9 c\u00f2n ch\u1edd c\u00e0i \u0111\u1eb7t xong l\u00e0 \u0111\u01b0\u1ee3c.</p> <p>R\u1ed3i xong vi\u1ec7c th\u00ec ki\u1ec3m tra v\u1edbi l\u1ec7nh sau:</p> <pre><code>rustc --version\n</code></pre> <p>N\u1ebfu k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 d\u1ea1ng nh\u01b0 n\u00e0y l\u00e0 th\u00e0nh c\u00f4ng r\u1ed3i:</p> <pre><code>rustc 1.79.0 (129f3b996 2024-06-10)\n</code></pre>"},{"location":"Programming/Rust/rust-setup/#install-for-msys2","title":"Install for MSYS2","text":"<p>C\u00e1ch n\u00e0y m\u00ecnh tho\u1ea3i m\u00e1i h\u01a1n v\u00ec n\u00f3 ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c c\u1ea3 v\u1edbi Makefile</p> <pre><code>pacman -S mingw-w64-x86_64-rust\n</code></pre>"},{"location":"Programming/Rust/rust-setup/#cai-at-cho-linux","title":"C\u00e0i \u0111\u1eb7t cho Linux","text":""},{"location":"Programming/Rust/rust-setup/#cach-1-install-rust-using","title":"C\u00e1ch 1: Install Rust Using","text":"<ul> <li>T\u1ea3i v\u1ec1 qua <code>curl</code></li> </ul> <pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre> <ul> <li>Nh\u1ea5n Enter \u0111\u1ec3 ti\u1ebfn h\u00e0nh c\u00e0i \u0111\u1eb7t m\u1eb7c \u0111\u1ecbnh.</li> <li>C\u00e0i \u0111\u1eb7t <code>source</code></li> </ul> <pre><code>source \"$HOME/.cargo/env\"\n</code></pre> <ul> <li>Cu\u1ed1i c\u00f9ng l\u00e0 ki\u1ec3m tra phi\u00ean b\u1ea3n:</li> </ul> <pre><code>rustc --version\n</code></pre>"},{"location":"Programming/Rust/rust-setup/#cach-2-install-rust-using-apt","title":"C\u00e1ch 2: Install Rust Using APT","text":"<pre><code>sudo apt update\nsudo apt install rustc\nrustc --version\n</code></pre>"},{"location":"Programming/Rust/rust-variables/","title":"Variables","text":""},{"location":"Programming/Rust/rust-variables/#variables-and-mutability","title":"Variables and Mutability","text":""},{"location":"Programming/Rust/rust-variables/#let","title":"let","text":"C\u00f3 2 \u0111i\u1ec3m c\u1ef1c k\u1ef3 quan tr\u1ecdng trong vi\u1ec7c khai b\u00e1o bi\u1ebfn \u1edf Rust \u0111\u00f3 l\u00e0:  1. Rust l\u00e0 ng\u00f4n ng\u1eef b\u1eadc cao n\u00ean Rust c\u0169ng cho ph\u00e9p khai b\u00e1o v\u1edbi ki\u1ec3u bi\u1ebfn ng\u1ea7m \u0111\u1ecbnh. 1. N\u1ebfu kh\u00f4ng c\u00f3 s\u1eeda \u0111\u1ed5i, th\u00ec bi\u1ebfn trong Rust s\u1ebd __m\u1eb7c \u0111\u1ecbnh \u1edf ch\u1ebf \u0111\u1ed9 kh\u00f4ng th\u1ec3 s\u1eeda__.  <p>Ngh\u0129a l\u00e0 v\u1ec1 m\u1eb7c \u0111\u1ecbnh, bi\u1ebfn trong ng\u00f4n ng\u1eef n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c khai b\u00e1o l\u00e0 b\u1ea5t bi\u1ebfn. \u0110\u00f3 l\u00e0 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t v\u1edbi m\u1ed9t s\u1ed1 ng\u00f4n ng\u1eef kh\u00e1c.</p> <p>\u0110\u1ec3 t\u1ea1o m\u1ed9t bi\u1ebfn trong ng\u00f4n ng\u1eef rust, s\u1eed d\u1ee5ng k\u00fd hi\u1ec7u <code>let</code>. V\u00ed d\u1ee5, th\u1eed t\u1ea1o bi\u1ebfn v\u00e0 in ra v\u1edbi ch\u01b0\u01a1ng tr\u00ecnh sau: <pre><code>fn main()\n{\n    let x = 10;\n    println!(\"main: x = {}\", x);\n}\n</code></pre> Bi\u00ean d\u1ecbch v\u00e0 ch\u1ea1y th\u1eed, ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd cho ra k\u1ebft qu\u1ea3: <pre><code>main: x = 10\n</code></pre> \ud83d\udc49 Kh\u00f4ng c\u1ea7n khai b\u00e1o ki\u1ec3u bi\u1ebfn l\u00e0 interger. V\u00ec <code>x=10</code> n\u00ean tr\u00ecnh bi\u00ean d\u1ecbch t\u1ef1 \u0111\u1ed9ng cho ph\u00e9p n\u00f3 l\u00e0 ki\u1ec3u s\u1ed1 nguy\u00ean.</p> <p>Gi\u1edd h\u00e3y th\u1eed s\u1eeda \u0111\u1ed5i nh\u1ecf nh\u01b0 sau:</p> <pre><code>fn main()\n{\n    let x = 10;\n    x = 20;\n    println!(\"main: x = {}\", x);\n}\n</code></pre> <p>Ch\u01b0\u01a1ng tr\u00ecnh bi\u00ean d\u1ecbch s\u1ebd th\u00f4ng b\u00e1o l\u00e0: <pre><code>error[E0384]: cannot assign twice to immutable variable `x`\n --&gt; main.rs:4:5\n  |\n3 |     let x = 10;\n  |         -\n  |         |\n  |         first assignment to `x`\n  |         help: consider making this binding mutable: `mut x`\n4 |     x = 20;\n  |     ^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to 1 previous error; 1 warning emitted\n</code></pre> Nh\u01b0 c\u00f3 th\u1ec3 th\u1ea5y, ch\u01b0\u01a1ng tr\u00ecnh kh\u00f4ng cho ph\u00e9p b\u1ea1n g\u00e1n gi\u00e1 tr\u1ecb kh\u00e1c v\u00e0o bi\u1ebfn \u0111\u00e3 s\u1eed d\u1ee5ng.</p>"},{"location":"Programming/Rust/rust-variables/#let-mut","title":"let mut","text":"<p>Kh\u00f4ng th\u1ec3 khai b\u00e1o bi\u1ebfn c\u00f3 th\u1ec3 s\u1eeda \u0111\u1ed5i v\u1edbi <code>let</code>. Mu\u1ed1n s\u1eeda \u0111\u1ed5i \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn th\u00ec d\u00f9ng <code>let mut</code>.</p> <p><pre><code>fn main()\n{\n    let mut x = 10;\n    x = 20;\n    println!(\"main: x = {}\", x);\n}\n</code></pre> Bi\u00ean d\u1ecbch th\u1eed v\u00e0 k\u1ebft qu\u1ea3 \u0111\u00e2y: <pre><code>main: x = 20\n</code></pre> \u0110\u01b0\u01a1ng nhi\u00ean l\u00e0 kh\u00f4ng v\u1ea5n \u0111\u1ec1 nh\u01b0ng v\u1eabn c\u00f3 c\u1ea3nh b\u00e1o: <pre><code>warning: value assigned to `x` is never read\n --&gt; main.rs:3:13\n  |\n3 |     let mut x = 10;\n  |             ^\n  |\n  = help: maybe it is overwritten before being read?\n  = note: `#[warn(unused_assignments)]` on by default\n\nwarning: 1 warning emitted\n</code></pre> \u0110\u1ea5y l\u00e0 do khi khai b\u00e1o \u0111\u1ea7u ti\u00ean <code>x</code> l\u00e0 <code>10</code> nh\u01b0 b\u1ea1n kh\u00f4ng s\u1eed d\u1ee5ng th\u00f4i, kh\u00f4ng c\u00f3 g\u00ec quan tr\u1ecdng c\u1ea3.</p>"},{"location":"Programming/Rust/rust-variables/#variables-type","title":"Variables Type","text":""},{"location":"Programming/Rust/rust-variables/#scalar-types","title":"Scalar Types","text":"<p>Ki\u1ec3u v\u00f4 h\u01b0\u1edbng</p> <p>Ki\u1ec3u v\u00f4 h\u01b0\u1edbng \u0111\u1ea1i di\u1ec7n cho m\u1ed9t gi\u00e1 tr\u1ecb duy nh\u1ea5t. Rust c\u00f3 b\u1ed1n lo\u1ea1i v\u00f4 h\u01b0\u1edbng ch\u00ednh: <code>integers</code> (s\u1ed1 nguy\u00ean), <code>floating-point numbers</code> (s\u1ed1 d\u1ea5u ph\u1ea9y \u0111\u1ed9ng), <code>Booleans</code>, v\u1ea3 <code>characters</code> (k\u00fd t\u1ef1). Di\u1ec1u n\u00e0y c\u0169ng b\u1eaft g\u1eb7p \u1edf r\u1ea5t nhi\u1ec1u c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c.</p>"},{"location":"Programming/Rust/rust-variables/#integer-types","title":"Integer Types","text":"Length Signed Unsigned 8-bit i8 u8 16-bit i16 u16 32-bit i32 u32 64-bit i64 u64 128-bit i128 u128 arch isize usize <p>V\u00ed d\u1ee5:</p> <pre><code>let x:i32 = 10;\n</code></pre> <p>Trong b\u1ea3ng tr\u00ean, c\u00e1c s\u1ed1 nguy\u00ean \u0111\u1ec1u c\u00f3 k\u00edch th\u01b0\u1edbc r\u00f5 r\u00e0ng  r\u1ed3i tr\u1eeb c\u00f3 <code>isize</code> v\u00e0 <code>usize</code> c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 <code>arch</code>, t\u1ee9c l\u00e0 n\u00f3 ph\u1ee5 thu\u1ed9c v\u00e0o k\u00edch th\u01b0\u1edbc thanh ghi. N\u1ebfu h\u1ec7 \u0111i\u1ec1u h\u00e0nh l\u00e0 <code>32-bit</code> th\u00ec \u0111\u1ed9 d\u00e0i c\u1ee7a n\u00f3 s\u1ebd l\u00e0 <code>32-bit</code>, t\u01b0\u01a1ng t\u1ef1 v\u1edbi <code>64-bit</code>.</p> <p>Ngo\u00e0i vi\u1ec7c c\u00f3 th\u1ec3 khai b\u00e1o tr\u1ef1c ti\u1ebfp, c\u00e1c s\u1ed1 nguy\u00ean c\u00f2n c\u00f3 th\u1ec3 khai b\u00e1o \u1edf nhi\u1ec1u d\u1ea1ng kh\u00e1c nhau theo nh\u01b0 b\u1ea3ng d\u01b0\u1edbi \u0111\u00e2y:</p> Ch\u1eef s\u1ed1 V\u00ed d\u1ee5 S\u1ed1 th\u1eadp ph\u00e2n 98_222 l\u1ee5c gi\u00e1c 0xff b\u00e1t ph\u00e2n 0o77 nh\u1ecb ph\u00e2n 0b1111_0000 Byte (ch\u1ec9 cho ph\u00e9p v\u1edbi <code>u8</code>) b'A' <p>V\u00ed d\u1ee5 v\u1edbi d\u00f2ng \u0111\u1ea7u - s\u1ed1 th\u1eadp ph\u00e2n - c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng d\u1ea5u <code>_</code> \u0111\u1ec3 ng\u0103n c\u00e1ch gi\u1eefa c\u00e1c s\u1ed1 m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng, vi\u1ec7c n\u00e0y l\u00e0 \u0111\u1ec3 h\u1ed7 tr\u1ee3 vi\u1ebft c\u00e1c s\u1ed1 qu\u00e1 d\u00e0i, c\u00f2n v\u1ec1 b\u1ea3n ch\u1ea5t s\u1ed1 kh\u00f4ng \u0111\u1ed5i. V\u00ed d\u1ee5:</p> <pre><code>let x:i64 = 100_000_000_000;\n</code></pre> <p>L\u00fac n\u00e0y gi\u00e1 tr\u1ecb c\u1ee7a <code>x</code> s\u1ebd l\u00e0 <code>100000000000</code>, c\u00f3 \u0111i\u1ec1u n\u1ebfu \u0111\u1ec3 nguy\u00ean nh\u00ecn s\u1ebd r\u1ea5t kh\u00f3 nh\u00ecn ra n\u00f3 l\u00e0 100 t\u1ec9.</p>"},{"location":"Programming/Rust/rust-variables/#floating-point-types","title":"Floating-Point Types","text":"<p>S\u1ed1 th\u1eadp ph\u00e2n chi c\u00f3 2 d\u1ea1ng l\u00e0 <code>f32</code> v\u00e0 <code>f64</code>, khai b\u00e1o t\u01b0\u01a1ng t\u1ef1.</p>"},{"location":"Programming/Rust/rust-variables/#the-boolean-type","title":"The Boolean Type","text":"<p>S\u1ed1 th\u1eadp ph\u00e2n chi c\u00f3 1 d\u1ea1ng l\u00e0 <code>bool</code>.</p>"},{"location":"Programming/Rust/rust-variables/#the-character-type","title":"The Character Type","text":"<p>S\u1ed1 th\u1eadp ph\u00e2n chi c\u00f3 1 d\u1ea1ng l\u00e0 <code>char</code>.</p> <p>V\u00e0 l\u01b0u \u00fd l\u00e0 n\u00f3 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi <code>4 byte</code> \u1edf d\u1ea1ng <code>UTF</code> b\u00ecnh th\u01b0\u1eddng, kh\u00f4ng ph\u1ea3i d\u00e0ng cho c\u00e1c k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t. V\u00ec th\u1ebf kh\u00f4ng th\u1ec3 d\u00f9ng \u0111\u1ec3 khai b\u00e1o cho c\u00e1c k\u00fd t\u1ef1 \u0111\u1eb7c bi\u1ec7t. Ch\u1eb3ng h\u1ea1n b\u1ed9 ch\u1eef Trung Qu\u1ed1c s\u1ebd c\u1ea7n m\u1ed9t b\u1ed9 k\u00fd t\u1ef1 m\u1edf r\u1ed9ng v\u00ec <code>4 byte</code> kh\u00f4ng \u0111\u1ee7 \u0111\u1ec3 \u0111\u1ecbng ngh\u0129a cho to\u00e0n b\u1ed9 k\u00fd t\u1ef1 ti\u1ebfng Trung.</p>"},{"location":"Programming/cpp/cpp-0-helloworld/","title":"HelloWorld","text":""},{"location":"Programming/cpp/cpp-0-helloworld/#noi-dung","title":"N\u1ed9i dung","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh c\u01a1 b\u1ea3n \u0111\u1ea7u ti\u00ean c\u1ee7a C++ \u0111\u01b0\u1ee3c vi\u1ebft nh\u01b0 n\u00e0y.</p> main.cpp<pre><code>#include \"stdio.h\"\n\nint main() {\n    printf(\"Hello World!\");\n    return 0;\n}\n</code></pre>"},{"location":"Programming/cpp/cpp-0-helloworld/#chay-thu-tren-windows","title":"Ch\u1ea1y th\u1eed tr\u00ean Windows","text":"<p>Sau \u0111\u00f3 c\u00f3 th\u1ec3 d\u00f9ng MSYS2 \u0111\u1ec3 bi\u00ean d\u1ecbch:</p> <p>v\u00e0 ch\u1ea1y</p>"},{"location":"Programming/cpp/cpp-0-helloworld/#chay-thu-tren-linux","title":"Ch\u1ea1y th\u1eed tr\u00ean Linux","text":"<p>N\u1ebfu s\u1eed  d\u1ee5ng Ubuntu ho\u1eb7c Linux th\u00ec m\u1ecdi chuy\u1ec7n \u0111\u01a1n gi\u1ea3n h\u01a1n, tr\u1ef1c ti\u1ebfp b\u1eb1ng <code>g++</code> tr\u00ean Linux</p> <pre><code>\n</code></pre> <p>Sau \u0111\u00f3 ch\u1ea1y</p>"},{"location":"Programming/cpp/cpp-0-install/","title":"T\u1ea3i v\u1ec1 v\u00e0 c\u00e0i \u0111\u1eb7t","text":""},{"location":"Programming/cpp/cpp-0-install/#cai-at-cho-windows","title":"C\u00e0i \u0111\u1eb7t cho Windows","text":"<p>Cho Windows c\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 s\u1eed d\u1ee5ng nh\u01b0 t\u1ea3i v\u1ec1 v\u00e0 c\u00f4ng c\u1ee5 s\u1eb5n c\u00f3 nh\u01b0: - Code::Blocks - Dev-C++, ...</p> <p>Nh\u01b0ng t\u00f4i ngh\u0129 t\u1ed1t nh\u1ea5t n\u00ean d\u00f9ng <code>msys2</code> v\u00ec n\u00f3 c\u00f3 v\u1ebb \u0111\u01b0\u1ee3c khuy\u1ebfn ngh\u1ecb b\u1edfi Visual Studio Code.</p> <ol> <li>T\u1ea3i msys v\u00e0 c\u00e0i \u0111\u1eb7t t\u1eeb trang ch\u1ee7 MSYS2</li> <li>Sau \u0111\u00f3 t\u1ea3i VSCode \u0111\u1ec3 code C++</li> <li>Theo h\u01b0\u1edbng d\u1eabn trong n\u00e0y Using GCC with MinGW \u0111\u1ec3 t\u1ea3i v\u1ec1 </li> <li>Sau khi t\u1ea3i s\u1ebd c\u00f3:<ul> <li><code>x86_64-w64-mingw32-g++.exe</code></li> <li><code>x86_64-w64-mingw32-g++.exe</code> D\u00f9ng \u0111\u1ec3 build \u1ee9ng d\u1ee5ng tr\u00ean Windows.</li> </ul> </li> </ol> <p>\u0110\u1ec3 ki\u1ec3m tra d\u00f9ng:</p> <pre><code>x86_64-w64-mingw32-g++.exe --version\n</code></pre> <p>S\u1ebd c\u00f3 k\u1ec3t qu\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n <code>g++</code> \u0111ang \u0111\u01b0\u1ee3c d\u00f9ng.</p> <pre><code>x86_64-w64-mingw32-g++ (GCC) 14.2.0\nCopyright (C) 2024 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n</code></pre> <p>Khi c\u00e0i \u0111\u1eb7t th\u00f4ng th\u01b0\u1eddng, c\u00e1c phi\u00ean b\u1ea3n <code>g++</code> s\u1ebd th\u01b0\u1eddng n\u1eb1m \u1edf <code>C:\\msys64\\mingw32\\bin</code> ho\u1eb7c <code>C:\\msys64\\mingw64\\bin</code>. B\u00ecnh th\u01b0\u1eddng s\u1ebd kh\u00f4ng th\u1ec3 d\u00f9ng tr\u1ef1c ti\u1ebfp, mu\u1ed1n s\u1eed d\u1ee5ng tr\u00ean cmd c\u1ea7n ph\u1ea3i th\u00eam \u0111\u01b0\u1eddng d\u1eabn v\u00e0o <code>PATH</code>.</p>"},{"location":"Programming/cpp/cpp-0-install/#cai-at-cho-linuxubuntu","title":"C\u00e0i \u0111\u1eb7t cho Linux/Ubuntu","text":"<ul> <li>T\u1ea3i v\u1ec1 <code>g++</code></li> </ul> <pre><code>sudo apt-get update\nsudo apt-get install g++\n</code></pre> <ul> <li>Ki\u1ec3m tra binary</li> </ul> <pre><code>$ which c++\n/usr/bin/g++\n</code></pre> <ul> <li>Ki\u1ec3m tra s\u1ed1 hi\u1ec7u phi\u00ean b\u1ea3n</li> </ul> <pre><code>$ g++ --version\ng++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nCopyright (C) 2021 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n</code></pre>"},{"location":"Programming/cpp/cpp-0-install/#cai-at-cho-ios","title":"C\u00e0i \u0111\u1eb7t cho IOS","text":"<p>Ch\u01b0a c\u00f3 ti\u1ec1n mua m\u00e1y Mac</p>"},{"location":"Programming/cpp/cpp-0-overview/","title":"Overview","text":""},{"location":"Programming/cpp/cpp-0-overview/#c-overview","title":"C++ Overview","text":"<ol> <li>C++ is a cross-platform language(ng\u00f4n ng\u1eef \u0111a n\u1ec1n t\u1ea3ng), hi\u1ec7u su\u1ea5t cao.</li> <li>C++ \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Bjarne Stroustrup nh\u01b0 l\u00e0 ph\u1ea7n m\u1edf r\u1ed9ng c\u1ee7a ng\u00f4n ng\u1eef C</li> <li>C++ cho l\u1eadp tr\u00ecnh vi\u00ean kh\u1ea3 n\u0103ng qu\u1ea3n l\u00fd t\u00e0i nguy\u00ean v\u00e0 b\u1ed9 nh\u1edb r\u1ea5t m\u1ea1nh m\u1ebd.</li> </ol> <ul> <li>Phi\u00ean b\u1ea3n th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u00f9ng nh\u1ea5t l\u00e0 C++11</li> <li>Phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t nh\u1ea5t hi\u1ec7n c\u00f3 l\u00e0 C++20</li> </ul>"},{"location":"Programming/cpp/cpp-0-overview/#tai-sao-nen-hoc-c","title":"T\u1ea1i sao n\u00ean h\u1ecdc C++?","text":""},{"location":"Programming/cpp/cpp-0-overview/#iem-manh","title":"\u0110i\u1ec3m m\u1ea1nh","text":"<ul> <li>Ph\u1ed5 bi\u1ebfn</li> <li>Nhanh</li> <li>\u0110em l\u1ea1i ki\u1ebfn th\u1ee9c t\u1ed1t v\u1ec1 t\u00e0i nguy\u00ean m\u00e1y t\u00ednh</li> <li>Ng\u00f4n ng\u1eef t\u1ed1t nh\u1ea5t \u0111\u1ec3 </li> <li>H\u1ed7 tr\u1ee3 \u0111a n\u1ec1n t\u1ea3ng</li> </ul>"},{"location":"Programming/cpp/cpp-0-overview/#iem-yeu","title":"\u0110i\u1ec3m Y\u1ebfu","text":"<ul> <li>Kh\u00f3 th\u00e0nh th\u1ea1o.</li> <li>Kh\u00f3 h\u1ecdc v\u00e0 c\u1ea7n r\u1ea5t nhi\u1ec1u ki\u1ebfn th\u1ee9c, n\u1ebfu kh\u00f4ng s\u1ebd t\u1ea1o ra r\u1ea5t nhi\u1ec1u m\u00e3 x\u1ea5u.</li> <li>M\u1eb7c d\u00f9 h\u1ed7 tr\u1ee3 \u0111a n\u1ec1n t\u1ea3ng nh\u01b0ng c\u00e0n c\u00f3 tr\u00ecnh bi\u00ean d\u1ecbch h\u1ed7 tr\u1ee3, C++ kh\u00f4ng th\u1ef1c s\u1ef1 l\u00e0m t\u1ed1t vi\u1ec7c n\u00e0y.</li> </ul>"},{"location":"Programming/cpp/cpp-1-basic-operator/","title":"Basic Operator","text":""},{"location":"Programming/cpp/cpp-1-basic-operator/#math-operator","title":"Math Operator","text":""},{"location":"Programming/cpp/cpp-1-basic-operator/#tom-tat","title":"T\u00f3m t\u1eaft","text":"<p>C\u00e1c ph\u00e9p s\u1ed1 h\u1ecdc c\u01a1 b\u1ea3n bao g\u1ed3m: - <code>+</code>: C\u1ed9ng - <code>-</code>: Tr\u1eeb - <code>*</code>: Nh\u00e2n - <code>/</code>: Chia l\u1ea5y nguy\u00ean - <code>%</code>: Chia l\u1ea5y d\u01b0</p>"},{"location":"Programming/cpp/cpp-1-basic-operator/#cong-tru-va-nhan","title":"C\u1ed9ng, tr\u1eeb v\u00e0 nh\u00e2n","text":"<p>C\u1ed9ng v\u00e0 tr\u1eeb s\u1ebd v\u1ec1 c\u01a1 b\u1ea3n l\u00e0 gi\u1ed1ng nh\u01b0 c\u0169 tr\u1eeb vi\u1ec7c n\u00f3 c\u00f3 th\u1ec3  b\u1ecb v\u01b0\u1ee3t ng\u01b0\u1ee1ng. V\u00ed d\u1ee5, gi\u1edbi h\u1ea1n c\u1ee7a s\u1ed1 <code>int</code> l\u00e0 <code>2147483647</code> n\u1ebfu c\u1ed9ng qu\u00e1 th\u00ec sao?</p> <p><pre><code>int main()\n{\n    int i = 2147483647;\n    int over_int = i + 10;\n    cout &lt;&lt; over_int;\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>-2147483639\n</code></pre> \u0110\u00e2y l\u00e0 do t\u00ednh ch\u1ea5t quay v\u00f2ng c\u1ee7a s\u1ed1 n\u00ean s\u1ed1 <code>int</code> \u0111\u00e3 sai k\u1ebft qu\u1ea3 v\u00e0 quay v\u00f2ng. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y n\u00ean t\u0103ng th\u00eam k\u00edch th\u01b0\u1edbc cho bi\u1ebfn ch\u1eb3ng h\u1ea1n d\u00f9ng <code>long int</code>. Nh\u01b0ng c\u00e1i quan tr\u1ecdng c\u1ea7n \u0111\u00fac k\u1ebft \u1edf \u0111\u00e2y l\u00e0:</p> <p>Ch\u00fa \u00fd</p> <p>Khi th\u1ef1c hi\u1ec7n ph\u00e9p t\u00ednh n\u00ean \u0111\u1ea3m b\u1ea3o ph\u1ea1m vi gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn. B\u1edfi khi qu\u00e1 ng\u01b0\u1ee1ng s\u1ebd kh\u00f4ng c\u00f3 th\u00f4ng b\u00e1o n\u00e0o \u0111\u00e2u, vi\u1ec7c n\u00e0y t\u1ef1 b\u1ea3n th\u00e2n ng\u01b0\u1eddi l\u1eadp tr\u00ecnh c\u1ea7n ph\u1ea3i n\u1eafm.</p> <p>Vi\u1ec7c th\u1ef1c hi\u1ec7n ph\u00e9p nh\u00e2n c\u0169ng t\u01b0\u01a1ng t\u1ef1 n\u1ebfu v\u01b0\u1ee3t qu\u00e1 k\u00edch th\u01b0\u1edbc s\u1ebd x\u1ea3y ra hi\u1ec7n t\u01b0\u1ee3ng overflow nh\u01b0 c\u0169.</p>"},{"location":"Programming/cpp/cpp-1-basic-operator/#phep-chia","title":"Ph\u00e9p Chia","text":"<p>Ph\u00e9p chia s\u1ebd g\u1ed3m 2 ph\u00e9p to\u00e1n l\u00e0 chia l\u1ea5y nguy\u00ean v\u00e0 chia l\u1ea5y d\u01b0</p>"},{"location":"Programming/cpp/cpp-1-basic-operator/#phep-chia-lay-nguyen","title":"Ph\u00e9p chia l\u1ea5y nguy\u00ean","text":"<ul> <li>Chia l\u1ea5y nguy\u00ean t\u1ee9c l\u00e0 ph\u00e9p chi ch\u1ec9 l\u1ea5p ph\u1ea7n nguy\u00ean. V\u00ed d\u1ee5 5/2 \u0111\u01b0\u1ee3c 2.5 nh\u01b0ng ph\u00e9p chia kh\u00f4ng l\u1ea5y ph\u1ea7n th\u1eadp ph\u00e2n m\u00e0 ch\u1ec9 l\u1ea5y ph\u1ea7n nguy\u00ean l\u00e0 <code>2</code>.</li> <li>Ph\u00e9p chia l\u1ea5y nguy\u00ean tr\u1edf th\u00e0nh ph\u00e9p chia b\u00ecnh th\u01b0\u1eddng n\u1ebfu s\u1eed d\u1ee5ng s\u1ed1 th\u1ef1c, v\u00ed d\u1ee5 nh\u01b0 l\u00e0 ki\u1ec3u <code>double</code>.</li> </ul> <p><pre><code>int main()\n{\n    int i = 5;\n    float d = 5.0;\n\n    cout &lt;&lt; i / 2 &lt;&lt; endl;\n    cout &lt;&lt; d / 2.0 &lt;&lt; endl;\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>2\n2.5\n</code></pre></p> <p>Note</p> <p>Th\u1ef1c ra trong ph\u00e9p t\u00ednh tr\u00ean kh\u00f4ng nh\u1ea5t thi\u1ebft khi d\u00f9ng <code>float</code> ph\u1ea3i \u0111\u1ec3 l\u00e0 <code>5.0</code>, ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 khai b\u00e1o nh\u01b0 l\u00e0 <code>float d = 5;</code>. M\u1ee5c \u0111\u00edch m\u00ecnh l\u00e0m vi\u1ec7c \u0111\u00f3 ch\u1ec9 l\u00e0 \u0111\u1ec3 t\u1ea1o th\u00f3i quen kh\u00f4ng \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh d\u1ecbch ph\u1ea3i ng\u1ea7m hi\u1ec3u g\u00e2y m\u1ea5t ki\u1ec3m so\u00e1t.</p>"},{"location":"Programming/cpp/cpp-1-basic-operator/#phep-chia-lay-du","title":"Ph\u00e9p chia l\u1ea5y d\u01b0","text":"<ul> <li>Ph\u00e9p chia l\u1ea5y d\u01b0 t\u1ee9c l\u00e0 l\u1ea5y ph\u1ea7n d\u01b0. V\u00ed d\u1ee5 nh\u01b0 5 chia 2 d\u01b0 1 th\u00ec <code>1</code> ch\u00ednh l\u00e0 k\u1ebft qu\u1ea3.</li> <li>Ph\u00e9p chia l\u1ea5y d\u01b0 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n tr\u00ean s\u1ed1 nguy\u00ean.</li> </ul> <p><pre><code>int main()\n{\n    int i = 5;\n    cout &lt;&lt; i % 2 &lt;&lt; endl;\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>1\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-basic-operator/#bitwise-operator","title":"Bitwise Operator","text":"<p>C\u00e1c ph\u00e9p to\u00e1n bitwise l\u00e0 c\u00e1c ph\u00e9p to\u00e1n tr\u1ef1c ti\u1ebfp thao t\u00e1c c\u00e1c bit c\u1ee7a m\u1ed9t s\u1ed1. C\u00e1c ph\u00e9p to\u00e1n bitwise h\u1eefu \u00edch cho nhi\u1ec1u m\u1ee5c \u0111\u00edch kh\u00e1c nhau, ch\u1eb3ng h\u1ea1n nh\u01b0 t\u1ed1i \u01b0u h\u00f3a thu\u1eadt to\u00e1n, th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 ph\u00e9p t\u00ednh nh\u1ea5t \u0111\u1ecbnh v\u00e0 thao t\u00e1c b\u1ed9 nh\u1edb trong c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh c\u1ea5p th\u1ea5p h\u01a1n nh\u01b0 C v\u00e0 C++.</p> <p>Sau \u0111\u00e2y l\u00e0 t\u00f3m t\u1eaft nhanh v\u1ec1 c\u00e1c ph\u00e9p to\u00e1n bitwise ph\u1ed5 bi\u1ebfn trong C++.</p>"},{"location":"Programming/cpp/cpp-1-basic-operator/#cac-phep-toan-logic-voi-bits","title":"C\u00e1c ph\u00e9p to\u00e1n logic v\u1edbi bits","text":""},{"location":"Programming/cpp/cpp-1-basic-operator/#and","title":"AND (&amp;)","text":"<p>Ph\u00e9p to\u00e1n bitwise AND ( &amp;) l\u00e0 ph\u00e9p to\u00e1n nh\u1ecb ph\u00e2n l\u1ea5y hai s\u1ed1, so s\u00e1nh t\u1eebng bit m\u1ed9t v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 m\u1edbi trong \u0111\u00f3 m\u1ed7i bit \u0111\u01b0\u1ee3c \u0111\u1eb7t (1) n\u1ebfu c\u00e1c bit t\u01b0\u01a1ng \u1ee9ng trong c\u1ea3 hai s\u1ed1 \u0111\u1ea7u v\u00e0o \u0111\u01b0\u1ee3c \u0111\u1eb7t (1); n\u1ebfu kh\u00f4ng, bit s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t (0).</p> A B A &amp; B 0 0 0 0 1 0 1 0 0 1 1 1 <p>V\u00ed d\u1ee5:</p> <pre><code>int result = 5 &amp; 3; // result will be 1 (0000 0101 &amp; 0000 0011 = 0000 0001)\n</code></pre>"},{"location":"Programming/cpp/cpp-1-basic-operator/#or","title":"OR (|)","text":"<p>Ph\u00e9p to\u00e1n bitwise OR ( |) l\u00e0 ph\u00e9p to\u00e1n nh\u1ecb ph\u00e2n l\u1ea5y hai s\u1ed1, so s\u00e1nh t\u1eebng bit m\u1ed9t v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 m\u1edbi trong \u0111\u00f3 m\u1ed7i bit \u0111\u01b0\u1ee3c \u0111\u1eb7t (1) n\u1ebfu \u00edt nh\u1ea5t m\u1ed9t trong c\u00e1c bit t\u01b0\u01a1ng \u1ee9ng trong m\u1ed9t trong hai s\u1ed1 \u0111\u1ea7u v\u00e0o \u0111\u01b0\u1ee3c \u0111\u1eb7t (1); n\u1ebfu kh\u00f4ng, bit s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t (0).</p> A B A|B 0 0 0 0 1 1 1 0 1 1 1 1 <p>V\u00ed d\u1ee5:</p> <pre><code>int result = 5 | 3; // result will be 7 (0000 0101 | 0000 0011 = 0000 0111\n</code></pre>"},{"location":"Programming/cpp/cpp-1-basic-operator/#xor","title":"XOR (^)","text":"<p>Ph\u00e9p to\u00e1n bitwise XOR (OR lo\u1ea1i tr\u1eeb) ( ^) l\u00e0 ph\u00e9p to\u00e1n nh\u1ecb ph\u00e2n l\u1ea5y hai s\u1ed1, so s\u00e1nh t\u1eebng bit m\u1ed9t v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 m\u1edbi trong \u0111\u00f3 m\u1ed7i bit \u0111\u01b0\u1ee3c \u0111\u1eb7t (1) n\u1ebfu c\u00e1c bit t\u01b0\u01a1ng \u1ee9ng trong c\u00e1c s\u1ed1 \u0111\u1ea7u v\u00e0o kh\u00e1c nhau; n\u1ebfu kh\u00f4ng, bit s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t (0).</p> A B A|B 0 0 0 0 1 1 1 0 1 1 1 0 <p>V\u00ed d\u1ee5:</p> <pre><code>int result = 5 ^ 3; // result will be 6 (0000 0101 ^ 0000 0011 = 0000 0110)\n</code></pre>"},{"location":"Programming/cpp/cpp-1-basic-operator/#not","title":"NOT (~)","text":"<p>Ph\u00e9p to\u00e1n bitwise NOT (~) l\u00e0 ph\u00e9p to\u00e1n \u0111\u01a1n ng\u00f4i l\u1ea5y m\u1ed9t s\u1ed1 duy nh\u1ea5t v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 m\u1edbi trong \u0111\u00f3 m\u1ed7i bit \u0111\u01b0\u1ee3c \u0111\u1ea3o ng\u01b0\u1ee3c (1 th\u00e0nh 0 v\u00e0 0 th\u00e0nh 1).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>int result = ~5; // result will be -6 (1111 1010)\n</code></pre>"},{"location":"Programming/cpp/cpp-1-basic-operator/#dich-bit","title":"D\u1ecbch bit","text":""},{"location":"Programming/cpp/cpp-1-basic-operator/#dich-bit-sang-trai","title":"D\u1ecbch bit sang tr\u00e1i (&lt;&lt;)","text":"<p>Ph\u00e9p d\u1ecbch chuy\u1ec3n tr\u00e1i bitwise (<code>&lt;&lt;</code>) l\u00e0 ph\u00e9p to\u00e1n nh\u1ecb ph\u00e2n l\u1ea5y hai s\u1ed1, m\u1ed9t gi\u00e1 tr\u1ecb v\u00e0 m\u1ed9t l\u01b0\u1ee3ng d\u1ecbch chuy\u1ec3n, v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 m\u1edbi b\u1eb1ng c\u00e1ch d\u1ecbch chuy\u1ec3n c\u00e1c bit c\u1ee7a gi\u00e1 tr\u1ecb sang tr\u00e1i theo l\u01b0\u1ee3ng d\u1ecbch chuy\u1ec3n \u0111\u00e3 ch\u1ec9 \u0111\u1ecbnh. C\u00e1c bit b\u1ecb b\u1ecf tr\u1ed1ng \u0111\u01b0\u1ee3c \u0111i\u1ec1n b\u1eb1ng s\u1ed1 kh\u00f4ng.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>int result = 5 &lt;&lt; 1; // result will be 10 (0000 0101 &lt;&lt; 1 = 0000 1010\n</code></pre>"},{"location":"Programming/cpp/cpp-1-basic-operator/#dich-bit-sang-phai","title":"D\u1ecbch bit sang ph\u1ea3i (&gt;&gt;)","text":"<p>Ph\u00e9p d\u1ecbch chuy\u1ec3n bitwise sang ph\u1ea3i (<code>&gt;&gt;</code>) l\u00e0 ph\u00e9p to\u00e1n nh\u1ecb ph\u00e2n l\u1ea5y hai s\u1ed1, m\u1ed9t gi\u00e1 tr\u1ecb v\u00e0 m\u1ed9t l\u01b0\u1ee3ng d\u1ecbch chuy\u1ec3n, v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t s\u1ed1 m\u1edbi b\u1eb1ng c\u00e1ch d\u1ecbch chuy\u1ec3n c\u00e1c bit c\u1ee7a gi\u00e1 tr\u1ecb sang ph\u1ea3i theo l\u01b0\u1ee3ng d\u1ecbch chuy\u1ec3n \u0111\u00e3 ch\u1ec9 \u0111\u1ecbnh. C\u00e1c bit b\u1ecb b\u1ecf tr\u1ed1ng \u0111\u01b0\u1ee3c \u0111i\u1ec1n b\u1eb1ng s\u1ed1 kh\u00f4ng ho\u1eb7c bit d\u1ea5u t\u00f9y thu\u1ed9c v\u00e0o gi\u00e1 tr\u1ecb \u0111\u1ea7u v\u00e0o c\u00f3 d\u1ea5u hay kh\u00f4ng d\u1ea5u.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>int result = 5 &gt;&gt; 1; // result will be 2 (0000 0101 &gt;&gt; 1 = 0000 0010)\n</code></pre>"},{"location":"Programming/cpp/cpp-1-bit-operator/","title":"Basic Bit Operator","text":""},{"location":"Programming/cpp/cpp-1-bit-operator/#bit-operator","title":"Bit Operator?","text":"<p>Ngh\u0129a l\u00e0 c\u00e1c thu\u1eadt to\u00e1n li\u00ean quan \u0111\u1ebfn <code>bit</code>. M\u00e1y t\u00ednh th\u1ef1c hi\u1ec7n c\u00e1c ph\u00e9p t\u00ednh n\u00e0y nhanh h\u01a1n nhi\u1ec1u so v\u1edbi khi t\u00ednh to\u00e1n c\u00e1c ph\u00e9p t\u00ednh s\u1ed1 h\u1ecdc.</p>"},{"location":"Programming/cpp/cpp-1-bit-operator/#operator","title":"Operator","text":""},{"location":"Programming/cpp/cpp-1-bit-operator/#logic","title":"Logic","text":"<p>Ch\u00fa \u00fd</p> <p>C\u00e1c ph\u00e9p t\u00ednh v\u1edbi bit b\u1eb1ng c\u00e1ch n\u00e0o \u0111\u00f3 ch\u1ec9 th\u1ef1c hi\u1ec7n v\u1edbi c\u00e1c s\u1ed1 nguy\u00ean ki\u1ec3u nh\u01b0 <code>int</code>, <code>short</code> ...</p>"},{"location":"Programming/cpp/cpp-1-bit-operator/#and","title":"AND","text":"<p>Ph\u00e9p AND \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng d\u1ea5u <code>&amp;</code>. AND hai <code>bit</code> ch\u1ec9 tr\u1ea3 v\u1ec1 <code>1</code> khi c\u1ea3 hai \u0111\u1ec1u l\u00e0 <code>1</code>.</p> a/b 0 1 0 0 0 1 0 1"},{"location":"Programming/cpp/cpp-1-bit-operator/#or","title":"OR","text":"<p>Ph\u00e9p OR \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng d\u1ea5u <code>|</code>. OR hai <code>bit</code> ch\u1ec9 tr\u1ea3 v\u1ec1 <code>0</code> khi c\u1ea3 hai \u0111\u1ec1u l\u00e0 <code>0</code>.</p> a/b 0 1 0 0 1 1 1 1"},{"location":"Programming/cpp/cpp-1-bit-operator/#xor","title":"XOR","text":"<p>Ph\u00e9p XOR \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng d\u1ea5u <code>^</code>. XOR hai <code>bit</code> tr\u1ea3 v\u1ec1 <code>0</code> khi gi\u1ed1ng nhau, <code>1</code> n\u1ebfu kh\u00e1c nhau.</p> a/b 0 1 0 0 1 1 1 0"},{"location":"Programming/cpp/cpp-1-bit-operator/#not","title":"NOT","text":"<p>NOT l\u00e0 ph\u00e9p \u0111\u1ea3o bit. T\u1eeb <code>1</code> th\u00e0nh <code>0</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. Ph\u00e9p \u0111\u1ea3o s\u1eed d\u1ee5ng d\u1ea5u <code>~</code>.</p>"},{"location":"Programming/cpp/cpp-1-bit-operator/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>main.cpp<pre><code>int main()\n{\n    int a = 8; // 0x0100\n    int b = 9; // 0x0101\n\n    cout &lt;&lt; (a&amp;b) &lt;&lt; endl; // 0x0100 &amp; 0x0101 = 8\n    cout &lt;&lt; (a|b) &lt;&lt; endl; // 0x0100 | 0x0101 = 9\n    cout &lt;&lt; (a^b) &lt;&lt; endl; // 0x0100 ^ 0x0101 = 1\n    cout &lt;&lt; (~a) &lt;&lt; endl;  // Thy \u0111\u1ed5i bit d\u1ea5u (bit \u0111\u1ea7u ti\u00ean) v\u00e0 tr\u1edf th\u00e0nh s\u1ed1 \u00e2m\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: output<pre><code>8\n9\n1\n-9\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-bit-operator/#dich","title":"D\u1ecbch","text":""},{"location":"Programming/cpp/cpp-1-bit-operator/#dich-trai","title":"D\u1ecbch tr\u00e1i","text":""},{"location":"Programming/cpp/cpp-1-bit-operator/#dich-phai","title":"D\u1ecbch ph\u1ea3i","text":""},{"location":"Programming/cpp/cpp-1-command-line-arguments/","title":"Command Line Arguments","text":""},{"location":"Programming/cpp/cpp-1-command-line-arguments/#chuong-trinh","title":"Ch\u01b0\u01a1ng tr\u00ecnh","text":"<p>\u0110\u00e2y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh m\u1eabu:</p> main.cpp<pre><code>#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n\nusing namespace std; \n\nint main (int argc, char *argv[] )\n{\n    printf(\"argc: %d\\n\", argc);\n    for (size_t i = 0; i &lt; argc; i++)\n    {\n        printf(\"%2u - %2s\\n\", i, argv[i]);\n    }\n    return EXIT_SUCCESS; \n}\n</code></pre> <p>Output:</p> output<pre><code>argc: 11\n 0 - main\n 1 -  1\n 2 -  2\n 3 -  3\n 4 -  4\n 5 -  5\n 6 -  6\n 7 -  7\n 8 -  8\n 9 -  9\n10 - 10\n</code></pre> <ul> <li><code>argc</code>: l\u00e0 t\u1ed5ng s\u1ed1 bi\u1ebfn \u0111\u1ea7u v\u00e0o.</li> <li><code>argv</code>: l\u00e0 m\u1ea3ng c\u00e1c chu\u1ed7i k\u00fd t\u1ef1 \u0111\u1ea7u v\u00e0o.</li> <li>Ri\u00eang ch\u1ec9 s\u1ed1 \u0111\u1ea7u ti\u00ean l\u00e0 0 l\u00e0 d\u00e0nh ri\u00eang cho chu\u1ed7i k\u00fd t\u1ef1 \"main\"</li> </ul>"},{"location":"Programming/cpp/cpp-1-condition-loop/","title":"Condition And Loop","text":""},{"location":"Programming/cpp/cpp-1-condition-loop/#condition","title":"Condition","text":""},{"location":"Programming/cpp/cpp-1-condition-loop/#phep-toan-so-sanh","title":"Ph\u00e9p to\u00e1n so s\u00e1nh","text":""},{"location":"Programming/cpp/cpp-1-condition-loop/#if","title":"if","text":"<p>\u0110i\u1ec1u ki\u1ec7n xoay quanh bi\u1ebfn <code>bool</code> v\u00e0 h\u00e0m <code>if</code>\\ Bi\u1ebfn bool c\u0169ng c\u00f3 th\u1ec3 hi\u1ec3u l\u00e0 m\u1ed9t s\u1ed1 v\u1edbi m\u1eb7c \u0111\u1ecbnh: - <code>true</code>  = 1 - <code>false</code> = 0</p> <p>Th\u1eed \u0111o\u1ea1n code sau: </p> <p>main.cpp<pre><code>int main()\n{\n    bool A = true;\n    bool B = false;\n    if(A) {\n        std::cout &lt;&lt; \"Value of A: \" &lt;&lt; A; // Because A=true, code work in here\n    }\n    if(B) {\n        std::cout &lt;&lt; \"Value of B: \" &lt;&lt; B; // code not run in here\n    }\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>Value of A: 1\n</code></pre> Ngo\u00e0i ra, c\u00e1c s\u1ed1 kh\u00e1c <code>0</code> c\u0169ng \u0111\u01b0\u1ee3c t\u00ednh l\u00e0 <code>true</code>.</p>"},{"location":"Programming/cpp/cpp-1-condition-loop/#ifelse","title":"if/else","text":"<p>C\u00f3 m\u1ed9t ki\u1ec3u kh\u00e1c c\u1ee7a <code>if</code> l\u00e0 <code>if-esle</code>. Ngh\u0129a l\u00e0 n\u1ebfu if sai th\u00ec v\u00e0o tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i.</p> <p>main.cpp<pre><code>int main()\n{\n    bool A = false;\n    if(A) {\n        std::cout &lt;&lt; \"Value if A: \" &lt;&lt; A; // Because A=true, code work in here\n    } else {\n        std::cout &lt;&lt; \"Value else A: \" &lt;&lt; A; // code not run in here\n    }\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>Value else A: 0\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-condition-loop/#phep-toan-so-sanh_1","title":"Ph\u00e9p to\u00e1n so s\u00e1nh","text":""},{"location":"Programming/cpp/cpp-1-condition-loop/#so-sanh-bang","title":"So s\u00e1nh b\u1eb1ng","text":"<p>So s\u00e1nh b\u1eb1ng d\u00f9ng d\u1ea5u <code>==</code> main.cpp<pre><code>int main()\n{\n    int a = 1;\n    int b = 2;\n    if(a==b) {\n        std::cout &lt;&lt; \"a = b\";\n    } else {\n        std::cout &lt;&lt; \"a != b\";\n    }\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>a != b\n</code></pre> Ng\u01b0\u1ee3c l\u1ea1i, s\u1eed d\u1ee5ng <code>!=</code> n\u1ebfu mu\u1ed1n ki\u1ec3m tra kh\u00f4ng gi\u1ed1ng. main.cpp<pre><code>int main()\n{\n    int a = 1;\n    int b = 2;\n    if(a!=b) {\n        std::cout &lt;&lt; \"a != b\";\n    } else {\n        std::cout &lt;&lt; \"a == b\";\n    }\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>a != b\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-condition-loop/#andor","title":"and/or","text":"<ul> <li>V\u1edbi ph\u00e9p so s\u00e1nh v\u00e0 (AND), c\u1ea3 hai \u0111i\u1ec1u ki\u1ec7n so s\u00e1nh \u0111\u1ec1u ph\u1ea3i \u0111\u00fang.<ul> <li>So s\u00e1nh (AND) d\u00f9ng d\u1ea5u <code>&amp;&amp;</code></li> </ul> </li> <li>V\u1edbi ph\u00e9p so s\u00e1nh v\u00e0 (OR), ch\u1ec9 c\u1ea7n m\u1ed9t \u0111i\u1ec1u ki\u1ec7n \u0111\u00fang.<ul> <li>So s\u00e1nh (OR) d\u00f9ng d\u1ea5u <code>||</code></li> </ul> </li> <li>C\u00f3 th\u1ec3 nhi\u1ec1u h\u01a1n hai v\u1ebf, v\u00e0 ph\u00e9p so s\u00e1nh c\u00f3 th\u1ec3 </li> </ul> <p>main.cpp<pre><code>int main()\n{\n    bool A = true;\n    bool B = false;\n    std::cout &lt;&lt; A&amp;&amp;B &lt;&lt; std::endl; // false\n    std::cout &lt;&lt; A||B &lt;&lt; std::endl; // true\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>0\n1\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-condition-loop/#phep-ao","title":"Ph\u00e9p \u0111\u1ea3o","text":"<p>Ph\u00e9p \u0111\u1ea3o \u0111\u1ec3 \u0111\u1ea3o ng\u01b0\u1ee3c k\u1ebft qu\u1ea3. V\u00ed d\u1ee5 mu\u1ed1n ki\u1ec3m tra v\u1edbi \u0110i\u1ec1u ki\u1ec7n A kh\u00f4ng \u0111\u00fang.</p> <p>main.cpp<pre><code>int main()\n{\n    bool A = true;\n    if(!A) {\n        std::cout &lt;&lt; A;\n    }\n\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>1\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-condition-loop/#vong-lap","title":"V\u00f2ng l\u1eb7p","text":"<p>V\u00f2ng l\u1eb7p \u0111i\u1ec1u ki\u1ec7n v\u00e0 V\u00f2ng l\u1eb7p trong kho\u1ea3ng</p>"},{"location":"Programming/cpp/cpp-1-condition-loop/#vong-lap-trong-khoang","title":"V\u00f2ng l\u1eb7p trong kho\u1ea3ng","text":"<ul> <li>V\u00f2ng l\u1eb7p trong kho\u1ea3ng l\u00e0 <code>for</code>. V\u00f2ng l\u1eb7p s\u1ebd k\u1ebft th\u00fac v\u1edbi \u0111i\u1ec1u ki\u1ec7n theo bi\u1ebfn \u0111\u1ea7u <code>i</code>.<ul> <li><code>int i=0;</code> : Bi\u1ebfn <code>i</code> kh\u1edfi t\u1ea1o b\u1eaft \u0111\u1ea7u t\u1eeb gi\u00e1 tr\u1ecb <code>0</code></li> <li><code>i&lt;10;</code>: \u0110i\u1ec1u ki\u1ec7n tho\u00e1t l\u00e0 nh\u1ecf h\u01a1n <code>10</code></li> <li><code>++i</code>: T\u0103ng th\u00eam m\u1ed9t gi\u00e1 tr\u1ecb sau khi h\u1ebft v\u00f2ng l\u1eb7p</li> <li>Ch\u01b0\u01a1ng tr\u00ecnh ch\u00ednh th\u1ef1c hi\u1ec7n trong <code>{}</code> main.cpp<pre><code>int main()\n{\n    for(int i=0; i&lt;10; ++i) {\n        std::cout &lt;&lt; i &lt;&lt; std::endl;\n    }\n    return EXIT_SUCCESS; \n}\n</code></pre> <pre><code>0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre> Ti\u1ebfn tr\u00ecnh v\u00f2ng l\u1eb7p FOR nh\u01b0 sau:</li> </ul> </li> </ul> <pre>d8e068931be651ac264d06f4b4b588722c755430668095380caa450c8134cb4c63390724aeafedf298667e62bf1d06443f91e376757abdebf80b5f3524e95afc</pre><pre>7c3836c5ad4290327e3f1aa1264dc60292717ae615ad652a06836aa1dfd1a280d45cb5923ad295788b48602162562b3a81e3c381d415cc3f649501b238f106bc</pre>"},{"location":"Programming/cpp/cpp-1-condition-loop/#vong-lap-ieu-kien","title":"V\u00f2ng l\u1eb7p \u0111i\u1ec1u ki\u1ec7n","text":"<p>V\u00f2ng l\u1eb7p \u0111i\u1ec1u ki\u1ec7n s\u1eed d\u1ee5ng c\u00fa ph\u00e1p <code>while</code> v\u00e0 tho\u00e1t ch\u1ec9 v\u1edbi 1 \u0111i\u1ec1u ki\u1ec7n. Cho \u0111\u1ebfn khi n\u00e0o \u0111i\u1ec1u ki\u1ec7n ch\u01b0a \u0111\u01b0\u1ee3c tho\u1ea3 m\u00e3n th\u00ec c\u00f2n trong v\u00f2ng l\u1eb7p <code>{}</code>.</p> <p>main.cpp<pre><code>int main()\n{\n    int i=0;\n    while(i&lt;100) {\n        // Do code in here\n        ++i;\n    }\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n    return EXIT_SUCCESS; \n}\n</code></pre> Ch\u01b0\u01a1ng tr\u00ecnh tho\u00e1t v\u1edbi \u0111i\u1ec1u ki\u1ec7n cho \u0111\u1ebfn khi bi\u1ebfn <code>i</code> \u0111\u1ebfn gi\u00e1 tr\u1ecb <code>100</code> <pre><code>100\n</code></pre> V\u00f2ng l\u1eb7p c\u00f3 s\u01a1 \u0111\u1ed3 nh\u01b0 sau:</p> <pre>8cd01c36d95e936d4529a8d488cfa1f5dcb0aaa6f7d9720fab2fa2d478b9083babb6ec9979e2dfc4ccf17b6f41d2c9d5329cae9d9b18652c5bffd7d06d41ca50</pre><pre>37a5cb9c95323f7029dd3aa11232589683d7607c485296e0a8b0a57f978049f2ed5b3659cd953c3e7aa39847e4fb8c52e4de2ce0470d97f2ae26fa202723dccc</pre> <p>V\u00f2ng l\u1eb7p \u0111i\u1ec1u ki\u1ec7n c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng c\u00f9ng ch\u1ee9c n\u0103ng v\u1edbi <code>for</code> nh\u01b0 sau:</p> main.cpp<pre><code>int main()\n{\n    int i=0;\n    for(;i&lt;100;;) {\n        // Do code in here\n        ++i;\n    }\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n    return EXIT_SUCCESS; \n}\n</code></pre>"},{"location":"Programming/cpp/cpp-1-datatypes/","title":"Data Type (Ki\u1ec3u Bi\u1ebfn)","text":""},{"location":"Programming/cpp/cpp-1-datatypes/#primitive-data-types-cac-loai-bien-co-ban","title":"Primitive Data Types (C\u00e1c lo\u1ea1i bi\u1ebfn c\u01a1 b\u1ea3n)","text":""},{"location":"Programming/cpp/cpp-1-datatypes/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>C\u00e1c lo\u1ea1i bi\u1ebfn c\u01a1 b\u1ea3n bao g\u1ed3m bool, char, short, int, long, float, double</li> <li>Bi\u1ebfn c\u01a1 b\u1ea3n ngh\u0129a l\u00e0 c\u00e1c lo\u1ea1i bi\u1ebfn c\u00f3 s\u1eb5n (kh\u00f4ng th\u00f4ng qua l\u1edbp g\u00f3i gh\u00e9m n\u00e0o c\u1ea3)</li> <li>Bi\u1ebfn c\u01a1 b\u1ea3n th\u1ee5 \u0111\u1ed9ng, kh\u00f4ng c\u00f3 ch\u1ee9c n\u0103ng ph\u1ee5 g\u00ec c\u1ea3.</li> </ul>"},{"location":"Programming/cpp/cpp-1-datatypes/#danh-sach","title":"Danh s\u00e1ch","text":"Type 32\u2013bit Size 64\u2013bit Size Min Max Unsigned (Min=0) bool 1 byte 1 byte NA NA NA char 1 byte 1 byte -128 127 255 short 2 byte 2 byte -32768 32767 65535 int 4 byte 4 byte -2147483648 2147483647 4294967295 = \\(2^{32}-1\\) long 4 byte 8 byte (t\u1ef1 t\u00ednh) (t\u1ef1 t\u00ednh) (t\u1ef1 t\u00ednh) float 4 byte 4 byte \\(-3.40282 \\times 10^{38}\\) \\(3.40282 \\times 10^{38}\\) TO_DO double 8 byte 8 byte \\(\u22121,79769 \\times 10^{308}\\) \\(1,79769 \\times 10^{308}\\) TO_DO"},{"location":"Programming/cpp/cpp-1-datatypes/#integer-short-int","title":"Integer (short, int)","text":"<p>S\u1ed1 nguy\u00ean l\u00e0 c\u00e1c s\u1ed1 to\u00e0n b\u1ed9 c\u00f3 th\u1ec3 l\u01b0u tr\u1eef c\u1ea3 gi\u00e1 tr\u1ecb t\u00edch c\u1ef1c v\u00e0 \u00e2m. K\u00edch th\u01b0\u1edbc c\u1ee7a INT ph\u1ee5 thu\u1ed9c v\u00e0o ki\u1ebfn \u200b\u200btr\u00fac h\u1ec7 th\u1ed1ng (th\u01b0\u1eddng l\u00e0 4 byte). C\u00f3 c\u00e1c bi\u1ebfn th\u1ec3 c\u1ee7a int c\u00f3 th\u1ec3 ch\u1ee9a c\u00e1c ph\u1ea1m vi s\u1ed1 kh\u00e1c nhau:</p> <pre><code>int num = 42;\n</code></pre> <p>C\u00f3 c\u00e1c bi\u1ebfn th\u1ec3 c\u1ee7a <code>int</code> c\u00f3 th\u1ec3 ch\u1ee9a c\u00e1c ph\u1ea1m vi s\u1ed1 kh\u00e1c nhau:</p> <ul> <li><code>short</code> (<code>short int</code>): Ph\u1ea1m vi nh\u1ecf h\u01a1n <code>int</code>.</li> <li><code>long</code> (<code>long int</code>): ph\u1ea1m vi l\u1edbn h\u01a1n <code>int</code>.</li> <li><code>long long</code> (<code>long int</code>): th\u1eadm ch\u00ed ph\u1ea1m vi l\u1edbn h\u01a1n so v\u1edbi <code>long int</code>.</li> </ul> <p>T\u1eadp c\u00e1c s\u1ed1 nguy\u00ean trong C++ c\u00f3 r\u1ea5t nhi\u1ec1u lo\u1ea1i kh\u00e1c nhau nh\u01b0 <code>short</code>, <code>int</code>, <code>long</code>, <code>long long</code>.</p>"},{"location":"Programming/cpp/cpp-1-datatypes/#so-nguyen-dang-co-dau","title":"S\u1ed1 nguy\u00ean d\u1ea1ng c\u00f3 d\u1ea5u","text":"<p>V\u1ec1 c\u01a1 b\u1ea3n n\u1ebfu kh\u00f4ng c\u00f3 khai b\u00e1o g\u00ec th\u00eam th\u00ec s\u1ed1 nguy\u00ean s\u1ebd l\u00e0 d\u1ea1ng s\u1ed1 nguy\u00ean c\u00f3 d\u1ea5u.</p> Type Size Min Max Max as bit <code>0xF..F</code> <code>short</code> 2 bytes <code>-32768</code> <code>32767</code> <code>-1</code> <code>int</code> 4 bytes <code>-2147483648</code> <code>2147483647</code> <code>-1</code> <code>long</code> 8 bytes <code>-2147483648</code> <code>2147483647</code> <code>-1</code> <code>long long</code> 8 bytes <code>-9223372036854775808</code> <code>9223372036854775807</code> <code>-1</code>"},{"location":"Programming/cpp/cpp-1-datatypes/#so-nguyen-khong-dau","title":"S\u1ed1 nguy\u00ean kh\u00f4ng d\u1ea5u","text":"<p>N\u1ebfu l\u00e0 d\u1ea1ng s\u1ed1 nguy\u00ean kh\u00f4ng d\u1ea5u, c\u1ea7n th\u00eam bi\u1ebfn <code>unsigned</code>.</p> Type Size Min Max Max as bit <code>0xF..F</code> <code>unsigned short</code> 2 bytes <code>0</code> <code>65535</code> <code>65535</code> <code>unsigned int</code> 4 bytes <code>0</code> <code>4294967295</code> <code>4294967295</code> <code>unsigned long</code> 8 bytes <code>0</code> <code>4294967295</code> <code>4294967295</code> <code>unsigned long long</code> 8 bytes <code>0</code> <code>18446744073709551615</code> <code>18446744073709551615</code>"},{"location":"Programming/cpp/cpp-1-datatypes/#floating-point-float-double","title":"Floating-Point (float, double)","text":"<p>C\u00e1c lo\u1ea1i floating-point \u0111\u1ea1i di\u1ec7n cho c\u00e1c s\u1ed1 th\u1ef1c, t\u1ee9c l\u00e0, c\u00e1c s\u1ed1 c\u00f3 \u0111i\u1ec3m th\u1eadp ph\u00e2n. C\u00f3 hai lo\u1ea1i floating-point ch\u00ednh:</p> <ul> <li><code>float</code>: Float Cung c\u1ea5p s\u1ed1 d\u1ea5u n\u1ed5i ch\u00ednh x\u00e1c \u0111\u01a1n. N\u00f3 th\u01b0\u1eddng chi\u1ebfm <code>4 bytes</code> b\u1ed9 nh\u1edb.     <pre><code>float pi = 3.14f;\n</code></pre></li> <li><code>double</code>: Double Cung c\u1ea5p c\u00e1c s\u1ed1 \u0111i\u1ec3m n\u1ed5i \u0111\u1ed9 ch\u00ednh x\u00e1c k\u00e9p. N\u00f3 ti\u00eau th\u1ee5 nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n (th\u01b0\u1eddng l\u00e0 <code>8 bytes</code>) nh\u01b0ng c\u00f3 \u0111\u1ed9 ch\u00ednh x\u00e1c cao h\u01a1n <code>float</code>.     <pre><code>double pi_high_precision = 3.1415926535;\n</code></pre></li> </ul>"},{"location":"Programming/cpp/cpp-1-datatypes/#character-char","title":"Character (char)","text":"<p>C\u00e1c k\u00fd t\u1ef1 \u0111\u1ea1i di\u1ec7n cho m\u1ed9t k\u00fd t\u1ef1 duy nh\u1ea5t, ch\u1eb3ng h\u1ea1n nh\u01b0 ch\u1eef c\u00e1i, ch\u1eef s\u1ed1 ho\u1eb7c k\u00fd hi\u1ec7u. Ch\u00fang \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng gi\u00e1 tr\u1ecb ASCII c\u1ee7a bi\u1ec3u t\u01b0\u1ee3ng v\u00e0 th\u01b0\u1eddng chi\u1ebfm 1 byte b\u1ed9 nh\u1edb.</p> <pre><code>char letter = 'A';\n</code></pre>"},{"location":"Programming/cpp/cpp-1-datatypes/#boolean-bool","title":"Boolean (bool)","text":"<p>Booleans \u0111\u1ea1i di\u1ec7n cho c\u00e1c gi\u00e1 tr\u1ecb logic: \u0110\u00fang (<code>true</code>) ho\u1eb7c Sai (<code>false</code>). bool th\u01b0\u1eddng chi\u1ebfm 1 byte b\u1ed9 nh\u1edb.</p> <pre><code>bool is_cpp_great = true;\n</code></pre>"},{"location":"Programming/cpp/cpp-1-datatypes/#vi-du-cac-loai-bien-co-ban","title":"V\u00ed d\u1ee5 c\u00e1c lo\u1ea1i bi\u1ebfn c\u01a1 b\u1ea3n","text":"<p>T\u1ed5 h\u1ee3p bi\u1ebfn c\u01a1 b\u1ea3n c\u1ee7a C++ g\u1ed3m c\u00f3:</p> <ul> <li><code>int</code>, <code>short</code>, <code>long</code>: s\u1ed1 t\u1ef1 nhi\u00ean (bao g\u1ed3m c\u1ea3 s\u1ed1 \u00e2m)</li> <li><code>float</code> ho\u1eb7c <code>double</code>: s\u1ed1 th\u1eadp ph\u00e2n, v\u00ed d\u1ee5 nh\u01b0 l\u00e0 19.99 ho\u1eb7c 19.99</li> <li><code>char</code> : k\u00fd t\u1ef1, ki\u1ec3u ch\u1eef c\u00e1i \u0111\u01a1n l\u1ebb <code>a</code>, <code>b</code> hay <code>c</code> ho\u1eb7c <code>+</code> ...</li> <li><code>bool</code> : gi\u00e1 tr\u1ecb logic \u0111\u00fang sai (<code>true</code>/<code>false</code>)</li> </ul> <p>H\u00e3y th\u1eed <pre><code>int main()\n{\n    int    i = 10;\n    float  f1 = 0.5;\n    double f2 = 1.5;\n    char   c = 'f';\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n    std::cout &lt;&lt; f1 &lt;&lt; std::endl;\n    std::cout &lt;&lt; f2 &lt;&lt; std::endl;\n    std::cout &lt;&lt; c &lt;&lt; std::endl;\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>10\n0.5\n1.5\nf\n</code></pre></p> <p><code>std::endl</code> \u0111\u1ec3 k\u1ebft th\u00fac c\u00f4ng vi\u1ec7c <code>cout</code> v\u00e0 xu\u1ed1ng d\u00f2ng.</p>"},{"location":"Programming/cpp/cpp-1-datatypes/#array-chuoi","title":"Array - Chu\u1ed7i","text":"<p>Chu\u1ed7i l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00f3 nhi\u1ec1u c\u1ee7a bi\u1ebfn, c\u00f3 th\u1ec3 l\u00e0 bi\u1ebfn c\u01a1 b\u1ea3n ho\u1eb7c kh\u00f4ng. Chu\u1ed7i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng c\u00e1ch th\u00eam <code>[]</code> \u0111\u1eb1ng sau t\u00ean bi\u1ebfn. Gi\u1eefa hai d\u1ea5u ngo\u1eb7c s\u1ebd l\u00e0 s\u1ed1 l\u01b0\u1ee3ng. C\u00f3 th\u1ec3 kh\u00f4ng c\u1ea7n \u0111i\u1ec1n s\u1ed1 l\u01b0\u1ee3ng, nh\u01b0ng \u0111\u1ec3 s\u1eed d\u1ee5ng n\u00f3 t\u1ed1t ph\u1ea3i c\u00f3 ki\u1ebfn th\u1ee9c v\u1ec1 con tr\u1ecf n\u00ean s\u1ebd \u0111\u1ec1 c\u1eadp sau.</p> <p>Truy c\u1eadp ph\u1ea7n t\u1eed c\u1ee7a chu\u1ed7i ch\u1ec9 c\u1ea7n d\u00f9ng <code>t\u00ean_bi\u1ebfn[v\u1ecb_tr\u00ed]</code> v\u1edbi v\u1ecb tr\u00ed l\u00e0 s\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a ph\u1ea7n t\u1eed trong chu\u1ed7i, nh\u01b0ng n\u00f3 s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb <code>0</code>, kh\u00f4ng ph\u1ea3i <code>1</code></p> <p>Xem v\u00ed d\u1ee5 sau: <pre><code>int main()\n{\n    int    i[5] = {1,2,3,4,5}; \n    char   c[5] = {'H', 'e', 'l', 'l', 'o'};\n    string str = \"Hello World\";\n    cout &lt;&lt; i[0] &lt;&lt; endl; // Tr\u1ea3 v\u1ec1 s\u1ed1 \u0111\u1ea7u ti\u00ean\n    cout &lt;&lt; i[1] &lt;&lt; endl; // Tr\u1ea3 v\u1ec1 s\u1ed1 ti\u1ebfp theo\n    cout &lt;&lt; c[0] &lt;&lt; c[1] &lt;&lt; c[2] &lt;&lt; c[3] &lt;&lt; c[4] &lt;&lt; endl; // \u0110\u1ea7y \u0111\u1ee7\n    cout &lt;&lt; str &lt;&lt; endl;  // Chu\u1ed7i k\u00fd t\u1ef1\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>1\n2\nHello\nHello World\n</code></pre></p> <p>Ch\u00fa \u00fd</p> <p>B\u1ea1n kh\u00f4ng th\u1ec3 g\u1ecdi \u0111\u1ebfn v\u1ecb tr\u00ed v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a chu\u1ed7i. V\u00ed d\u1ee5 nh\u01b0 <code>i[6]</code></p>"},{"location":"Programming/cpp/cpp-1-datatypes/#string","title":"string","text":"<ul> <li><code>string</code> v\u1ec1 c\u01a1 b\u1ea3n l\u00e0 m\u1ed9t chu\u1ed7i <code>char</code> \u0111\u1eb7c bi\u1ec7t \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n d\u00e0nh ri\u00eang cho ng\u00f4n ng\u1eef <code>C++</code> c\u1ea7n th\u01b0 vi\u1ec7n standard library c++, c\u1ea7n s\u1eed d\u1ee5ng std::string. M\u00e0 th\u1ef1c t\u1ebf l\u00e0 ch\u1ea3 ai r\u1ea3nh \u0111\u1ec3 vi\u1ebft t\u1eebng k\u00fd t\u1ef1 cho m\u1ed9t v\u0103n b\u1ea3n c\u1ea3 n\u00ean vi\u1ec7c c\u00f3 n\u00f3 l\u00e0 b\u1eaft bu\u1ed9c.</li> <li><code>string</code> \u0111\u01b0\u1ee3c coi l\u00e0 m\u1ed9t trong nh\u1eefng d\u1ea1ng bi\u1ebfn c\u01a1 b\u1ea3n b\u1eb1t \u0111\u1ea7u t\u1eeb <code>C++</code>. Nh\u01b0ng v\u1ec1 b\u1ea3n ch\u1ea5t n\u00f3 v\u1eabn l\u00e0 m\u1ed9t chu\u1ed7i nh\u1eefng k\u00fd t\u1ef1 <code>char</code> n\u00ean m\u00ecnh \u0111\u1ec3 \u0111\u00e2y. Xung quanh <code>string</code> c\u00f2n c\u00f3 r\u1ea5t nhi\u1ec1u th\u01b0 vi\u1ec7n v\u1ec7 tinh h\u1ed7 tr\u1ee3 n\u00ean ri\u00eang ki\u1ec3u bi\u1ebfn n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c t\u00e1ch ra l\u00e0m m\u1ed9t ch\u01b0\u01a1ng ri\u00eang.</li> </ul>"},{"location":"Programming/cpp/cpp-1-datatypes/#thay-oi-bien","title":"Thay \u0111\u1ed5i bi\u1ebfn","text":"<p>Bi\u1ebfn c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1eafn l\u1ea1i cho gi\u00e1 tr\u1ecb kh\u00e1c sau khi khai b\u00e1o, v\u00ed d\u1ee5: <pre><code>int main() {\n    int i = 0;\n    i = 10; // Sau l\u1ea7n khai b\u00e1o \u0111\u1ea7u ti\u00ean, kh\u00f4ng c\u1ea7n ph\u1ea3i g\u1ecdi l\u1ea1i int \u0111\u1ec3 \u0111\u1ecbnh d\u1ea1ng ki\u1ec3u bi\u1ebfn.\n    cout &lt;&lt; i &lt;&lt; endl; // K\u1ebft qu\u1ea3 l\u00e0 10\n    return EXIT_SUCCESS;\n}\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-datatypes/#khai-bao-mo-rong","title":"Khai b\u00e1o m\u1edf r\u1ed9ng","text":"<p>Bi\u1ebfn c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c khai b\u00e1o th\u00eam m\u1ed9t s\u1ed1 r\u00e0ng bu\u1ed9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0:</p> <ul> <li><code>unsigned</code> : r\u00e0ng bu\u1ed9c l\u00e0 s\u1ed1 d\u01b0\u01a1ng</li> <li><code>const</code> : kh\u00f4ng th\u1ec3 \u0111\u1ed5i</li> </ul> <p><pre><code>int main() {\n    unsigned int ui = -1; // S\u1ebd b\u1ecb chuy\u1ec3n \u0111\u1ed5i\n    const int ci = 10;\n    // ci = 20; // S\u1ebd g\u00e2y ra l\u1ed7i khi build\n    cout &lt;&lt; ui &lt;&lt; endl; // K\u1ebft qu\u1ea3 l\u00e0 10\n    return EXIT_SUCCESS;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>4294967295\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-datatypes/#ep-kieu","title":"\u00c9p ki\u1ec3u","text":"<p>Bi\u1ebfn c\u00f3 th\u1ec3 \u00e9p ki\u1ec3u t\u1eeb lo\u1ea1i n\u00e0y sang lo\u1ea1i kh\u00e1c. \u00c9p ki\u1ec3u c\u0169ng c\u00f3 2 ki\u1ec3u:</p> <ul> <li>\u00c9p ki\u1ec3u an to\u00e0n l\u00e0 \u00e9p ki\u1ec3u t\u1eeb d\u1eef li\u1ec7u th\u1ea5p l\u00ean cao ho\u1eb7c b\u1eb1ng nhau.</li> <li>\u00c9p ki\u1ec3u d\u1eef li\u1ec7u t\u1eeb cao xu\u1ed1ng th\u1ea5p l\u00e0 kh\u00f4ng an to\u00e0n.</li> </ul> <p>Xem k\u00edch th\u01b0\u1edbc ki\u1ec3u d\u1eef li\u1ec7u \u1edf b\u1ea3ng Danh s\u00e1ch, c\u1ee5 th\u1ec3 l\u00e0:</p> <ul> <li>V\u00ed d\u1ee5 \u00e9p ki\u1ec3u an to\u00e0n l\u00e0 t\u1eeb bool, char, ..., ki\u1ec3u d\u1eef li\u1ec7u nh\u1ecf th\u00e0nh int, float, double l\u00e0 \u00e9p ki\u1ec3u an to\u00e0n.</li> <li>V\u00ed d\u1ee5 \u00e9p ki\u1ec3u kh\u00f4ng an to\u00e0n l\u00e0 t\u1eeb k\u00edch th\u01b0\u1edbc l\u1edbn nh\u01b0 int, float, double, ... sang ki\u1ec3u an to\u00e0n l\u00e0 bool, char, ...</li> </ul> <p><pre><code>int main()\n{\n    int a = 2000000000;\n    short s0 = 97;\n\n    short s1 = a;\n    long  l = a;\n    char c = s0;\n    cout &lt;&lt; s1 &lt;&lt; endl; // Hight -&gt; low\n    cout &lt;&lt; l &lt;&lt; endl;\n    cout &lt;&lt; c &lt;&lt; endl;\n    return EXIT_SUCCESS; \n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>-27648\n2000000000\n</code></pre></p>"},{"location":"Programming/cpp/cpp-1-flow-control/","title":"Flow Control","text":""},{"location":"Programming/cpp/cpp-1-flow-control/#ifelse","title":"if/else","text":"<p><code>if/else</code> \u0111\u01a1n gi\u1ea3n l\u00e0 ki\u1ec3m tra \u0111\u00fang sai, lu\u1ed3ng \u0111\u01a1n gi\u1ea3n nh\u01b0 n\u00e0y:</p> <pre>924423e0fa45c7346107a6eae6429350f774164d0701b75efb6d092040feb8e0c7a3d22616051b1e9373638f83d29947446b87f9bed8c8a78caf03116d8b8541</pre><pre>421f4b7ba0ebc0172d415be1780ba58fb5fe95f36c17baeeb8c726df5ee43d853cddd629b830ea1630d892c9d5ebb20467b86c04b311adc39e93937367184ba0</pre> <p>N\u1ebfu <code>condition</code> (\u0111i\u1ec1u ki\u1ec7n) l\u00e0 \u0111\u00fang th\u00ec s\u1ebd th\u1ef1c hi\u1ec7n <code>[does true]</code>, c\u00f2n l\u1ea1i sai th\u00ec l\u00e0 <code>[does false]</code>. M\u00e3 m\u1eabu nh\u01b0 sau:</p> <pre><code>bool condition = true; // else false\n\nif(condition) {\n    // does true\n} else {\n    // does false\n}\n</code></pre>"},{"location":"Programming/cpp/cpp-1-flow-control/#for","title":"for","text":"<p><code>for</code> l\u00e0 v\u00f2ng l\u1eb7p, ch\u1ea1y </p> <pre><code>for(int i=0; i&lt;10; ++i) {\n    std::cout &lt;&lt; i &lt;&lt; \" \";\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>0 1 2 3 4 5 6 7 8 9\n</code></pre>"},{"location":"Programming/cpp/cpp-1-flow-control/#while","title":"while","text":"<p><code>while</code> ngh\u0129a l\u00e0 v\u00f2ng l\u1eb7p c\u00f3 \u0111i\u1ec1u ki\u1ec7n:</p> <p><pre><code>int count = 0;\n\nwhile(count &lt; 10) {\n    count = count + 1;\n}\n</code></pre> <pre><code>0 1 2 3 4 5 6 7 8 9\n</code></pre> D\u00f2ng l\u1ec7nh \u0111\u00f3 th\u1ef1c hi\u1ec7n nh\u01b0 sau: - <code>count</code> kh\u1edfi \u0111\u1ed9ng v\u1edbi gi\u00e1 tr\u1ecb b\u1eb1ng <code>0</code> - Sau \u0111\u00f3 v\u00ec <code>count &lt; 10</code>, \u0111i\u1ec1u ki\u1ec7n v\u1eabn \u0111\u00fang n\u00ean s\u1ebd th\u1ef1c hi\u1ec7n d\u00f2ng l\u1ec7nh trong d\u1ea5u <code>{}</code> - D\u00f2ng l\u1ec7nh <code>count = count + 1</code> l\u00e0 ch\u00ednh gi\u00e1 tr\u1ecb \u0111\u00f3 \u0111\u01b0\u1ee3c t\u1ef1 t\u0103ng l\u00ean <code>1</code>. - Sau \u0111\u00f3 \u0111\u1ebfn khi <code>count</code> \u0111\u1ebfn <code>10</code> th\u00ec s\u1ebd tho\u00e1t v\u00f2ng l\u1eb7p</p>"},{"location":"Programming/cpp/cpp-1-flow-control/#goto","title":"goto","text":"<p><code>goto</code> c\u1ea7n m\u1ed9t nh\u00e3n d\u00e1n \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean, h\u00e3y xem qua v\u00ed d\u1ee5 d\u01b0\u1edbi n\u00e0y:</p> <pre><code>int main()\n{\n    int count = 0;\n\n    while(true) {\n        if(count &gt; 10) {\n            goto example_label;\n        }\n        count = count + 1;\n    }\nexample_label:\n    return 0;\n}\n</code></pre> <ul> <li>H\u00e0m n\u00e0y s\u1ebd th\u1ef1c hi\u1ec7n g\u1ea7n nh\u01b0 h\u00e0m while \u1edf tr\u00ean tr\u1eeb m\u1ed9t \u0111i\u1ec3m, \u0111i\u1ec1u ki\u1ec7n l\u00e0 <code>true</code> t\u1ee9c l\u00e0 v\u00f2ng l\u1eb7p v\u00f4 h\u1ea1n.</li> <li>V\u1edbi \u0111i\u1ec1u ki\u1ec7n <code>(count &gt; 10)</code> \u0111o\u1ea1n trong n\u00e0y s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong khi bi\u1ebfn <code>count</code> c\u00f2n nh\u1ecf h\u01a1n <code>10</code></li> <li>Khi <code>count</code> ti\u1ebfn \u0111\u1ebfn gi\u00e1 tr\u1ecb <code>10</code>, s\u1ebd th\u1ef1c hi\u1ec7n \u0111o\u1ea1n m\u00e3 <code>goto example_label;</code></li> <li><code>goto example_label;</code> s\u1ebd d\u1eabn \u0111\u1ebfn nh\u00e3n examplelabel_</li> <li>\u0110o\u1ea1n n\u00e0y s\u1ebd tho\u00e1t kh\u1ecfi v\u00f2ng l\u1eb7p <code>while</code> v\u00e0 tho\u00e1t ra kh\u1ecfi ch\u01b0\u01a1ng tr\u00ecnh.</li> </ul>"},{"location":"Programming/cpp/cpp-1-input-and-output/","title":"Input and Output","text":""},{"location":"Programming/cpp/cpp-1-input-and-output/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p>C\u00f3 hai ki\u1ec3u \u0111\u1ec3 xu\u1ea5t ra ngo\u00e0i l\u00e0 d\u00f9ng h\u00e0m ki\u1ec3u C l\u00e0 printf() v\u00e0 cin. V\u00e0 ki\u1ec3u xu\u1ea5t \u0111\u1ed9ng t\u1eeb th\u01b0 vi\u1ec7n <code>std</code>.</p>"},{"location":"Programming/cpp/cpp-1-input-and-output/#thao-tac-nguyen-thuy","title":"Thao t\u00e1c nguy\u00ean th\u1ee7y","text":""},{"location":"Programming/cpp/cpp-1-input-and-output/#putcharputs","title":"putchar/puts","text":"<ul> <li>Thao t\u00e1c \u0111\u01a1n gi\u1ea3n, \u0111\u1ea9y m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1 ra ngo\u00e0i m\u00e0n h\u00ecnh.</li> <li>Ph\u1ee5 thu\u1ed9c th\u01b0 vi\u1ec7n <code>stdio.h</code></li> </ul> 1 2 3 putchar <code>int putchar(int character)</code> Vi\u1ebft m\u1ed9t k\u00fd t\u1ef1 v\u00e0o <code>stdout</code> puts <code>int puts ( const char * str );</code> Vi\u1ebft chu\u1ed7i v\u00e0o <code>stdout</code>"},{"location":"Programming/cpp/cpp-1-input-and-output/#printf","title":"printf","text":"<ul> <li>Th\u01b0 vi\u1ec7n ki\u1ec3u C \u0111\u01b0\u1ee3c k\u1ebf th\u1eeba t\u1eeb jngoon</li> <li>C\u1ea5u tr\u00fac h\u00e0m: <code>int printf ( const char * format, ... );</code><ul> <li>H\u00e0m n\u00e0y c\u00f3 gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1, l\u00e0 s\u1ed1 k\u00fd t\u1ef1 \u0111\u01b0\u1ee3c xu\u1ea5t ra ngo\u00e0i.</li> </ul> </li> </ul> Specifier Output Example <code>d</code> or <code>i</code> S\u1ed1 nguy\u00ean th\u1eadp ph\u00e2n c\u00f3 d\u1ea5u 392 <code>u</code> S\u1ed1 nguy\u00ean th\u1eadp ph\u00e2n kh\u00f4ng d\u1ea5u 7235 <code>o</code> B\u00e1t ph\u00e2n kh\u00f4ng d\u1ea5u 610 <code>x</code> S\u1ed1 nguy\u00ean th\u1eadp l\u1ee5c ph\u00e2n kh\u00f4ng d\u1ea5u 7ng\u00e0y <code>X</code> S\u1ed1 nguy\u00ean th\u1eadp l\u1ee5c ph\u00e2n kh\u00f4ng d\u1ea5u (vi\u1ebft hoa) 7FA <code>f</code> S\u1ed1 th\u1eadp ph\u00e2n d\u1ea5u ph\u1ea9y \u0111\u1ed9ng, ch\u1eef th\u01b0\u1eddng 392,65 <code>F</code> S\u1ed1 th\u1eadp ph\u00e2n d\u1ea5u ph\u1ea9y \u0111\u1ed9ng, ch\u1eef hoa 392,65 <code>e</code> K\u00fd hi\u1ec7u khoa h\u1ecdc (mantissa/m\u0169), ch\u1eef th\u01b0\u1eddng 3.9265e+2 <code>E</code> K\u00fd hi\u1ec7u khoa h\u1ecdc (mantissa/m\u0169), ch\u1eef hoa 3.9265E+2 <code>g</code> S\u1eed d\u1ee5ng bi\u1ec3u di\u1ec5n ng\u1eafn nh\u1ea5t: %e ho\u1eb7c %f 392,65 <code>G</code> S\u1eed d\u1ee5ng bi\u1ec3u di\u1ec5n ng\u1eafn nh\u1ea5t: %E ho\u1eb7c %F 392,65 <code>a</code> D\u1ea5u ph\u1ea9y \u0111\u1ed9ng th\u1eadp l\u1ee5c ph\u00e2n, ch\u1eef th\u01b0\u1eddng -0xc.90fep-2 <code>A</code> D\u1ea5u ph\u1ea9y \u0111\u1ed9ng th\u1eadp l\u1ee5c ph\u00e2n, ch\u1eef hoa -0XC.90FEP-2 <code>c</code> T\u00ednh c\u00e1ch M\u1ed9t <code>S</code> Chu\u1ed7i k\u00fd t\u1ef1 v\u1eadt m\u1eabu <code>P</code> \u0110\u1ecba ch\u1ec9 con tr\u1ecf b8000000 <code>N</code> Kh\u00f4ng c\u00f3 g\u00ec \u0111\u01b0\u1ee3c in ra. \u0110\u1ed1i s\u1ed1 t\u01b0\u01a1ng \u1ee9ng ph\u1ea3i l\u00e0 m\u1ed9t con tr\u1ecf \u0111\u1ebfn m\u1ed9t s\u1ed1 nguy\u00ean c\u00f3 d\u1ea5u. S\u1ed1 k\u00fd t\u1ef1 \u0111\u00e3 vi\u1ebft cho \u0111\u1ebfn nay \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf v\u1ecb tr\u00ed \u0111\u01b0\u1ee3c tr\u1ecf t\u1edbi. <code>%</code> K\u00fd t\u1ef1 % theo sau l\u00e0 m\u1ed9t k\u00fd t\u1ef1 % kh\u00e1c s\u1ebd ghi m\u1ed9t k\u00fd t\u1ef1 % duy nh\u1ea5t v\u00e0o lu\u1ed3ng. % <p>Flag</p> flags description <code>-</code> C\u0103n tr\u00e1i trong ph\u1ea1m vi chi\u1ec1u r\u1ed9ng \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh; C\u0103n ph\u1ea3i l\u00e0 m\u1eb7c \u0111\u1ecbnh (xem th\u00f4ng s\u1ed1 ph\u1ee5 v\u1ec1 chi\u1ec1u r\u1ed9ng ). <code>+</code> Bu\u1ed9c ph\u1ea3i th\u00eam d\u1ea5u c\u1ed9ng ho\u1eb7c d\u1ea5u tr\u1eeb ( + ho\u1eb7c - ) v\u00e0o tr\u01b0\u1edbc k\u1ebft qu\u1ea3 ngay c\u1ea3 \u0111\u1ed1i v\u1edbi s\u1ed1 d\u01b0\u01a1ng. <code>(space)</code> N\u1ebfu kh\u00f4ng c\u00f3 d\u1ea5u hi\u1ec7u n\u00e0o \u0111\u01b0\u1ee3c vi\u1ebft, m\u1ed9t kho\u1ea3ng tr\u1eafng s\u1ebd \u0111\u01b0\u1ee3c ch\u00e8n v\u00e0o tr\u01b0\u1edbc gi\u00e1 tr\u1ecb. <code>#</code> \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u1edbi c\u00e1c ch\u1ec9 \u0111\u1ecbnh <code>o, x ho\u1eb7c X</code>, gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c \u0111\u1eb7t tr\u01b0\u1edbc b\u1eb1ng <code>0, 0x ho\u1eb7c 0X</code> t\u01b0\u01a1ng \u1ee9ng cho c\u00e1c gi\u00e1 tr\u1ecb kh\u00e1c kh\u00f4ng.\u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u1edbi <code>a, A, e, E, f, F, g ho\u1eb7c G</code>, n\u00f3 bu\u1ed9c \u0111\u1ea7u ra \u0111\u01b0\u1ee3c vi\u1ebft ph\u1ea3i ch\u1ee9a d\u1ea5u th\u1eadp ph\u00e2n ngay c\u1ea3 khi kh\u00f4ng c\u00f3 th\u00eam ch\u1eef s\u1ed1 n\u00e0o theo sau.Theo m\u1eb7c \u0111\u1ecbnh, n\u1ebfu kh\u00f4ng c\u00f3 ch\u1eef s\u1ed1 n\u00e0o theo sau, th\u00ec kh\u00f4ng c\u00f3 d\u1ea5u th\u1eadp ph\u00e2n n\u00e0o \u0111\u01b0\u1ee3c vi\u1ebft. <code>0</code> Th\u00eam s\u1ed1 b\u00ean tr\u00e1i b\u1eb1ng s\u1ed1 kh\u00f4ng."},{"location":"Programming/cpp/cpp-1-input-and-output/#stdcout","title":"std::cout","text":""},{"location":"Programming/cpp/cpp-1-input-and-output/#cin","title":"cin","text":""},{"location":"Programming/cpp/cpp-1-input-and-output/#reference-tham-khao","title":"Reference (tham kh\u1ea3o)","text":""},{"location":"Programming/cpp/cpp-2-function-as-parameter/","title":"Function As Parameter","text":""},{"location":"Programming/cpp/cpp-2-function-as-parameter/#su-dung-ham-nhu-la-bien-au-vao","title":"S\u1eed d\u1ee5ng h\u00e0m nh\u01b0 l\u00e0 bi\u1ebfn \u0111\u1ea7u v\u00e0o","text":"<ul> <li>T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi lamda v\u00e0 c\u00f3 th\u1ec3 d\u00f9ng h\u00e0m nh\u01b0 bi\u1ebfn truy\u1ec1n \u0111\u1ea7u v\u00e0o (g\u1ea7n gi\u1ed1ng h\u00e0m <code>std::sort</code>).</li> <li>\u0110\u00e2y l\u00e0 m\u1ed9t \u00fd t\u01b0\u1edfng kh\u00e1 th\u00fa v\u1ecb. Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p, bi\u1ebfn truy\u1ec1n \u0111\u1ea7u v\u00e0o s\u1ebd kh\u00f4ng n\u1eb1m trong m\u1ed9t s\u1ed1 ki\u1ec3u bi\u1ebfn c\u01a1 b\u1ea3n ho\u1eb7c l\u00e0 ch\u00fang s\u1ebd c\u1ea7n \u0111i\u1ec1u ki\u1ec7n g\u00ec \u0111\u00f3 th\u00eam \u0111\u1ec3 thay \u0111\u1ed5i n\u1ed9i dung logic b\u00ean trong. V\u00ed d\u1ee5 nh\u01b0:<ul> <li><code>1.1</code> v\u00e0 <code>1.11</code>, n\u1ebfu hi\u1ec3u l\u00e0 s\u1ed1 th\u00ec <code>1.11</code> &gt; <code>1.1</code> nh\u01b0ng x\u1ebfp h\u1ea1ng theo d\u1ea1ng chu\u1ed7i (string) th\u00ec <code>1.11</code> &lt; <code>1.1</code> v\u00ec <code>1.1</code> ng\u1eafn v\u00e0 t\u1ed5ng qu\u00e1t h\u01a1n.</li> </ul> </li> <li>D\u1ea1ng \u0111i\u1ec1u ki\u1ec7n n\u00e0y c\u1ea7n thi\u1ebft v\u00e0 \u0111\u01b0\u1ee3c \u01b0a chu\u1ed9ng g\u1ea7n gi\u1ed1ng nh\u01b0 <code>lambda</code> v\u00ec t\u00ednh ti\u1ec7n l\u1ee3i, nhi\u1ec1u ph\u1ea7n logic nh\u1ecf kh\u00f4ng c\u1ea7n thi\u1ebft ph\u1ea3i t\u1ea1o h\u00e0m ra ngo\u00e0i nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 thay \u0111\u1ed5i / s\u1eeda \u0111\u1ed5i t\u1eed ngo\u00e0i nh\u01b0 m\u1ed9t tham s\u1ed1 c\u00f3 th\u1ec3 truy\u1ec1n v\u00e0o.</li> </ul>"},{"location":"Programming/cpp/cpp-2-function-as-parameter/#thu-vien-can-thiet","title":"Th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft","text":"<ul> <li><code>#include &lt;functional&gt;</code></li> </ul>"},{"location":"Programming/cpp/cpp-2-function-as-parameter/#vi-du","title":"V\u00ed d\u1ee5","text":"<pre><code>#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\nvoid test_functional(int x, int y, std::function&lt;bool(int)&gt; fn = nullptr) {\n    if(fn==nullptr)\n        return;\n    if(fn(x) &amp;&amp; fn(y)) {\n        printf(\"both x &amp; y is valid!\\n\");\n    } else if(fn(x)) {\n        printf(\"x valid!\\n\");\n    } else {\n        printf(\"y valid!\\n\");\n    }\n    return;\n}\n\nbool functional(int x) {\n    return x &gt; 10;\n}\n\nint main() {\n    int a = 10;\n    int b = 20;\n    test_functional(a, b, functional); // y valid!\n    test_functional(a, b, [](int x) {return x &gt; 4;}); // both x &amp; y is valid!\n    return 0;\n}\n</code></pre> <ul> <li><code>functional</code> l\u00e0 m\u1ed9t h\u00e0m, v\u00e0 n\u00f3 c\u0169ng \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o nh\u01b0 m\u1ed9t bi\u1ebfn, n\u00f3 gi\u00fap h\u00e0m <code>test_functional</code> c\u00f3 th\u1ec3 linh ho\u1ea1t x\u1eed l\u00fd h\u01a1n v\u1edbi hai bi\u1ebfn \u0111\u1ea7u v\u00e0o v\u00ed d\u1ee5 nh\u01b0 a v\u00e0 b trong vi\u1ec7c x\u1eed l\u00fd logic n\u1ed9i h\u00e0m.</li> <li>C\u00e1ch th\u1ee9 hai \u0111\u01b0\u1ee3c vi\u1ebft b\u00ean d\u01b0\u1edbi l\u00e0 m\u1ed9t ki\u1ec3u vi\u1ebft b\u1eb1ng lambda thu\u1ea7n t\u00fay.</li> </ul>"},{"location":"Programming/cpp/cpp-2-function/","title":"Function","text":"<p>H\u00e0m l\u00e0 m\u1ed9t nh\u00f3m c\u00e1c c\u00e2u l\u1ec7nh th\u1ef1c hi\u1ec7n m\u1ed9t nhi\u1ec7m v\u1ee5 c\u1ee5 th\u1ec3, \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c nh\u01b0 m\u1ed9t \u0111\u01a1n v\u1ecb ri\u00eang bi\u1ec7t trong m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh. H\u00e0m gi\u00fap chia nh\u1ecf m\u00e3 th\u00e0nh c\u00e1c kh\u1ed1i nh\u1ecf h\u01a1n, d\u1ec5 qu\u1ea3n l\u00fd v\u00e0 c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng.</p>"},{"location":"Programming/cpp/cpp-2-function/#inh-nghia-mot-ham","title":"\u0110\u1ecbnh ngh\u0129a m\u1ed9t h\u00e0m","text":"<p>V\u1ec1 c\u01a1 b\u1ea3n c\u00f3 hai lo\u1ea1i h\u00e0m trong C++:</p> <ul> <li>C\u00e1c h\u00e0m th\u01b0 vi\u1ec7n chu\u1ea9n: C\u00e1c h\u00e0m \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc c\u00f3 trong th\u01b0 vi\u1ec7n chu\u1ea9n C++, ch\u1eb3ng h\u1ea1n nh\u01b0 sort(), strlen(), sqrt(), v\u00e0 nhi\u1ec1u h\u00e0m kh\u00e1c n\u1eefa. C\u00e1c h\u00e0m n\u00e0y l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a th\u01b0 vi\u1ec7n chu\u1ea9n, do \u0111\u00f3 b\u1ea1n c\u1ea7n \u0111\u01b0a v\u00e0o t\u1ec7p ti\u00eau \u0111\u1ec1 th\u00edch h\u1ee3p \u0111\u1ec3 s\u1eed d\u1ee5ng ch\u00fang.</li> <li>H\u00e0m do ng\u01b0\u1eddi d\u00f9ng \u0111\u1ecbnh ngh\u0129a: H\u00e0m do l\u1eadp tr\u00ecnh vi\u00ean t\u1ea1o ra \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t t\u00e1c v\u1ee5 c\u1ee5 th\u1ec3. \u0110\u1ec3 t\u1ea1o h\u00e0m do ng\u01b0\u1eddi d\u00f9ng \u0111\u1ecbnh ngh\u0129a, b\u1ea1n c\u1ea7n \u0111\u1ecbnh ngh\u0129a h\u00e0m v\u00e0 g\u1ecdi h\u00e0m \u0111\u00f3 trong m\u00e3 c\u1ee7a m\u00ecnh.</li> </ul>"},{"location":"Programming/cpp/cpp-2-function/#inh-nghia-mot-ham_1","title":"\u0110\u1ecbnh ngh\u0129a m\u1ed9t h\u00e0m","text":"<p>\u0110\u1ecbnh d\u1ea1ng chung \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a h\u00e0m trong C++ l\u00e0: <pre><code>return_type function_name(parameter list) {\n    // function body\n}\n</code></pre></p> <p>Trong \u0111\u00f3:</p> <ul> <li><code>return_type</code>: Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a \u0111\u1ea7u ra do h\u00e0m t\u1ea1o ra. C\u00f3 th\u1ec3 l\u00e0 void, bi\u1ec3u th\u1ecb r\u1eb1ng h\u00e0m kh\u00f4ng tr\u1ea3 v\u1ec1 b\u1ea5t k\u1ef3 gi\u00e1 tr\u1ecb n\u00e0o.</li> <li><code>function_name</code>: T\u00ean \u0111\u01b0\u1ee3c \u0111\u1eb7t cho h\u00e0m, theo quy \u01b0\u1edbc \u0111\u1eb7t t\u00ean C++.</li> <li><code>parameter list</code>: Danh s\u00e1ch c\u00e1c tham s\u1ed1/\u0111\u1ed1i s\u1ed1 \u0111\u1ea7u v\u00e0o c\u1ea7n thi\u1ebft \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u00e1c v\u1ee5. \u0110\u00e2y l\u00e0 t\u00f9y ch\u1ecdn, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ec3 tr\u1ed1ng khi kh\u00f4ng c\u1ea7n tham s\u1ed1 n\u00e0o.</li> </ul>"},{"location":"Programming/cpp/cpp-2-function/#vi-du","title":"V\u00ed d\u1ee5","text":"<pre><code>#include &lt;iostream&gt;\n\n// Function to add two numbers\nint addNumbers(int a, int b) {\n    int sum = a + b;\n    return sum;\n}\n\nint main() {\n    int num1 = 5, num2 = 10;\n    int result = addNumbers(num1, num2); // Calling the function\n    std::cout &lt;&lt; \"The sum is: \" &lt;&lt; result &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>Trong v\u00ed d\u1ee5 n\u00e0y, h\u00e0m <code>addNumbers</code> l\u1ea5y hai tham s\u1ed1 nguy\u00ean <code>a</code> v\u00e0 <code>b</code>, v\u00e0 tr\u1ea3 v\u1ec1 t\u1ed5ng c\u1ee7a c\u00e1c s\u1ed1. Sau \u0111\u00f3, ch\u00fang ta g\u1ecdi h\u00e0m n\u00e0y t\u1eeb h\u00e0m main()  v\u00e0 hi\u1ec3n th\u1ecb k\u1ebft qu\u1ea3.</p>"},{"location":"Programming/cpp/cpp-2-function/#nguyen-mau-chuc-nang","title":"Nguy\u00ean m\u1eabu ch\u1ee9c n\u0103ng","text":"<p>Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p, b\u1ea1n c\u00f3 th\u1ec3 mu\u1ed1n s\u1eed d\u1ee5ng m\u1ed9t h\u00e0m tr\u01b0\u1edbc khi th\u1ef1c s\u1ef1 \u0111\u1ecbnh ngh\u0129a n\u00f3. \u0110\u1ec3 l\u00e0m nh\u01b0 v\u1eady, b\u1ea1n c\u1ea7n khai b\u00e1o m\u1ed9t nguy\u00ean m\u1eabu h\u00e0m \u1edf \u0111\u1ea7u m\u00e3 c\u1ee7a m\u00ecnh.</p> <p>Nguy\u00ean m\u1eabu h\u00e0m l\u00e0 m\u1ed9t khai b\u00e1o h\u00e0m kh\u00f4ng c\u00f3 ph\u1ea7n th\u00e2n v\u00e0 th\u00f4ng b\u00e1o cho tr\u00ecnh bi\u00ean d\u1ecbch v\u1ec1 t\u00ean h\u00e0m, ki\u1ec3u tr\u1ea3 v\u1ec1 v\u00e0 c\u00e1c tham s\u1ed1.</p> <pre><code>#include &lt;iostream&gt;\n\n// Function prototype\nint multiplyNumbers(int x, int y);\n\nint main() {\n    int num1 = 3, num2 = 7;\n    int result = multiplyNumbers(num1, num2); // Calling the function\n    std::cout &lt;&lt; \"The product is: \" &lt;&lt; result &lt;&lt; std::endl;\n    return 0;\n}\n\n// Function definition\nint multiplyNumbers(int x, int y) {\n    int product = x * y;\n    return product;\n}\n</code></pre> <p>Trong v\u00ed d\u1ee5 n\u00e0y, ch\u00fang ta s\u1eed d\u1ee5ng m\u1ed9t nguy\u00ean m\u1eabu h\u00e0m <code>multiplyNumbers()</code> tr\u01b0\u1edbc khi \u0111\u1ecbnh ngh\u0129a n\u00f3. Theo c\u00e1ch n\u00e0y, ch\u00fang ta c\u00f3 th\u1ec3 g\u1ecdi h\u00e0m t\u1eeb h\u00e0m <code>main()</code> m\u1eb7c d\u00f9 n\u00f3 ch\u01b0a \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong m\u00e3.</p> <p>T\u00ecm hi\u1ec3u th\u00eam t\u1eeb c\u00e1c ngu\u1ed3n sau: Introduction to functions</p>"},{"location":"Programming/cpp/cpp-2-lambda/","title":"Lambda","text":""},{"location":"Programming/cpp/cpp-2-lambda/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>H\u00e0m lambda, hay \u0111\u01a1n gi\u1ea3n l\u00e0 \u201clambda\u201d, l\u00e0 m\u1ed9t h\u00e0m \u1ea9n danh (kh\u00f4ng c\u00f3 t\u00ean) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a t\u1ea1i ch\u1ed7, trong m\u00e3 ngu\u1ed3n c\u1ee7a b\u1ea1n v\u00e0 v\u1edbi c\u00fa ph\u00e1p ng\u1eafn g\u1ecdn. H\u00e0m lambda \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong C++11 v\u00e0 k\u1ec3 t\u1eeb \u0111\u00f3 \u0111\u00e3 tr\u1edf th\u00e0nh m\u1ed9t t\u00ednh n\u0103ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i, \u0111\u1eb7c bi\u1ec7t l\u00e0 khi k\u1ebft h\u1ee3p v\u1edbi c\u00e1c thu\u1eadt to\u00e1n Th\u01b0 vi\u1ec7n chu\u1ea9n (std).</p>"},{"location":"Programming/cpp/cpp-2-lambda/#cu-phap","title":"C\u00fa ph\u00e1p","text":"<p>Sau \u0111\u00e2y l\u00e0 c\u00fa ph\u00e1p c\u01a1 b\u1ea3n c\u1ee7a h\u00e0m lambda trong C++:</p> <pre><code>[capture-list](parameters) -&gt; return_type {\n    // function body\n};\n</code></pre> <ul> <li><code>capture-list</code> : Danh s\u00e1ch c\u00e1c bi\u1ebfn t\u1eeb ph\u1ea1m vi xung quanh m\u00e0 h\u00e0m lambda c\u00f3 th\u1ec3 truy c\u1eadp.</li> <li><code>parameters (tham s\u1ed1)</code> : Danh s\u00e1ch c\u00e1c tham s\u1ed1 \u0111\u1ea7u v\u00e0o, gi\u1ed1ng nh\u01b0 trong m\u1ed9t h\u00e0m th\u00f4ng th\u01b0\u1eddng. T\u00f9y ch\u1ecdn.</li> <li><code>return_type (ki\u1ec3u tr\u1ea3 v\u1ec1)</code> : Ki\u1ec3u gi\u00e1 tr\u1ecb m\u00e0 h\u00e0m lambda s\u1ebd tr\u1ea3 v\u1ec1. Ph\u1ea7n n\u00e0y l\u00e0 t\u00f9y ch\u1ecdn v\u00e0 tr\u00ecnh bi\u00ean d\u1ecbch c\u00f3 th\u1ec3 suy ra trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p.</li> <li><code>function body (th\u00e2n h\u00e0m)</code> : M\u00e3 \u0111\u1ecbnh ngh\u0129a ho\u1ea1t \u0111\u1ed9ng c\u1ee7a h\u00e0m lambda.</li> </ul>"},{"location":"Programming/cpp/cpp-2-lambda/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 v\u00ed d\u1ee5 \u0111\u1ec3 ch\u1ee9ng minh vi\u1ec7c s\u1eed d\u1ee5ng h\u00e0m lambda trong C++:</p> <ul> <li>H\u00e0m Lambda kh\u00f4ng c\u00f3 tham s\u1ed1, ki\u1ec3u d\u1eef li\u1ec7u ho\u1eb7c ki\u1ec3u tr\u1ea3 v\u1ec1.</li> </ul> <pre><code>auto printHello = []() {\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\n};\nprintHello(); // Output: Hello, World!\n</code></pre> <ul> <li>H\u00e0m Lambda c\u00f3 tham s\u1ed1.</li> </ul> <pre><code>auto add = [](int a, int b) {\n    return a + b;\n};\nint result = add(3, 4); // result = 7\n</code></pre> <ul> <li>H\u00e0m Lambda v\u1edbi ph\u01b0\u01a1ng ph\u00e1p n\u1eafm b\u1eaft theo gi\u00e1 tr\u1ecb.</li> </ul> <pre><code>int multiplier = 3;\nauto times = [multiplier](int a) {\n    return a * multiplier;\n};\nint result = times(5); // result = 15 \n</code></pre> <ul> <li>H\u00e0m Lambda v\u1edbi tham chi\u1ebfu.</li> </ul> <pre><code>int expiresInDays = 45;\nauto updateDays = [&amp;expiresInDays](int newDays) {\n    expiresInDays = newDays;\n};\nupdateDays(30); // expiresInDays = 30\n</code></pre> <p>Note</p> <p>L\u01b0u \u00fd r\u1eb1ng, khi s\u1eed d\u1ee5ng capture by reference, b\u1ea5t k\u1ef3 thay \u0111\u1ed5i n\u00e0o \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u0111\u1ed1i v\u1edbi bi\u1ebfn \u0111\u01b0\u1ee3c capture b\u00ean trong h\u00e0m lambda s\u1ebd \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn \u0111\u00f3 trong ph\u1ea1m vi xung quanh.</p>"},{"location":"Programming/cpp/cpp-2-lambda/#tim-hieu-them","title":"T\u00ecm hi\u1ec3u th\u00eam","text":""},{"location":"Programming/cpp/cpp-2-lambda/#tai-nguyen-mien-phi","title":"\ud83d\udc9a T\u00e0i nguy\u00ean mi\u1ec5n ph\u00ed","text":"<ol> <li>Bi\u1ec3u th\u1ee9c Lambda</li> <li>Lambda trong C++</li> <li>Kh\u00e1m ph\u00e1 c\u00e1c b\u00e0i \u0111\u0103ng h\u00e0ng \u0111\u1ea7u v\u1ec1 AWS Lambda</li> </ol>"},{"location":"Programming/cpp/cpp-3-std-hash/","title":"std::hash","text":""},{"location":"Programming/cpp/cpp-3-std-hash/#intro","title":"Intro","text":"<ul> <li>H\u00e0m b\u0103m \u0111\u1ec3 b\u0103m d\u1eef li\u1ec7u th\u00e0nh d\u1eef li\u1ec7u b\u0103m.</li> <li>D\u1eef li\u1ec7u sau khi b\u0103m kh\u00f4ng th\u1ec3 ho\u00e0n nguy\u00ean</li> </ul>"},{"location":"Programming/cpp/cpp-3-std-hash/#example","title":"Example","text":"<p>V\u00ed d\u1ee5 sau v\u1ec1 c\u00e1ch s\u1eed d\u1ee5ng <code>std::hash</code> trong C++</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n#include &lt;string&gt;\n\nint main ()\n{\n  char nts[] = \"Test\";\n  std::string str (\"Test\");\n\n  std::hash&lt;char*&gt;       ptr_hash;\n  std::hash&lt;std::string&gt; str_hash;\n\n  std::cout &lt;&lt; \"nts1:  \" &lt;&lt; nts &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"str:   \"  &lt;&lt; str &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"hash:  \" &lt;&lt; ptr_hash(nts) &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"hash:  \" &lt;&lt; str_hash(str) &lt;&lt; std::endl;\n  printf(\"printf hass:  %zu\", str_hash(str));\n\nreturn 0;\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>nts1:  Test\nstr:   Test\nhash:  140727073925123\nhash:  1631790366531532337\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-hash/#tom-tat","title":"T\u00f3m t\u1eaft","text":"<ul> <li><code>std::hash</code> l\u00e0 m\u1ed9t ki\u1ec3u, \u0111\u01b0\u1ee3c khai b\u00e1o b\u1eb1ng d\u1ea1ng <code>std::hash&lt;type&gt;</code></li> <li>H\u00e0m <code>std::hash</code> s\u1ebd b\u0103m d\u1eef li\u1ec7u th\u00e0nh m\u1ed9t s\u1ed1 nguy\u00ean kh\u00f4ng d\u1ea5u c\u00f3 k\u00edch th\u01b0\u1edbc l\u00e0 <code>size_t</code> (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed7i h\u1ec7 \u0111i\u1ec1u h\u00e0nh)</li> </ul>"},{"location":"Programming/cpp/cpp-3-std-make_share/","title":"std::makeshare","text":""},{"location":"Programming/cpp/cpp-3-std-make_share/#overview","title":"Overview","text":"<p>X\u00e2y d\u1ef1ng m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng thu\u1ed9c lo\u1ea1i Tv\u00e0 g\u00f3i n\u00f3 trong std::shared_ptr b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng args l\u00e0m danh s\u00e1ch tham s\u1ed1 cho h\u00e0m t\u1ea1o c\u1ee7a T.</p> <p>In header <code>&lt;memory&gt;</code> <pre><code>template&lt; class T, class... Args &gt;\nshared_ptr&lt;T&gt; make_shared( Args&amp;&amp;... args );\n</code></pre> H\u00e0m n\u00e0y s\u1ebd tr\u1ea3 ra m\u1ed9t bi\u1ebfn con tr\u1ecf lo\u1ea1i <code>std::shared_ptr</code> c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng lo\u1ea1i <code>T</code> sau khi kh\u1edfi t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng b\u1eb1ng c\u00e1c bi\u1ebfn \u0111\u1ea7u v\u00e0o trong chu\u1ed7i <code>Args&amp;&amp;... args</code>.</p>"},{"location":"Programming/cpp/cpp-3-std-make_share/#detail","title":"Detail","text":""},{"location":"Programming/cpp/cpp-3-std-make_share/#parameters","title":"Parameters","text":"<p> args: Chu\u1ed7i c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ea7u v\u00e0o \u0111\u1ec3 t\u1ea1o ra 1 \u0111\u1ed1i t\u01b0\u1ee3ng theo d\u1ea1ng template <code>T</code></p>"},{"location":"Programming/cpp/cpp-3-std-make_share/#return-value","title":"Return value","text":"<p>\u2003 Tr\u1ea3 ra <code>std::shared_ptr</code> c\u1ee7a m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng lo\u1ea1i <code>T</code> duy nh\u1ea5t. (Kh\u00e1 gi\u1ed1ng singleton)</p>"},{"location":"Programming/cpp/cpp-3-std-make_share/#exceptions","title":"Exceptions","text":"<p>H\u00e0m n\u00e0y s\u1ebd tr\u1ea3 ra <code>std::bad_alloc</code> ho\u1eb7c m\u1ed9t trong nh\u1eefng lo\u1ea1i kh\u00e1c n\u1ebfu trong h\u00e0m construct  c\u1ee7a l\u1edbp <code>T</code> \u0111\u1ecbnh ngh\u0129a.</p>"},{"location":"Programming/cpp/cpp-3-std-make_share/#notes","title":"Notes","text":"<p>H\u00e0m n\u00e0y \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3 thay th\u1ebf vi\u1ec7c x\u00e2y d\u1ef1ng <code>std::shared_ptr&lt;T&gt;(T new(args...))</code> c\u1ee7a m\u1ed9t con tr\u1ecf d\u00f9ng chung t\u1eeb con tr\u1ecf g\u1ed1c nh\u01b0ng l\u1ea1i \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 b\u1edfi l\u1ec7nh g\u1ecdi <code>new</code>.\\ C\u00e1ch g\u1ecdi nguy hi\u1ec3m \u0111\u00f3 khi\u1ebfn h\u00e0m <code>std::shared_ptr</code> s\u1ebd ph\u1ea3i th\u1ef1c hi\u1ec7n \u00edt nh\u1ea5t hai l\u1ea7n kh\u1edfi t\u1ea1o b\u1ed9 nh\u1edb. H\u01a1n n\u1eefa n\u1ebfu c\u00f3 tr\u1ea3 v\u1ec1 exceptions th\u00ec c\u00e1ch g\u1ecdi c\u0169 r\u1ea5t d\u1ec5 g\u00e2y ra l\u1ed7i r\u00f2 r\u1ec9 b\u1ed9 nh\u1edb.\\ \u2192 <code>std::make_shared</code> ra \u0111\u1eddi nh\u1eb1m kh\u1eafc ph\u1ee5c hai \u0111i\u1ec3m y\u1ebfu tr\u00ean.</p> <p>Tham kh\u1ea3o: link</p>"},{"location":"Programming/cpp/cpp-3-std-rotate/","title":"std::rotate","text":""},{"location":"Programming/cpp/cpp-3-std-rotate/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p><code>std::rotate</code> d\u00f9ng \u0111\u1ec3 xoay m\u1ed9t chu\u1ed7i theo chi\u1ec1u \u2b05</p>"},{"location":"Programming/cpp/cpp-3-std-rotate/#vi-du","title":"V\u00ed d\u1ee5","text":"<pre><code>// rotate algorithm example\n#include &lt;iostream&gt;     // std::cout\n#include &lt;algorithm&gt;    // std::rotate\n#include &lt;vector&gt;       // std::vector\n\nint main () {\n    std::vector&lt;int&gt; vec = {1,2,3,4,5,6,7,8,9};\n\n    std::rotate(vec.begin(),vec.begin()+3,vec.end()); // 4 5 6 7 8 9 1 2 3\n\n    // print out content:\n    for (std::vector&lt;int&gt;::iterator it=vec.begin(); it!=vec.end(); ++it)\n    std::cout &lt;&lt; ' ' &lt;&lt; *it;\n    std::cout &lt;&lt; '\\n';\n\n    return 0;\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>4 5 6 7 8 9 1 2 3\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-shuffle/","title":"Shuffle","text":"<p>H\u00e0m n\u00e0y l\u00e0 h\u00e0m d\u00f9ng \u0111\u1ec3 x\u00e1o tr\u1ed9n c\u00e1c ph\u1ea7n t\u1eed n\u1eb1m trong m\u1ea3ng.</p>"},{"location":"Programming/cpp/cpp-3-std-shuffle/#vi-du-mau","title":"V\u00ed d\u1ee5 m\u1eabu","text":"<pre><code>#include &lt;iostream&gt;     // std::cout\n#include &lt;algorithm&gt;    // std::shuffle\n#include &lt;array&gt;        // std::array\n#include &lt;random&gt;       // std::default_random_engine\n#include &lt;chrono&gt;       // std::chrono::system_clock\n\ntemplate &lt;typename T&gt;\nvoid printvec(std::vector&lt;T&gt; &amp;v) {\n    std::cout &lt;&lt; \"{ \";\n    for (T i : v) {\n        std::cout &lt;&lt; i &lt;&lt; \", \";\n    }\n    std::cout &lt;&lt; \" }\" &lt;&lt; std::endl;\n}\n\nint main () {\n    std::vector&lt;int&gt; vec {1,2,3,4,5};\n    // obtain a time-based seed:\n    unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();\n    shuffle (vec.begin(), vec.end(), std::default_random_engine(seed));\n    printvec(vec);\n    return 0;\n}\n</code></pre> <ul> <li><code>seed</code>: C\u00f3 th\u1ec3 thay b\u1eeba b\u1eb1ng m\u1ed9t s\u1ed1 n\u00e0o \u0111\u00f3. Nh\u01b0ng \u0111\u1eb7c \u0111i\u1ec3m th\u00fa v\u1ecb l\u00e0 n\u1ebfu c\u00f9ng <code>seed</code> th\u00ec gi\u00e1 tr\u1ecb sau shuffle s\u1ebd l\u00e0 nh\u01b0 nhau. Vi\u1ec7c \u0111\u01b0a v\u00e0o gi\u00e1 tr\u1ecb c\u1ee7a th\u1eddi gian ch\u1ee7 y\u1ebfu \u0111\u1ec3 t\u1ea1o s\u1ef1 \u0111\u1ed9c nh\u1ea5t, v\u1edbi m\u1ecdi l\u1ea7n g\u1ecdi th\u00ec k\u1ebft qu\u1ea3 \u0111\u01b0a ra lu\u00f4n kh\u00e1c nhau.</li> </ul> <p>Ngo\u00e0i ra th\u00ec c\u00e1i n\u00e0y kh\u00f4ng c\u00f2n g\u00ec th\u00eam n\u1eefa. Xin c\u00e1m \u01a1n!</p>"},{"location":"Programming/cpp/cpp-3-std-sort/","title":"std::sort","text":""},{"location":"Programming/cpp/cpp-3-std-sort/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>C\u00f3 hai \u0111\u1ecbnh ngh\u0129a trong th\u01b0 vi\u1ec7n <code>&lt;algorithm&gt;</code></p> <p><pre><code>template&lt; class RandomIt &gt;\nvoid sort( RandomIt first, RandomIt last );\n</code></pre> <pre><code>template&lt; class RandomIt, class Compare &gt;\nvoid sort( RandomIt first, RandomIt last, Compare comp);\n</code></pre></p>"},{"location":"Programming/cpp/cpp-3-std-sort/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>V\u00ed d\u1ee5 c\u01a1 b\u1ea3n trong <code>std::sort</code></p> <p>main.cpp<pre><code>int main(int argc, char *argv[]) {\n    std::vector&lt;int&gt; v = {\n        44, 75,   7, 72, 53, 83, 94, 97, 78, 57,\n        76, 15,  14, 66, 62, 95, 69, 28, 25, 45,\n        47, 91,  23, 31,  9, 50, 18,  5, 79, 16,\n        82, 22, 100, 73, 19, 93,  6, 33, 56, 39,\n        46, 90,  21,  4, 43, 36, 99, 65, 38, 37,\n        74, 29,  13, 89, 86, 67, 71, 88, 35, 84,\n        10,  8,  96, 40,  2, 27, 48, 20, 42, 52,\n        54, 49,   1, 24,  3, 81, 34, 60, 55, 26,\n        61, 51,  85, 64, 32, 87, 77, 68, 70, 11,\n        63, 41,  59, 98, 58, 30, 12, 17, 80, 92\n    };\n    std::sort(v.begin(), v.end());\n    for(auto i : v) {\n        std::cout &lt;&lt; i &lt;&lt; \", \";\n    }\n    return 0;\n}\n</code></pre> K\u1ebft qu\u1ea3: <pre><code>1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,\n</code></pre></p>"},{"location":"Programming/cpp/cpp-3-std-sort/#thu-tu-sap-xep","title":"Th\u1ee9 t\u1ef1 s\u1eafp x\u1ebfp","text":"<ul> <li>C\u00f3 hai th\u1ee9 t\u1ef1 \u0111\u1ec3 s\u1eafp x\u1ebfp l\u00e0 t\u0103ng d\u1ea7n, v\u00e0 gi\u1ea3m d\u1ea7n. M\u1eb7c \u0111\u1ecbnh s\u1ebd l\u00e0 s\u1eafp x\u1ebfp t\u0103ng d\u1ea7n.</li> <li><code>std</code> cung c\u1ea5p hai <code>Compare</code> \u0111\u1ec3 s\u1eafp x\u1ebfp l\u00e0 std::greater v\u00e0 std::less.</li> </ul> <p>S\u1eed d\u1ee5ng l\u1ea1i v\u00ed d\u1ee5 tr\u00ean v\u1edbi s\u1eeda \u0111\u1ed5i nh\u01b0 sau:</p>"},{"location":"Programming/cpp/cpp-3-std-sort/#stdless","title":"std::less","text":"<pre><code>std::sort(v.begin(), v.end(), std::less&lt;int&gt;());\n</code></pre> <pre><code>1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-sort/#stdgreater","title":"std::greater","text":"<pre><code>std::sort(v.begin(), v.end(), std::greater&lt;int&gt;());\n</code></pre> <pre><code>100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1,\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-sort/#su-dung-lamda","title":"S\u1eed d\u1ee5ng lamda","text":"<p>\u0110\u1ec3 thay \u0111\u1ed5i c\u00e1ch s\u1eafp x\u1ebfp c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng lamda function. V\u00ed d\u1ee5 thay \u0111\u1ed5i nh\u01b0 sau \u0111\u1ec3 s\u1ed1 l\u1ebb lu\u00f4n lu\u00f4n nh\u1ecf h\u01a1n s\u1ed1 ch\u1eb5n:</p> <pre><code>auto custom_compare = [](int a, int b) {\n    int A = a&amp;1;\n    int B = b&amp;1;\n    if(A == B) {\n        return a &lt; b;\n    } else {\n        return !(A &lt; B);\n    }\n};\nstd::sort(v.begin(), v.end(), custom_compare);\n</code></pre> <p>K\u1ebft qu\u1ea3 l\u00e0:</p> <pre><code>1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100,\n</code></pre> <p>Ho\u1eb7c m\u1ed9t c\u00e1ch vi\u1ebft kh\u00e1c, vi\u1ebft tr\u1ef1c ti\u1ebfp lambda function v\u00e0o trong <code>std::sort</code></p> <pre><code>std::sort(v.begin(), v.end(), [](int a, int b) {\n    int A = a&amp;1;\n    int B = b&amp;1;\n    if(A == B) {\n        return a &lt; b;\n    } else {\n        return !(A &lt; B);\n    }\n});\n</code></pre> <pre><code>1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100,\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-sort/#sort-voi-string","title":"Sort v\u1edbi string","text":""},{"location":"Programming/cpp/cpp-3-std-unique/","title":"std::unique","text":"<p>Link tham kh\u1ea3o: https://en.cppreference.com/w/cpp/algorithm/unique</p>"},{"location":"Programming/cpp/cpp-3-std-unique/#mo-ta","title":"M\u00f4 t\u1ea3","text":"<p>Thu\u1eadt to\u00e1n n\u00e0y \u0111\u1ec3 xo\u00e1 nh\u1eefng ph\u1ea7n t\u1eed gi\u1ed1ng nhau c\u00f3 trong m\u1ed9t m\u1ea3ng.</p>"},{"location":"Programming/cpp/cpp-3-std-unique/#chuan-bi","title":"Chu\u1ea9n b\u1ecb","text":"<p>Tr\u01b0\u1edbc ti\u00ean \u0111\u1ec3 thu\u1eadn ti\u1ec7n s\u1ebd chu\u1ea9n b\u1ecb h\u00e0m <code>printvec</code> d\u00f9ng \u0111\u1ec3 in <code>vector</code></p> <pre><code>template &lt;typename T&gt;\nvoid printvec(std::vector&lt;T&gt; &amp;v) {\n    std::cout &lt;&lt; \"{ \";\n    for (T i : v) {\n        std::cout &lt;&lt; i &lt;&lt; \", \";\n    }\n    std::cout &lt;&lt; \" }\" &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-unique/#su-dung","title":"S\u1eed d\u1ee5ng","text":""},{"location":"Programming/cpp/cpp-3-std-unique/#loai-bo-phan-tu-lien-ke-giong-nhau","title":"Lo\u1ea1i b\u1ecf ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 gi\u1ed1ng nhau","text":"<pre><code>#include &lt;iostream&gt;     // std::cout\n#include &lt;algorithm&gt;    // std::unique, std::distance\n#include &lt;vector&gt;       // std::vector\n\ntemplate &lt;typename T&gt;\nvoid printvec(std::vector&lt;T&gt; &amp;v) {\n    std::cout &lt;&lt; \"{ \";\n    for (T i : v) {\n        std::cout &lt;&lt; i &lt;&lt; \", \";\n    }\n    std::cout &lt;&lt; \" }\" &lt;&lt; std::endl;\n}\n\nint main () {\n    std::vector&lt;int&gt; vec = {1,2,2,3,3,5,4,6,4,5,9,5,6};\n    std::cout &lt;&lt; \"Origin: \";\n    printvec&lt;int&gt;(vec);\n\n    std::vector&lt;int&gt;::iterator it;\n    it = std::unique (vec.begin(), vec.end());\n    std::cout &lt;&lt; \"Vec:    \";\n    printvec&lt;int&gt;(vec);\n\n    return 0;\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Origin: { 1, 2, 2, 3, 3, 5, 4, 6, 4, 5, 9, 5, 6,  }\nVec:    { 1, 2, 3, 5, 4, 6, 4, 5, 9, 5, 6, 5, 6,  }\n</code></pre> <p>C\u00f3 th\u1ec3 th\u1ea5y c\u00e1c ph\u1ea7n t\u1eed kh\u00f4ng th\u1ecfa m\u00e3n s\u1ebd b\u1ecb \u0111\u1ea9y d\u1ea7n d\u1ea7n xu\u1ed1ng ph\u00eda d\u01b0\u1edbi.</p>"},{"location":"Programming/cpp/cpp-3-std-unique/#loai-bo-phan-thua","title":"Lo\u1ea1i b\u1ecf ph\u1ea7n th\u1eeba","text":"<p>Trong v\u00ed d\u1ee5 tr\u00ean, con tr\u1ecf <code>it</code> \u0111\u01b0\u1ee3c tr\u1ea3 ra l\u00e0 con tr\u1ecf \u0111\u1ebfn ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng kh\u00f4ng b\u1ecb lo\u1ea1i b\u1ecf. N\u00f3i ng\u1eafn g\u1ecdn h\u01a1n, t\u1eeb <code>[vec.begin(), it]</code> l\u00e0 \u0111\u1ed9 d\u00e0i chu\u1ed7i h\u1ee3p l\u1ec7 c\u1ee7a chu\u1ed7i <code>vector</code>. C\u00f3 th\u1ec3 d\u00f9ng <code>std::resize</code> \u0111\u1ec3 lo\u1ea1i b\u1ecf c\u00e1c ph\u1ea7n t\u1eed b\u1ecb lo\u1ea1i b\u1ecf \u1edf cu\u1ed1i.</p> <pre><code>int main () {\n    std::vector&lt;int&gt; vec = {1,2,2,3,3,5,4,6,4,5,9,5,6};\n    std::cout &lt;&lt; \"Origin: \";\n    printvec&lt;int&gt;(vec);\n\n    std::vector&lt;int&gt;::iterator it;\n    it = std::unique (vec.begin(), vec.end());\n    // Remove garbage Value\n    vec.resize( std::distance(vec.begin(),it) );\n    std::cout &lt;&lt; \"Vec:    \";\n    printvec&lt;int&gt;(vec);\n\n    return 0;\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Origin: { 1, 2, 2, 3, 3, 5, 4, 6, 4, 5, 9, 5, 6,  }\nVec:    { 1, 2, 3, 5, 4, 6, 4, 5, 9, 5, 6,  }\n</code></pre> <p>Gi\u1ea3i th\u00edch:</p> <ul> <li>C\u00e1c c\u1eb7p <code>2,2</code>,<code>3,3</code> l\u00e0 hai ph\u1ea7n t\u1eed gi\u1ed1ng nhau li\u1ec1n k\u1ec1 \u0111\u00e3 b\u1ecb lo\u1ea1i b\u1ecf.</li> </ul>"},{"location":"Programming/cpp/cpp-3-std-unique/#tao-chuoi-voi-phan-tu-oc-nhat","title":"T\u1ea1o chu\u1ed7i v\u1edbi ph\u1ea7n t\u1eed \u0111\u1ed9c nh\u1ea5t","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 t\u1ea1o chu\u1ed7i th\u00e0nh ph\u1ea7n t\u1eed m\u00e0 m\u1ed7i ph\u1ea7n t\u1eed ho\u00e0n to\u00e0n kh\u00e1c nhau th\u00ec c\u1ea7n d\u00f9ng th\u00eam h\u00e0m <code>std::sort</code></p> <pre><code>int main () {\n    std::vector&lt;int&gt; vec = {1,2,2,3,3,5,4,6,4,5,9,5,6};\n    std::cout &lt;&lt; \"Origin: \";\n    printvec&lt;int&gt;(vec);\n\n    // Sort\n    std::sort(vec.begin(), vec.end());\n\n    std::vector&lt;int&gt;::iterator it;\n    it = std::unique (vec.begin(), vec.end());\n    // Remove garbage Value\n    vec.resize( std::distance(vec.begin(),it) );\n    std::cout &lt;&lt; \"Vec:    \";\n    printvec&lt;int&gt;(vec);\n\n    return 0;\n}\n</code></pre> <p>L\u00fac n\u00e0y k\u1ebft qu\u1ea3 gi\u1ea3m \u0111i kh\u00e1 nhi\u1ec1u.</p> <pre><code>Origin: { 1, 2, 2, 3, 3, 5, 4, 6, 4, 5, 9, 5, 6,  }\nVec:    { 1, 2, 3, 4, 5, 6, 9,  }\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-unique/#tuy-bien-voi-lambda","title":"T\u00f9y bi\u1ebfn v\u1edbi Lambda","text":"<p>D\u00f9ng lambda function \u0111\u1ec3 t\u00f9y bi\u1ebfn c\u00e1ch th\u1ee9c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a h\u00e0m <code>std::unique</code></p>"},{"location":"Programming/cpp/cpp-3-std-unique/#xem-xet-nguyen-ban","title":"Xem x\u00e9t nguy\u00ean b\u1ea3n","text":"<p>Tr\u01b0\u1edbc ti\u00ean th\u00ec xem x\u00e9t t\u00ednh n\u0103ng nguy\u00ean b\u1ea3n. H\u00e0m truy\u1ec1n v\u00e0o so s\u00e1nh hai s\u1ed1 <code>a</code> v\u00e0 <code>b</code> v\u00e0 tr\u1ea3 ra k\u1ebft qu\u1ea3 so s\u00e1nh <code>==</code>.</p> <pre><code>bool compare (int a, int b) {\n    return (a==b);\n}\n</code></pre> <p>D\u01b0a h\u00e0m v\u00e0o trong <code>std::unique</code></p> <pre><code>std::unique (vec.begin(), vec.end(), compare);\n</code></pre>"},{"location":"Programming/cpp/cpp-3-std-unique/#lambda-function","title":"Lambda function","text":"<pre><code>std::unique (vec.begin(), vec.end(), [](int a, int b) {return a==b;});\n</code></pre>"},{"location":"Programming/cpp/cpp-project-solver-sudoku/","title":"Gi\u1ea3i b\u1ea3ng Sudoku","text":""},{"location":"Programming/cpp/cpp-project-solver-sudoku/#lich-su","title":"L\u1ecbch s\u1eed","text":"<p>B\u1eaft \u0111\u1ea7u t\u1eeb m\u1ed9t c\u00e2u \u0111\u1ed1 tr\u00ean https://leetcode.com/problems/sudoku-solver/. Ng\u1ed3i m\u00e0y m\u00f2 c\u00e1ch gi\u1ea3i nh\u01b0ng kh\u00f4ng th\u00e0nh c\u00f4ng, \u00edt nh\u1ea5t l\u00e0 m\u00ecnh c\u0169ng c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c m\u1ea5y b\u1ea3ng sudoku \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"Programming/cpp/cpp-project-solver-sudoku/#ma-nguon","title":"M\u00e3 ngu\u1ed3n","text":"Xem m\u00e3 ngu\u1ed3n main.cpp<pre><code>#include \"stdio.h\"\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;chrono&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;bitset&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\n#define _1_ (000000001b)\n#define _2_ (000000010b)\n#define _3_ (000000100b)\n#define _4_ (000001000b)\n#define _5_ (000010000b)\n#define _6_ (000100000b)\n#define _7_ (001000000b)\n#define _8_ (010000000b)\n#define _9_ (100000000b)\n\n// Export function\n\nconst std::vector&lt;std::vector&lt;int&gt;&gt; id_row = {\n    { 0, 1, 2, 3, 4, 5, 6, 7, 8},\n    { 9,10,11,12,13,14,15,16,17},\n    {18,19,20,21,22,23,24,25,26},\n    {27,28,29,30,31,32,33,34,35},\n    {36,37,38,39,40,41,42,43,44},\n    {45,46,47,48,49,50,51,52,53},\n    {54,55,56,57,58,59,60,61,62},\n    {63,64,65,66,67,68,69,70,71},\n    {72,73,74,75,76,77,78,79,80}\n};\nconst std::vector&lt;std::vector&lt;int&gt;&gt; id_col {\n    { 0, 9,18,27,36,45,54,63,72},\n    { 1,10,19,28,37,46,55,64,73},\n    { 2,11,20,29,38,47,56,65,74},\n    { 3,12,21,30,39,48,57,66,75},\n    { 4,13,22,31,40,49,58,67,76},\n    { 5,14,23,32,41,50,59,68,77},\n    { 6,15,24,33,42,51,60,69,78},\n    { 7,16,25,34,43,52,61,70,79},\n    { 8,17,26,35,44,53,62,71,80}\n};\nconst std::vector&lt;std::vector&lt;int&gt;&gt; id_box {\n    { 0, 1, 2, 9,10,11,18,19,20},\n    { 3, 4, 5,12,13,14,21,22,23},\n    { 6, 7, 8,15,16,17,24,25,26},\n    {27,28,29,36,37,38,45,46,47},\n    {30,31,32,39,40,41,48,49,50},\n    {33,34,35,42,43,44,51,52,53},\n    {54,55,56,63,64,65,72,73,74},\n    {57,58,59,66,67,68,75,76,77},\n    {60,61,62,69,70,71,78,79,80},\n};\n\ntemplate&lt;typename T&gt;\nvoid print_2d_vector(std::vector&lt;std::vector&lt;T&gt;&gt; &amp;board, const char* prompt) {\n    for(std::vector&lt;T&gt; V : board) {\n        for(T v : V) {\n            printf(prompt, v);\n        }\n        printf(\"\\n\");\n    }\n}\n\nvoid solveSudoku(vector&lt;vector&lt;char&gt;&gt;&amp; board) {\n    std::vector&lt;std::bitset&lt;9&gt;&gt; data;\n    std::vector&lt;int&gt; marker;\n\n    // Fill data\n    for(auto v : board) {\n        for(auto c : v) {\n            switch (c)\n            {\n                case '1': data.push_back(std::bitset&lt;9&gt;(0b000000001)); marker.push_back(1);  break;\n                case '2': data.push_back(std::bitset&lt;9&gt;(0b000000010)); marker.push_back(1);  break;\n                case '3': data.push_back(std::bitset&lt;9&gt;(0b000000100)); marker.push_back(1);  break;\n                case '4': data.push_back(std::bitset&lt;9&gt;(0b000001000)); marker.push_back(1);  break;\n                case '5': data.push_back(std::bitset&lt;9&gt;(0b000010000)); marker.push_back(1);  break;\n                case '6': data.push_back(std::bitset&lt;9&gt;(0b000100000)); marker.push_back(1);  break;\n                case '7': data.push_back(std::bitset&lt;9&gt;(0b001000000)); marker.push_back(1);  break;\n                case '8': data.push_back(std::bitset&lt;9&gt;(0b010000000)); marker.push_back(1);  break;\n                case '9': data.push_back(std::bitset&lt;9&gt;(0b100000000)); marker.push_back(1);  break;\n                case '.': data.push_back(std::bitset&lt;9&gt;(0b111111111)); marker.push_back(10); break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    bool repeat = true;\n    int max_test = 1000000;\n    while (repeat &amp;&amp; --max_test)\n    {\n        // Fill data\n        // Reach all in row\n        for(int i=0; i&lt;9; ++i) {\n            std::bitset&lt;9&gt; rowbit(0b000000000);\n            for(int j=0; j&lt;9; ++j) {\n                if(marker[id_row[i][j]] == 1) {\n                    rowbit |= data[id_row[i][j]];\n                }\n            }\n            for(int j=0; j&lt;9; ++j) {\n                if(marker[id_row[i][j]] != 1) {\n                    data[id_row[i][j]] &amp;= ~rowbit;\n                }\n            }\n        }\n\n        // Reach all in col\n        for(int i=0; i&lt;9; ++i) {\n            std::bitset&lt;9&gt; colbit(0b000000000);\n            for(int j=0; j&lt;9; ++j) {\n                if(marker[id_col[i][j]] == 1) {\n                    colbit |= data[id_col[i][j]];\n                }\n            }\n            for(int j=0; j&lt;9; ++j) {\n                if(marker[id_col[i][j]] != 1) {\n                    data[id_col[i][j]] &amp;= ~colbit;\n                }\n            }\n        }\n\n        // Reach all in box\n        for(int i=0; i&lt;9; ++i) {\n            std::bitset&lt;9&gt; boxbit(0b000000000);;\n            for(int j=0; j&lt;9; ++j) {\n                if(marker[id_box[i][j]] == 1) {\n                    boxbit |= data[id_box[i][j]];\n                }\n            }\n            for(int j=0; j&lt;9; ++j) {\n                if(marker[id_box[i][j]] != 1) {\n                    data[id_box[i][j]] &amp;= ~boxbit;\n                }\n            }\n        }\n\n        // Re-check map.\n        repeat = false;\n        for(int i=0; i&lt;81; ++i) {\n            if(1 != marker[i]) {\n                if(data[i].count() == 0) {\n                    printf(\"--- Wrong Table ---\\n\");\n                    goto exit;\n                }\n                if(marker[i] != data[i].count()) {\n                    marker[i] = data[i].count();\n                    repeat = true;\n                }\n            }\n        }\n    }\nexit:\n    auto get_number_char = [](std::bitset&lt;9&gt; input) {\n        if(std::bitset&lt;9&gt;(0b000000001) == input) return '1';\n        if(std::bitset&lt;9&gt;(0b000000010) == input) return '2';\n        if(std::bitset&lt;9&gt;(0b000000100) == input) return '3';\n        if(std::bitset&lt;9&gt;(0b000001000) == input) return '4';\n        if(std::bitset&lt;9&gt;(0b000010000) == input) return '5';\n        if(std::bitset&lt;9&gt;(0b000100000) == input) return '6';\n        if(std::bitset&lt;9&gt;(0b001000000) == input) return '7';\n        if(std::bitset&lt;9&gt;(0b010000000) == input) return '8';\n        if(std::bitset&lt;9&gt;(0b100000000) == input) return '9';\n        return '.';\n    };\n\n    for(int i=0; i&lt;9; ++i) {\n        for(int j=0; j&lt;9; ++j) {\n            board[i][j] = get_number_char(data[i*9+j]);\n        }\n    }\n}\n\nint main(int argc, char const *argv[]) {\n    std::vector&lt;std::vector&lt;char&gt;&gt; input;\n    std::ifstream inputFile(argv[1]); // Replace with your file name\n\n    if (!inputFile) {\n        printf(\"Unable to open file %s\", argv[1]);\n        return 1; // Return with error code\n    }\n\n    std::string line;\n    while (std::getline(inputFile, line)) {\n        vector&lt;char&gt; vc;\n        for (char c : line)\n        {\n            if((('1'&lt;=c)&amp;&amp;(c&lt;='9'))||c=='.') \n                vc.push_back(c);\n        }\n        input.push_back(vc);\n    }\n\n    inputFile.close(); // Close the file\n    printf(\"------ IN -------\\n\");\n    print_2d_vector&lt;char&gt;(input, \"%c \");\n    printf(\"------ OUT ------\\n\");\n    solveSudoku(input);\n    print_2d_vector&lt;char&gt;(input, \"%c \");\n\n    return 0; // Return success\n}\n</code></pre>"},{"location":"Programming/cpp/cpp-project-solver-sudoku/#build","title":"Build","text":"<pre><code>g++ -std=c++11 -O2 -Wall main.cpp -o main\n</code></pre>"},{"location":"Programming/cpp/cpp-reference-document/","title":"Reference &amp; Document","text":""},{"location":"Programming/cpp/cpp-reference-document/#tra-cuu","title":"Tra c\u1ee9u","text":"<p>Hai t\u00e0i li\u1ec7u tra c\u1ee9u \u0111\u00e1ng tin c\u1eady nh\u1ea5t d\u00e0nh cho ng\u00f4n ng\u1eef n\u00e0y:</p> <ul> <li>cplusplus.com</li> <li>en.cppreference.com</li> </ul>"},{"location":"Programming/cpp/cpp-reference-document/#tai-lieu-nghien-cuu-them","title":"T\u00e0i li\u1ec7u nghi\u00ean c\u1ee9u th\u00eam","text":""},{"location":"Programming/cpp/cpp-reference-document/#tai-lieu-tieng-viet","title":"T\u00e0i li\u1ec7u ti\u1ebfng Vi\u1ec7t","text":"<p>C\u00f3 m\u1ed9t trang web kh\u00e1 l\u00e0 hay v\u1ec1 hai ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh C/C++ (ngo\u00e0i greekforgreek). Trong trang h\u01b0\u1edbng d\u1eabn n\u00e0y c\u00f3 l\u1ed9 tr\u00ecnh kh\u00e1 \u0111\u1ea7y d\u1ee7 \u0111\u1ec3 h\u1ecdc ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh C++. \u0110\u00f3 l\u00e0 https://blog.28tech.com.vn/</p>"},{"location":"Programming/cpp/cpp-reference-document/#tai-lieu-tong-hop","title":"T\u00e0i li\u1ec7u t\u1ed5ng h\u1ee3p","text":"<p>Ngo\u00e0i ra c\u00f2n m\u1ed9t s\u1ed1 t\u00e0i li\u1ec7u kh\u00e1c \u0111\u01b0\u1ee3c t\u1ed5ng h\u1ee3p t\u1eeb hai ngu\u1ed3n:</p> <ul> <li>https://www.reddit.com/r/cpp_questions/comments/yai99i/what_is_the_best_book_for_advanced_c/?rdt=53761</li> <li>https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list</li> </ul> Cho ng\u01b0\u1eddi ch\u01b0a t\u1eebng l\u1eadp tr\u00ecnh <ul> <li>C++ Primer (5th Edition)</li> <li>Programming: Principles and Practice Using C++ (C++ In-depth) 3rd - (Bjarne Stroustrup)</li> </ul> \u0110\u00e3 bi\u1ebft l\u1eadp tr\u00ecnh <ul> <li>Tour of C++, A (C++ In-Depth Series) 1st - (Bjarne Stroustrup)</li> <li>Tour of C++, A (C++ In-Depth Series) 2nd - (Bjarne Stroustrup)</li> <li>Tour of C++, A (C++ In-Depth Series) 3rd - (Bjarne Stroustrup)</li> <li>Optimized C++ - Kurt Guntheroth</li> <li>Accelerated C++: Practical Programming by Example - (Andrew Koenig &amp; Barbara Moo)</li> </ul> Hi\u1ec3u s\u00e2u h\u01a1n v\u00e0 t\u1ed1i \u01b0u ho\u00e1 t\u1ed1c \u0111\u1ed9 ch\u01b0\u01a1ng tr\u00ecnh C++ <ul> <li>Effective C++: 55 Specific Ways to Improve Your Programs and Designs - (Scott Meyers)</li> <li>Effective Modern C++: 42 Specific Ways to Improve Your Use of C++11 and C++14 - (Scott Meyers)</li> <li>Effective STL: 50 Specific Ways to Improve Your Use of the Standard Template Library 1st Edition - (Scott Meyers)</li> </ul> Kh\u00e1 <ul> <li>More Effective C++: 35 New Ways to Improve Your Programs and Designs - (Scott Meyers)</li> <li>Exceptional C++: 47 Engineering Puzzles, Programming Problems, and Solutions - (Herb Sutter)</li> <li>More Exceptional C++: 40 New Engineering Puzzles, Programming Problems, and Solutions 1st Edition - (Herb Sutter)</li> <li>Exceptional C++ Style: 40 New Engineering Puzzles, Programming Problems, and Solutions 1st Edition - (Herb Sutter)</li> <li>C++ Coding Standards: 101 Rules, Guidelines, and Best Practices 1st Edition - (Herb Sutter and Andrei Alexandrescu)</li> <li>C++ Templates: The Complete Guide 1st Edition - (David Vandevoorde and Nicolai M. Josuttis)</li> <li>C++17 - The Complete Guide - (Nicolai M. Josuttis)</li> <li>C++20 - The Complete Guide - (Nicolai M. Josuttis)</li> <li>C++ in Action - (Bartosz Milewski)</li> <li>Functional Programming in C++ - (Ivan \u010cuki\u0107)</li> </ul> N\u00e2ng cao <ul> <li>Modern C++ design - (Andrei Alexandrescu)</li> <li>C++ Template Metaprogramming - (David Abrahams and Aleksey Gurtovoy)</li> <li>C++ Concurrency In Action - (Anthony Williams)</li> <li>Advanced C++ Metaprogramming - (Davide Di Gennaro)</li> <li>Professional C++ - (Marc Gregoire)</li> <li>Large Scale C++ volume I, Process and architecture (2020) - (John Lakos)</li> <li>C++ Software Design - (Klaus Iglberger)</li> </ul> Nghi\u00ean c\u1ee9u t\u1ef1 do <ul> <li>The C++ Programming Language - (Bjarne Stroustrup)</li> <li>C++ Standard Library Tutorial and Reference - (Nicolai Josuttis)</li> <li>The C++ IO Streams and Locales - (Angelika Langer and Klaus Kreft)</li> </ul>"}]}